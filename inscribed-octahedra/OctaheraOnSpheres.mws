{VERSION 11 0 "Linux" "11.0" }
{USTYLETAB {PSTYLE "Heading 4" -1 20 1 {CSTYLE "" -1 -1 "Times" 1 10 
0 0 0 1 1 1 2 2 2 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Or
dered List 5" -1 200 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2
 2 1 0 0 1 }1 1 0 0 3 3 2 144 2 0 2 2 -1 1 }{PSTYLE "Ordered List 1" 
-1 201 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }1 
1 0 0 3 3 2 0 2 0 2 2 -1 1 }{PSTYLE "Text Output" -1 2 1 {CSTYLE "" -1
 -1 "Courier" 1 10 0 0 255 1 2 2 2 2 2 1 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 
2 2 -1 1 }{PSTYLE "Bullet Item" -1 15 1 {CSTYLE "" -1 -1 "Times" 1 12 
0 0 0 1 2 2 2 2 2 2 1 0 0 1 }1 1 0 0 3 3 2 0 2 0 2 2 -1 1 }{PSTYLE "Le
ft Justified Maple Output" -1 12 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0
 1 2 2 2 2 2 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Help" 
-1 10 1 {CSTYLE "" -1 -1 "Courier" 1 9 0 0 255 1 2 2 2 2 2 1 1 0 0 1 }
1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Author" -1 19 1 {CSTYLE "" -1 
-1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }3 1 0 0 8 8 2 0 2 0 2 2 
-1 1 }{PSTYLE "Diagnostic" -1 9 1 {CSTYLE "" -1 -1 "Courier" 1 10 64 
128 64 1 2 2 2 2 2 1 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "H
eading 2" -1 4 1 {CSTYLE "" -1 -1 "Times" 1 14 0 0 0 1 2 1 2 2 2 2 1 0
 0 1 }1 1 0 0 8 2 2 0 2 0 2 2 -1 1 }{PSTYLE "Ordered List 3" -1 202 1 
{CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }1 1 0 0 3 3
 2 72 2 0 2 2 -1 1 }{PSTYLE "Maple Plot" -1 13 1 {CSTYLE "" -1 -1 "Tim
es" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }3 1 0 0 0 0 2 0 2 0 2 2 -1 1 }
{PSTYLE "Normal" -1 0 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 
2 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Annotation Title" 
-1 203 1 {CSTYLE "" -1 -1 "Times" 1 18 0 0 0 1 2 1 2 2 2 2 1 0 0 1 }3 
1 0 0 12 12 2 0 2 0 2 2 -1 1 }{PSTYLE "Dash Item" -1 16 1 {CSTYLE "" 
-1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }1 1 0 0 3 3 2 0 2 0 2 
2 -1 1 }{PSTYLE "Heading 3" -1 5 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0
 1 1 1 2 2 2 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Ordered
 List 4" -1 204 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 
0 0 1 }1 1 0 0 3 3 2 108 2 0 2 2 -1 1 }{PSTYLE "Maple Output" -1 11 1 
{CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }3 1 0 0 0 0
 2 0 2 0 2 2 -1 1 }{PSTYLE "List Item" -1 14 1 {CSTYLE "" -1 -1 "Times
" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }1 1 0 0 3 3 2 0 2 0 2 2 -1 1 }
{PSTYLE "Line Printed Output" -1 6 1 {CSTYLE "" -1 -1 "Courier" 1 10 0
 0 255 1 2 2 2 2 2 1 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "F
ixed Width" -1 17 1 {CSTYLE "" -1 -1 "Courier" 1 10 0 0 0 1 2 2 2 2 2 
2 1 0 0 1 }3 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Warning" -1 7 1 
{CSTYLE "" -1 -1 "Courier" 1 10 0 0 255 1 2 2 2 2 2 1 1 0 0 1 }1 1 0 0
 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Error" -1 8 1 {CSTYLE "" -1 -1 "Courie
r" 1 10 255 0 255 1 2 2 2 2 2 1 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 
}{PSTYLE "Heading 1" -1 3 1 {CSTYLE "" -1 -1 "Times" 1 18 0 0 0 1 2 1 
2 2 2 2 1 0 0 1 }1 1 0 0 8 4 2 0 2 0 2 2 -1 1 }{PSTYLE "Title" -1 18 1
 {CSTYLE "" -1 -1 "Times" 1 18 0 0 0 1 2 1 1 2 2 2 1 0 0 1 }3 1 0 0 12
 12 2 0 2 0 2 2 -1 1 }{PSTYLE "Ordered List 2" -1 205 1 {CSTYLE "" -1 
-1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }1 1 0 0 3 3 2 36 2 0 2 2 
-1 1 }{CSTYLE "2D Math Italic Small201206208" -1 200 "Times" 1 1 0 0 0
 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "Help Variable" -1 25 "Courier" 1 12 0
 0 0 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "Text" -1 201 "Times" 1 12 0 0 0 1
 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "Help Bold" -1 39 "Times" 1 12 0 0 0 1 2
 1 2 2 2 2 0 0 0 1 }{CSTYLE "Page Number" -1 33 "Times" 1 12 0 0 0 1 2
 2 2 2 2 2 0 0 0 1 }{CSTYLE "2D Math Italic Small" -1 202 "Times" 1 1 
0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "Help Nonterminal" -1 24 "Courier
" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "Default" -1 38 "Times" 1 
12 0 0 0 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "Maple Comment" -1 21 "Courier
" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "Maple Input" -1 0 "Courie
r" 1 12 255 0 0 1 2 1 2 2 1 2 0 0 0 1 }{CSTYLE "2D Math Small" -1 7 "T
imes" 1 1 0 0 0 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "2D Inert Output" -1 
203 "Times" 1 12 144 144 144 1 2 2 2 2 1 2 0 0 0 1 }{CSTYLE "Help Fixe
d" -1 23 "Courier" 1 10 0 0 0 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "Popup" 
-1 31 "Times" 1 12 0 128 128 1 1 2 1 2 2 2 0 0 0 1 }{CSTYLE "Plot Titl
e" -1 27 "Times" 1 10 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "2D Input" 
-1 19 "Times" 1 12 255 0 0 1 2 2 2 2 1 2 0 0 0 1 }{CSTYLE "Copyright" 
-1 34 "Times" 1 10 0 0 0 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "Maple Input P
laceholder" -1 204 "Courier" 1 12 200 0 200 1 2 1 2 2 1 2 0 0 0 1 }
{CSTYLE "2D Math Bold Small" -1 10 "Times" 1 1 0 0 0 1 2 1 2 2 2 2 0 0
 0 1 }{CSTYLE "2D Math" -1 2 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 0 0 0 1 
}{CSTYLE "Annotation Text" -1 205 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 0 0
 0 1 }{CSTYLE "Help Notes" -1 37 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 
0 1 }{CSTYLE "Help Underlined Bold" -1 41 "Times" 1 12 0 0 0 1 1 1 2 2
 2 2 0 0 0 1 }{CSTYLE "Hyperlink" -1 17 "Times" 1 12 0 128 128 1 2 2 1
 2 2 2 0 0 0 1 }{CSTYLE "2D Math Symbol 2" -1 16 "Times" 1 12 0 0 0 1 
2 2 2 2 2 2 0 0 0 1 }{CSTYLE "Equation Label" -1 206 "Times" 1 12 0 0 
0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "Plot Text" -1 28 "Times" 1 8 0 0 0 1
 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "2D Math Italic Small201" -1 207 "Times"
 1 1 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "Help Italic" -1 42 "Times" 
1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "Help Heading" -1 26 "Times"
 1 14 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "Output Labels" -1 29 "Time
s" 1 8 0 0 0 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "Help Normal" -1 30 "Times
" 1 12 0 0 0 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "2D Comment" -1 18 "Times"
 1 12 0 0 0 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "Help Maple Name" -1 35 "Ti
mes" 1 12 104 64 92 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "2D Output" -1 20 "
Times" 1 12 0 0 255 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "Dictionary Hyperli
nk" -1 45 "Times" 1 12 147 0 15 1 2 2 1 2 2 2 0 0 0 1 }{CSTYLE "Help E
mphasized" -1 22 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "He
lp Italic Bold" -1 40 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }
{CSTYLE "LaTeX" -1 32 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 0 0 0 1 }
{CSTYLE "Help Menus" -1 36 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }
{CSTYLE "2D Math Italic Small201206207" -1 208 "Times" 1 1 0 0 0 1 1 2
 2 2 2 2 0 0 0 1 }{CSTYLE "Prompt" -1 1 "Courier" 1 12 0 0 0 1 2 1 2 2
 2 2 0 0 0 1 }{CSTYLE "Help Underlined" -1 44 "Times" 1 12 0 0 0 1 2 2
 1 2 2 2 0 0 0 1 }{CSTYLE "Help Underlined Italic" -1 43 "Times" 1 12 
0 0 0 1 1 2 1 2 2 2 0 0 0 1 }{CSTYLE "2D Math Italic Small201206" -1 
209 "Times" 1 1 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "2D Math Bold" -1
 5 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "2D Math Italic" 
-1 3 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 210 "Cour
ier" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 211 "Courier" 1 
12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 206 1 {CSTYLE "" -1 -1 "
Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 
-1 1 }}
{SECT 0 {SECT 1 {PARA 3 "" 0 "" {TEXT 212 23 "Homology and Cohomology
" }}{EXCHG {PARA 0 "" 0 "" {TEXT 201 105 "We want to calculate homolog
y and cohomology, given a (maybe cellular) chain complex with boundary
 maps:\n" }{TEXT 201 1 "\n" }{TEXT 201 9 "Homology\n" }}{PARA 0 "" 0 "
" {TEXT 201 53 "wants to have a chain complex of the following kind:\n
" }{TEXT 201 40 "Z^n3 ---(D3)---> Z^n2 ---(D2)---> Z^n1,\n" }{TEXT 
201 113 "where A and B are the matrices giving the boudaries, whose co
lumns are the images of the standard basis vectors.\n" }{TEXT 201 136 
"The Output is a vector b and a matrix Znett, such that the columns of
 Znett are representatives of a generating system of the homology \n" 
}}{PARA 0 "> " 0 "" {MPLTEXT 1 0 27 "Homology := proc (D3, D2) \n" }
{MPLTEXT 1 0 75 "local i, j, k, ZZ, S2, U2, V2, n3, n2, n1, r, Z, B, S
3, U3, V3, b, Znett; \n" }{MPLTEXT 1 0 31 "with(LinearAlgebra[Generic]
); \n" }{MPLTEXT 1 0 22 "with(LinearAlgebra); \n" }{MPLTEXT 1 0 83 "ZZ
[`0`], ZZ[`1`], ZZ[`+`], ZZ[`-`], ZZ[`*`], ZZ[`=`] := 0, 1, `+`, `-`, \+
`*`, `=`; \n" }{MPLTEXT 1 0 22 "ZZ[Gcdex] := igcdex; \n" }{MPLTEXT 1 
0 33 "ZZ[Quo], ZZ[Rem] := iquo, irem; \n" }{MPLTEXT 1 0 47 "ZZ[UnitPar
t], ZZ[EuclideanNorm] := sign, abs; \n" }{MPLTEXT 1 0 28 "n3 := Column
Dimension(D3); \n" }{MPLTEXT 1 0 25 "n2 := RowDimension(D3); \n" }
{MPLTEXT 1 0 35 "if n2 <> ColumnDimension(D2) then \n" }{MPLTEXT 1 0 
78 "  printf(\"Error: #rows of D3=%d <> #cols of D2=%d!\",n2,ColumnDim
ension(D2)); \n" }{MPLTEXT 1 0 9 "end if; \n" }{MPLTEXT 1 0 25 "n1 := \+
RowDimension(D3); \n" }{MPLTEXT 1 0 31 "if 0 < Rank(`.`(D2, D3)) then \+
\n" }{MPLTEXT 1 0 29 "  printf(\"Error: D2.D3<>0\") \n" }{MPLTEXT 1 0 
9 "end if; \n" }{MPLTEXT 1 0 14 "S2, U2, V2 := " }{MPLTEXT 1 0 33 "Lin
earAlgebra[Generic][SmithForm]" }{MPLTEXT 1 0 4 "[ZZ]" }{MPLTEXT 1 0 
33 "(D2, output = ['S', 'U', 'V']); \n" }{MPLTEXT 1 0 16 "r := Rank(S2
); \n" }{MPLTEXT 1 0 12 "k := n2-r; \n" }{MPLTEXT 1 0 15 "if k = 0 the
n \n" }{MPLTEXT 1 0 34 "  printf(\"There are no cycles!\") \n" }
{MPLTEXT 1 0 9 "end if; \n" }{MPLTEXT 1 0 29 "Z := V2[1 .. -1, -k .. -
1]; \n" }{MPLTEXT 1 0 55 "B := (`.`(MatrixInverse(V2), D3))[-k .. -1, \+
1 .. -1]; \n" }{MPLTEXT 1 0 14 "S3, U3, V3 := " }{MPLTEXT 1 0 33 "Line
arAlgebra[Generic][SmithForm]" }{MPLTEXT 1 0 4 "[ZZ]" }{MPLTEXT 1 0 
32 "(B, output = ['S', 'U', 'V']); \n" }{MPLTEXT 1 0 37 "Znett := `.`(
Z, MatrixInverse(U3)); \n" }{MPLTEXT 1 0 21 "b := Array(1 .. k); \n" }
{MPLTEXT 1 0 48 "for i from 1 to min(k, ColumnDimension(S3)) do \n" }
{MPLTEXT 1 0 20 "  b[i] := S3[i, i] \n" }{MPLTEXT 1 0 9 "end do; \n" }
{MPLTEXT 1 0 1 "#" }{MPLTEXT 1 0 57 "while ArrayNumElems(b)>0 and (b[1
] = 1 or b[1] = -1) do \n" }{MPLTEXT 1 0 1 "#" }{MPLTEXT 1 0 34 "  b :
= b[2 .. ArrayNumElems(b)]; \n" }{MPLTEXT 1 0 1 "#" }{MPLTEXT 1 0 31 "
  Znett := DeleteColumn(Z, 1) \n" }{MPLTEXT 1 0 1 "#" }{MPLTEXT 1 0 9 
"end do; \n" }{MPLTEXT 1 0 1 "b" }{MPLTEXT 1 0 9 ", Znett \n" }
{MPLTEXT 1 0 9 "end proc:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 
"" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 201 1 "\n" }{TEXT 201 11 "Cohomolog
y\n" }{TEXT 201 1 "\n" }{TEXT 201 53 "wants to have a chain complex of
 the following kind:\n" }{TEXT 201 40 "Z^n3 ---(D3)---> Z^n2 ---(D2)--
-> Z^n1,\n" }{TEXT 201 63 "as above. The procedure dualizes it and app
lies Homology then.\n" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 28 "Cohomology
 := proc (D3, D2)\n" }{MPLTEXT 1 0 22 "with(LinearAlgebra); \n" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 40 "Homology(Transpose(D2), Transpos
e(D3)) \n" }{MPLTEXT 1 0 9 "end proc:" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "with(LinearAlgebra
):" }{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }
}}{EXCHG {PARA 0 "" 0 "" {TEXT 201 1 "\n" }{TEXT 201 46 "Beispiel Toru
s: (1. Homologie und Cohomologie)" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
95 "D2, D1 := Matrix([[1, -1], [1, -1], [-1, 1], [1, -1]]), Matrix([[1
, 0, 0, -1], [-1, 0, 0, 1]]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6$-I'Ma
trixG6$%*protectedGI(_syslibG6\"6#/I$%idGF(\"*s0JN\"-F$6#/F+\"*G%4`8" 
}}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "Homology(D2,D1);" }}
{PARA 11 "" 1 "" {XPPMATH 20 "6$-I&ArrayG%*protectedG6#/I$%idG6\"\"*;%
e%R\"-I'MatrixG6$F%I(_syslibGF)6#/F(\"*3$y\"[\"" }}}{EXCHG {PARA 0 "> 
" 0 "" {MPLTEXT 1 0 6 "D1.D2;" }}{PARA 11 "" 1 "" {XPPMATH 20 "-I'Matr
ixG6$%*protectedGI(_syslibG6\"6#/I$%idGF'\"*_oLP\"" }}}{EXCHG {PARA 0 
"> " 0 "" {MPLTEXT 1 0 18 "Cohomology(D2,D1);" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6$-I&ArrayG%*protectedG6#/I$%idG6\"\"*#pc(R\"-I'MatrixG6$
F%I(_syslibGF)6#/F(\"*?&>f8" }}}}{EXCHG {PARA 0 "" 0 "" {TEXT 201 20 "
Octahedra On Spheres" }{TEXT 210 0 "" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "Search \+
:= proc(e,L)\n" }{MPLTEXT 1 0 9 "local i;\n" }{MPLTEXT 1 0 6 "i:=1;\n"
 }{MPLTEXT 1 0 17 "while L[i]<>e do\n" }{MPLTEXT 1 0 10 "  i:=i+1;\n" 
}{MPLTEXT 1 0 8 "end do;\n" }{MPLTEXT 1 0 3 "i;\n" }{MPLTEXT 1 0 9 "en
d proc:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 30 "moveElement := p
roc(von,zu,L)\n" }{MPLTEXT 1 0 18 "local i, e, newL;\n" }{MPLTEXT 1 0 
8 "newL:=L;" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 36 "if von=zu then ret
urn newL; end if;\n" }{MPLTEXT 1 0 14 "e:=newL[von];\n" }{MPLTEXT 1 0 
15 "if von<zu then\n" }{MPLTEXT 1 0 28 "  for i from von to zu-1 do\n"
 }{MPLTEXT 1 0 24 "    newL[i]:=newL[i+1];\n" }{MPLTEXT 1 0 7 "  od; \+
\n" }{MPLTEXT 1 0 13 "else #von>zu\n" }{MPLTEXT 1 0 34 "  for i from v
on by -1 to zu+1 do\n" }{MPLTEXT 1 0 24 "    newL[i]:=newL[i-1];\n" }
{MPLTEXT 1 0 7 "  od; \n" }{MPLTEXT 1 0 8 "end if;\n" }{MPLTEXT 1 0 3 
"new" }{MPLTEXT 1 0 10 "L[zu]:=e;\n" }{MPLTEXT 1 0 13 "return newL;\n"
 }{MPLTEXT 1 0 9 "end proc:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
31 "moveElement(6,1,[1,2,3,4,5,6]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "7
(\"\"'\"\"\"\"\"#\"\"$\"\"%\"\"&" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT
 1 0 180 "makeCanonicalRepresentative := proc(L) #Hier wird L zu einem
 Orbitrepresentanten gemacht, imdem von LINKS mit zu Gruppenelementen \+
gehoerenden Permutationen draufmultipliziert wird\n" }{MPLTEXT 1 0 19 
"local flips, newL,\n" }{MPLTEXT 1 0 19 "      e,z,d,v,f,s;\n" }
{MPLTEXT 1 0 9 "newL:=L;\n" }{MPLTEXT 1 0 10 "flips:=0;\n" }{MPLTEXT 
1 0 16 "e:=Search(1,L);\n" }{MPLTEXT 1 0 16 "z:=Search(2,L);\n" }
{MPLTEXT 1 0 16 "d:=Search(3,L);\n" }{MPLTEXT 1 0 16 "v:=Search(4,L);
\n" }{MPLTEXT 1 0 16 "f:=Search(5,L);\n" }{MPLTEXT 1 0 16 "s:=Search(6
,L);\n" }{MPLTEXT 1 0 12 "if e>v then\n" }{MPLTEXT 1 0 14 "  newL[e]:=
4;\n" }{MPLTEXT 1 0 14 "  newL[v]:=1;\n" }{MPLTEXT 1 0 12 "  e,v:=v,e;
\n" }{MPLTEXT 1 0 18 "  flips:=flips+1;\n" }{MPLTEXT 1 0 8 "end if;\n"
 }{MPLTEXT 1 0 12 "if z>f then\n" }{MPLTEXT 1 0 14 "  newL[z]:=5;\n" }
{MPLTEXT 1 0 14 "  newL[f]:=2;\n" }{MPLTEXT 1 0 12 "  z,f:=f,z;\n" }
{MPLTEXT 1 0 18 "  flips:=flips+1;\n" }{MPLTEXT 1 0 8 "end if;\n" }
{MPLTEXT 1 0 12 "if d>s then\n" }{MPLTEXT 1 0 14 "  newL[d]:=6;\n" }
{MPLTEXT 1 0 14 "  newL[s]:=3;\n" }{MPLTEXT 1 0 12 "  d,s:=s,d;\n" }
{MPLTEXT 1 0 18 "  flips:=flips+1;\n" }{MPLTEXT 1 0 8 "end if;\n" }
{MPLTEXT 1 0 12 "if e>z then\n" }{MPLTEXT 1 0 14 "  newL[e]:=2;\n" }
{MPLTEXT 1 0 14 "  newL[z]:=1;\n" }{MPLTEXT 1 0 14 "  newL[v]:=5;\n" }
{MPLTEXT 1 0 14 "  newL[f]:=4;\n" }{MPLTEXT 1 0 20 "  e,z,v,f:=z,e,f,v
;\n" }{MPLTEXT 1 0 18 "  flips:=flips+1;\n" }{MPLTEXT 1 0 8 "end if;\n
" }{MPLTEXT 1 0 12 "if e>d then\n" }{MPLTEXT 1 0 14 "  newL[e]:=3;\n" 
}{MPLTEXT 1 0 14 "  newL[d]:=1;\n" }{MPLTEXT 1 0 14 "  newL[v]:=6;\n" 
}{MPLTEXT 1 0 14 "  newL[s]:=4;\n" }{MPLTEXT 1 0 20 "  e,d,v,s:=d,e,s,
v;\n" }{MPLTEXT 1 0 18 "  flips:=flips+1;\n" }{MPLTEXT 1 0 8 "end if;
\n" }{MPLTEXT 1 0 24 "if type(flips,odd) then\n" }{MPLTEXT 1 0 14 "  n
ewL[z]:=3;\n" }{MPLTEXT 1 0 14 "  newL[d]:=2;\n" }{MPLTEXT 1 0 14 "  n
ewL[f]:=6;\n" }{MPLTEXT 1 0 14 "  newL[s]:=5;\n" }{MPLTEXT 1 0 20 "  z
,d,f,s:=d,z,s,f;\n" }{MPLTEXT 1 0 8 "end if;\n" }{MPLTEXT 1 0 6 "newL;
\n" }{MPLTEXT 1 0 9 "end proc:" }{TEXT 213 0 "" }}}{EXCHG {PARA 0 "> "
 0 "" {MPLTEXT 1 0 43 "makeCanonicalRepresentative([4,2,3,1,5,6]);" }}
{PARA 11 "" 1 "" {XPPMATH 20 "7(\"\"\"\"\"$\"\"#\"\"%\"\"'\"\"&" }}}
{EXCHG {PARA 0 "" 0 "" {TEXT 201 129 "isCanonicalRepresentative sagt a
us, ob die Permutation/Liste L die 1 vor der 2, 3 und 4 hat, die 2 vor
 der 5 und die 3 vor der 6." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
41 "isCanonicalRepresentative := proc(L)    \n" }{MPLTEXT 1 0 26 "loca
l i, a1, a2, a3;     \n" }{MPLTEXT 1 0 42 "if L=makeCanonicalRepresent
ative(L) then \n" }{MPLTEXT 1 0 14 "  return true;" }{MPLTEXT 1 0 1 "
\n" }{MPLTEXT 1 0 6 "else \n" }{MPLTEXT 1 0 16 "  return false;\n" }
{MPLTEXT 1 0 8 "end if;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 34 "a1,a
2,a3:=false,false,false;     \n" }{MPLTEXT 1 0 30 "for i from 1 to 6 d
o         \n" }{MPLTEXT 1 0 17 "  if L[i]=1 then\n" }{MPLTEXT 1 0 23 "
    a1:=true;         \n" }{MPLTEXT 1 0 21 "  elif L[i]=2 then  \n" }
{MPLTEXT 1 0 57 "    if a1=false then return false; end if;           \+
   \n" }{MPLTEXT 1 0 16 "    a2:=true;  \n" }{MPLTEXT 1 0 28 "  elif L
[i]=3 then         \n" }{MPLTEXT 1 0 43 "    if a1=false then return f
alse; end if;\n" }{MPLTEXT 1 0 19 "    a3:=true;     \n" }{MPLTEXT 1 
0 21 "  elif L[i]=4 then  \n" }{MPLTEXT 1 0 43 "    if a1=false then r
eturn false; end if;\n" }{MPLTEXT 1 0 22 "  elif L[i]=5 then   \n" }
{MPLTEXT 1 0 46 "    if a2=false then return false; end if;   \n" }
{MPLTEXT 1 0 25 "  elif L[i]=6 then      \n" }{MPLTEXT 1 0 44 "    if \+
a3=false then return false; end if; \n" }{MPLTEXT 1 0 10 "  end if;\n"
 }{MPLTEXT 1 0 4 "od;\n" }{MPLTEXT 1 0 11 "return true" }{MPLTEXT 1 0 
2 ";\n" }{MPLTEXT 1 0 9 "end proc:" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 58 "with(combinat): isCanonicalRepresentative([1,2,3,4,5,
6]);\n" }{MPLTEXT 1 0 6 "perm:=" }{MPLTEXT 1 0 46 "select(isCanonicalR
epresentative, permute(6));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "I%trueG%*protectedG" }}{PARA 11 "" 1 "" {XPPMATH 20 "7@7(
\"\"\"\"\"#\"\"$\"\"%\"\"&\"\"'7(F$F%F&F'F)F(7(F$F%F&F(F'F)7(F$F%F&F(F
)F'7(F$F%F&F)F'F(7(F$F%F&F)F(F'7(F$F%F'F&F(F)7(F$F%F'F&F)F(7(F$F%F'F(F
&F)7(F$F%F(F&F'F)7(F$F%F(F&F)F'7(F$F%F(F'F&F)7(F$F&F%F'F(F)7(F$F&F%F'F
)F(7(F$F&F%F(F'F)7(F$F&F%F(F)F'7(F$F&F%F)F'F(7(F$F&F%F)F(F'7(F$F&F'F%F
(F)7(F$F&F'F%F)F(7(F$F&F'F)F%F(7(F$F&F)F%F'F(7(F$F&F)F%F(F'7(F$F&F)F'F
%F(7(F$F'F%F&F(F)7(F$F'F%F&F)F(7(F$F'F%F(F&F)7(F$F'F&F%F(F)7(F$F'F&F%F
)F(7(F$F'F&F)F%F(" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 8 "perm[9]
;" }}{PARA 11 "" 1 "" {XPPMATH 20 "7(\"\"\"\"\"#\"\"%\"\"&\"\"$\"\"'" 
}}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "
" {TEXT 201 1 "\n" }{TEXT 201 72 "Cell complex that arises in the cont
ext of finding octahedra on spheres:" }{TEXT 211 0 "" }}}{EXCHG {PARA 
0 "> " 0 "" {MPLTEXT 1 0 41 "OctahedraOnSpheresCellComplex := proc() \+
\n" }{MPLTEXT 1 0 21 "local i, j, k, a, b,\n" }{MPLTEXT 1 0 21 "      \+
D10, D11, D12,\n" }{MPLTEXT 1 0 53 "      o1, o2, o3, o4, o5, o6, o7, \+
o8, off, randoff, \n" }{MPLTEXT 1 0 33 "      Perm, PermIndex, p, rand
p,\n" }{MPLTEXT 1 0 12 "      sgn; \n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 
1 0 10 "o1 := 0; \n" }{MPLTEXT 1 0 27 "o2, o3, o4 := 0, 30, 150; \n" }
{MPLTEXT 1 0 37 "o5, o6, o7, o8 := 0, 120, 210, 390; \n" }{MPLTEXT 1 
0 1 "\n" }{MPLTEXT 1 0 17 "with(combinat); \n" }{MPLTEXT 1 0 55 "Perm \+
:= select(isCanonicalRepresentative, permute(6));\n" }{MPLTEXT 1 0 6 "
i:=1;\n" }{MPLTEXT 1 0 20 "PermIndex:=table();\n" }{MPLTEXT 1 0 17 "fo
r p in Perm do\n" }{MPLTEXT 1 0 21 "  PermIndex[p]:=i;  \n" }{MPLTEXT 
1 0 10 "  i:=i+1;\n" }{MPLTEXT 1 0 4 "od;\n" }{MPLTEXT 1 0 1 "\n" }
{MPLTEXT 1 0 20 "#Berechnen von D12:\n" }{MPLTEXT 1 0 23 "D12 := Matri
x(150,30);\n" }{MPLTEXT 1 0 21 "for i from 1 to 5 do\n" }{MPLTEXT 1 0 
18 " for p in Perm do\n" }{MPLTEXT 1 0 21 "  off:=PermIndex[p];\n" }
{MPLTEXT 1 0 3 "  \n" }{MPLTEXT 1 0 79 "  #Randzellen vom Typ 1: (es g
ibt auch nur die eine Moeglichkeit hier bei D12)\n" }{MPLTEXT 1 0 68 "
  #Moeglichkeit 1.1: Punkt i geht nach rechts an die untere Stelle:\n"
 }{MPLTEXT 1 0 12 "  randp:=p;\n" }{MPLTEXT 1 0 33 "  randp:=moveEleme
nt(i,i,randp);\n" }{MPLTEXT 1 0 49 "  randp:=makeCanonicalRepresentati
ve(randp);    \n" }{MPLTEXT 1 0 41 "  randoff:=o1+30*(i-1)+PermIndex[r
andp];\n" }{MPLTEXT 1 0 121 "  sgn:=(-1)^1; #Koordinate mit ungeradem \+
Index wird 0, und die anschliessende Koordinatenpermutation ist die Id
entitaet.\n" }{MPLTEXT 1 0 42 "  D12[randoff,off]:=D12[randoff,off]+sg
n;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 67 "  #Moeglichkeit 1.2: Punk
t i geht nach rechts an die obere Stelle:\n" }{MPLTEXT 1 0 12 "  randp
:=p;\n" }{MPLTEXT 1 0 35 "  randp:=moveElement(i,i+1,randp);\n" }
{MPLTEXT 1 0 49 "  randp:=makeCanonicalRepresentative(randp);    \n" }
{MPLTEXT 1 0 41 "  randoff:=o1+30*(i-1)+PermIndex[randp];\n" }{MPLTEXT
 1 0 122 "  sgn:=(-1)^2; #Koordinate mit ungeradem Index wird 0, und d
ie anschliessende Koordinatenpermutation ist 1 Transposition.\n" }
{MPLTEXT 1 0 42 "  D12[randoff,off]:=D12[randoff,off]+sgn;\n" }
{MPLTEXT 1 0 12 " od; #for p\n" }{MPLTEXT 1 0 10 "od; #for i" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 20 "#Berechnen \+
von D11:\n" }{MPLTEXT 1 0 25 "D11 := Matrix(330, 150);\n" }{MPLTEXT 1 
0 21 "for i from 1 to 5 do\n" }{MPLTEXT 1 0 18 " for p in Perm do\n" }
{MPLTEXT 1 0 33 "  off:=o1+30*(i-1)+PermIndex[p];\n" }{MPLTEXT 1 0 3 "
  \n" }{MPLTEXT 1 0 25 "  #Randzellen vom Typ 2:\n" }{MPLTEXT 1 0 62 "
  #Moeglichkeit 2.1: Punkt i+1 geht nach oben nach unendlich:\n" }
{MPLTEXT 1 0 12 "  randp:=p;\n" }{MPLTEXT 1 0 35 "  randp:=moveElement
(i+1,6,randp);\n" }{MPLTEXT 1 0 49 "  randp:=makeCanonicalRepresentati
ve(randp);    \n" }{MPLTEXT 1 0 32 "  randoff:=o2+PermIndex[randp];\n"
 }{MPLTEXT 1 0 125 "  sgn:=(-1)^(0+0); #Koordinate mit ungeradem Index
 wird 1, und die anschliessende Koordinatenpermutation ist die Identit
aet.\n" }{MPLTEXT 1 0 20 "  D11[randoff,off]:=" }{MPLTEXT 1 0 17 "D11[
randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT
 1 0 61 "  #Moeglichkeit 2.2: Punkt i geht nach unten nach unendlich:
\n" }{MPLTEXT 1 0 12 "  randp:=p;\n" }{MPLTEXT 1 0 33 "  randp:=moveEl
ement(i,6,randp);\n" }{MPLTEXT 1 0 49 "  randp:=makeCanonicalRepresent
ative(randp);    \n" }{MPLTEXT 1 0 32 "  randoff:=o2+PermIndex[randp];
\n" }{MPLTEXT 1 0 119 "  sgn:=(-1)^2; #Koordinate mit geradem Index wi
rd 0, und die anschliessende Koordinatenpermutation ist die Identitaet
.\n" }{MPLTEXT 1 0 20 "  D11[randoff,off]:=" }{MPLTEXT 1 0 17 "D11[ran
doff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 
0 25 "  #Randzellen vom Typ 3:\n" }{MPLTEXT 1 0 59 "  #Moeglichkeit 3.
1: Punkt i+2 geht nach links zum Stapel:\n" }{MPLTEXT 1 0 15 "  if i<=
4 then\n" }{MPLTEXT 1 0 74 "    #Moeglichkeit 3.1.1: Punkt i+2 geht na
ch links an die oberste Stelle:\n" }{MPLTEXT 1 0 14 "    randp:=p;\n" 
}{MPLTEXT 1 0 39 "    randp:=moveElement(i+2,i+2,randp);\n" }{MPLTEXT 
1 0 51 "    randp:=makeCanonicalRepresentative(randp);    \n" }
{MPLTEXT 1 0 43 "    randoff:=o3+30*(i-1)+PermIndex[randp];\n" }
{MPLTEXT 1 0 121 "    sgn:=(-1)^2; #Koordinate mit geradem Index wird \+
0, und die anschliessende Koordinatenpermutation ist die Identitaet.\n
" }{MPLTEXT 1 0 22 "    D11[randoff,off]:=" }{MPLTEXT 1 0 17 "D11[rand
off,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 
0 75 "    #Moeglichkeit 3.1.2: Punkt i+2 geht nach links an die mittle
re Stelle:\n" }{MPLTEXT 1 0 14 "    randp:=p;\n" }{MPLTEXT 1 0 39 "   \+
 randp:=moveElement(i+2,i+1,randp);\n" }{MPLTEXT 1 0 51 "    randp:=ma
keCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 43 "    randoff
:=o3+30*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 125 "    sgn:=(-1)^3;
 #Koordinate mit geradem Index wird 0, und die anschliessende Koordina
tenpermutation ist eine Transposition.\n" }{MPLTEXT 1 0 22 "    D11[ra
ndoff,off]:=" }{MPLTEXT 1 0 17 "D11[randoff,off]+" }{MPLTEXT 1 0 5 "sg
n;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 75 "    #Moeglichkeit 3.1.3: \+
Punkt i+2 geht nach links an die unterste Stelle:\n" }{MPLTEXT 1 0 14 
"    randp:=p;\n" }{MPLTEXT 1 0 37 "    randp:=moveElement(i+2,i,randp
);\n" }{MPLTEXT 1 0 51 "    randp:=makeCanonicalRepresentative(randp);
    \n" }{MPLTEXT 1 0 43 "    randoff:=o3+30*(i-1)+PermIndex[randp];\n
" }{MPLTEXT 1 0 127 "    sgn:=(-1)^4; #Koordinate mit geradem Index wi
rd 0, und die anschliessende Koordinatenpermutation ist zwei Transposi
tionen.\n" }{MPLTEXT 1 0 22 "    D11[randoff,off]:=" }{MPLTEXT 1 0 17 
"D11[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 10 "  end i
f;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 60 "  #Moeglichkeit 3.2: Punk
t i-1 geht nach rechts zum Stapel:\n" }{MPLTEXT 1 0 15 "  if i>=2 then
\n" }{MPLTEXT 1 0 75 "    #Moeglichkeit 3.2.1: Punkt i-1 geht nach rec
hts an die oberste Stelle:\n" }{MPLTEXT 1 0 14 "    randp:=p;\n" }
{MPLTEXT 1 0 39 "    randp:=moveElement(i-1,i+1,randp);\n" }{MPLTEXT 
1 0 51 "    randp:=makeCanonicalRepresentative(randp);    \n" }
{MPLTEXT 1 0 43 "    randoff:=o3+30*(i-2)+PermIndex[randp];\n" }
{MPLTEXT 1 0 129 "    sgn:=(-1)^3; #Koordinate mit ungeradem Index wir
d 0, und die anschliessende Koordinatenpermutation ist zwei Transposit
ionen.\n" }{MPLTEXT 1 0 22 "    D11[randoff,off]:=" }{MPLTEXT 1 0 17 "
D11[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 1 "\n" }
{MPLTEXT 1 0 76 "    #Moeglichkeit 3.2.2: Punkt i-1 geht nach rechts a
n die mittlere Stelle:\n" }{MPLTEXT 1 0 14 "    randp:=p;\n" }{MPLTEXT
 1 0 37 "    randp:=moveElement(i-1,i,randp);\n" }{MPLTEXT 1 0 51 "   \+
 randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 43 " \+
   randoff:=o3+30*(i-2)+PermIndex[randp];\n" }{MPLTEXT 1 0 127 "    sg
n:=(-1)^2; #Koordinate mit ungeradem Index wird 0, und die anschliesse
nde Koordinatenpermutation ist eine Transposition.\n" }{MPLTEXT 1 0 
22 "    D11[randoff,off]:=" }{MPLTEXT 1 0 17 "D11[randoff,off]+" }
{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "    #Mo
eglichkeit 3.2.3: Punkt i-1 geht nach rechts an die unterste Stelle:\n
" }{MPLTEXT 1 0 14 "    randp:=p;\n" }{MPLTEXT 1 0 39 "    randp:=move
Element(i-1,i-1,randp);\n" }{MPLTEXT 1 0 51 "    randp:=makeCanonicalR
epresentative(randp);    \n" }{MPLTEXT 1 0 43 "    randoff:=o3+30*(i-2
)+PermIndex[randp];\n" }{MPLTEXT 1 0 123 "    sgn:=(-1)^1; #Koordinate
 mit ungeradem Index wird 0, und die anschliessende Koordinatenpermuta
tion ist die Identitaet.\n" }{MPLTEXT 1 0 22 "    D11[randoff,off]:=" 
}{MPLTEXT 1 0 17 "D11[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }
{MPLTEXT 1 0 10 "  end if;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 25 " \+
 #Randzellen vom Typ 4:\n" }{MPLTEXT 1 0 68 "  #Moeglichkeit 4.1: zwei
 Punkte links vom Stapel ueberlagern sich:\n" }{MPLTEXT 1 0 25 "  for \+
j from 1 to i-2 do\n" }{MPLTEXT 1 0 61 "    #Moeglichkeit 4.1.1: Punkt
 j geht nach rechts unter j+1:\n" }{MPLTEXT 1 0 14 "    randp:=p;\n" }
{MPLTEXT 1 0 35 "    randp:=moveElement(j,j,randp);\n" }{MPLTEXT 1 0 
51 "    randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 
0 24 "    if j=1 then k:=i-2;\n" }{MPLTEXT 1 0 24 "    elif j=2 then k
:=i;\n" }{MPLTEXT 1 0 24 "    elif j=3 then k:=6;\n" }{MPLTEXT 1 0 12 
"    end if;\n" }{MPLTEXT 1 0 43 "    randoff:=o4+30*(k-1)+PermIndex[r
andp];\n" }{MPLTEXT 1 0 126 "    sgn:=(-1)^1; #Koordinate mit ungerade
m Index wird 0, und die anschliessende Koordinatenpermutation ist 0 Tr
anspositionen.\n" }{MPLTEXT 1 0 22 "    D11[randoff,off]:=" }{MPLTEXT 
1 0 17 "D11[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 1 "
\n" }{MPLTEXT 1 0 61 "    #Moeglichkeit 4.1.2: Punkt j geht nach recht
s ueber j+1:\n" }{MPLTEXT 1 0 14 "    randp:=p;\n" }{MPLTEXT 1 0 37 " \+
   randp:=moveElement(j,j+1,randp);\n" }{MPLTEXT 1 0 51 "    randp:=ma
keCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 24 "    if j=1 \+
then k:=i-2;\n" }{MPLTEXT 1 0 24 "    elif j=2 then k:=i;\n" }{MPLTEXT
 1 0 24 "    elif j=3 then k:=6;\n" }{MPLTEXT 1 0 12 "    end if;\n" }
{MPLTEXT 1 0 43 "    randoff:=o4+30*(k-1)+PermIndex[randp];\n" }
{MPLTEXT 1 0 126 "    sgn:=(-1)^2; #Koordinate mit ungeradem Index wir
d 0, und die anschliessende Koordinatenpermutation ist 1 Transposition
en.\n" }{MPLTEXT 1 0 22 "    D11[randoff,off]:=" }{MPLTEXT 1 0 17 "D11
[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 6 "  od;\n" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 69 "  #Moeglichkeit 4.2: zwei Punkte
 rechts vom Stapel ueberlagern sich:\n" }{MPLTEXT 1 0 25 "  for j from
 i+2 to 5 do\n" }{MPLTEXT 1 0 61 "    #Moeglichkeit 4.2.1: Punkt j geh
t nach rechts unter j+1:\n" }{MPLTEXT 1 0 14 "    randp:=p;\n" }
{MPLTEXT 1 0 35 "    randp:=moveElement(j,j,randp);\n" }{MPLTEXT 1 0 
51 "    randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 
0 24 "    if i=1 then k:=j-2;\n" }{MPLTEXT 1 0 24 "    elif i=2 then k
:=j;\n" }{MPLTEXT 1 0 24 "    elif i=3 then k:=6;\n" }{MPLTEXT 1 0 12 
"    end if;\n" }{MPLTEXT 1 0 43 "    randoff:=o4+30*(k-1)+PermIndex[r
andp];\n" }{MPLTEXT 1 0 124 "    sgn:=(-1)^2; #Koordinate mit geradem \+
Index wird 0, und die anschliessende Koordinatenpermutation ist 0 Tran
spositionen.\n" }{MPLTEXT 1 0 22 "    D11[randoff,off]:=" }{MPLTEXT 1 
0 17 "D11[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 1 "\n"
 }{MPLTEXT 1 0 61 "    #Moeglichkeit 4.2.2: Punkt j geht nach rechts u
eber j+1:\n" }{MPLTEXT 1 0 14 "    randp:=p;\n" }{MPLTEXT 1 0 37 "    \+
randp:=moveElement(j,j+1,randp);\n" }{MPLTEXT 1 0 51 "    randp:=makeC
anonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 24 "    if i=1 the
n k:=j-2;\n" }{MPLTEXT 1 0 24 "    elif i=2 then k:=j;\n" }{MPLTEXT 1 
0 24 "    elif i=3 then k:=6;\n" }{MPLTEXT 1 0 12 "    end if;\n" }
{MPLTEXT 1 0 43 "    randoff:=o4+30*(k-1)+PermIndex[randp];\n" }
{MPLTEXT 1 0 124 "    sgn:=(-1)^3; #Koordinate mit geradem Index wird \+
0, und die anschliessende Koordinatenpermutation ist 1 Transpositionen
.\n" }{MPLTEXT 1 0 22 "    D11[randoff,off]:=" }{MPLTEXT 1 0 17 "D11[r
andoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 6 "  od;\n" }
{MPLTEXT 1 0 3 "  \n" }{MPLTEXT 1 0 56 "  #Fertig mit allen Randzellty
pen von Zellen vom Typ 1!\n" }{MPLTEXT 1 0 5 " od;\n" }{MPLTEXT 1 0 4 
"od;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 20 "#Berechnen von D10:\n" 
}{MPLTEXT 1 0 25 "D10 := Matrix(420, 330);\n" }{MPLTEXT 1 0 17 "for p \+
in Perm do\n" }{MPLTEXT 1 0 9 " #Typ 2:\n" }{MPLTEXT 1 0 23 " off:=o2+
PermIndex[p];\n" }{MPLTEXT 1 0 32 " #Raender davon sind vom Typ 5:\n" 
}{MPLTEXT 1 0 22 " for i from 1 to 4 do\n" }{MPLTEXT 1 0 72 "   #Moegl
ichkeit II.5.1: Punkt i geht nach rechts, unter den Punkt i+1:\n" }
{MPLTEXT 1 0 13 "   randp:=p;\n" }{MPLTEXT 1 0 34 "   randp:=moveEleme
nt(i,i,randp);\n" }{MPLTEXT 1 0 50 "   randp:=makeCanonicalRepresentat
ive(randp);    \n" }{MPLTEXT 1 0 42 "   randoff:=o5+30*(i-1)+PermIndex
[randp];\n" }{MPLTEXT 1 0 125 "   sgn:=(-1)^1; #Koordinate mit ungerad
em Index wird 0, und die anschliessende Koordinatenpermutation ist 0 T
ranspositionen.\n" }{MPLTEXT 1 0 21 "   D10[randoff,off]:=" }{MPLTEXT 
1 0 17 "D10[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 3 " \+
 \n" }{MPLTEXT 1 0 72 "   #Moeglichkeit II.5.2: Punkt i geht nach rech
ts, ueber den Punkt i+1:\n" }{MPLTEXT 1 0 13 "   randp:=p;\n" }
{MPLTEXT 1 0 36 "   randp:=moveElement(i,i+1,randp);\n" }{MPLTEXT 1 0 
50 "   randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 
0 42 "   randoff:=o5+30*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 125 "
   sgn:=(-1)^2; #Koordinate mit ungeradem Index wird 0, und die anschl
iessende Koordinatenpermutation ist 1 Transpositionen.\n" }{MPLTEXT 1 
0 21 "   D10[randoff,off]:=" }{MPLTEXT 1 0 17 "D10[randoff,off]+" }
{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 5 " od;\n" }{MPLTEXT 1 0 1 "\n" 
}{MPLTEXT 1 0 21 " #Typ 3: vier Stueck\n" }{MPLTEXT 1 0 22 " for i fro
m 1 to 4 do\n" }{MPLTEXT 1 0 34 "   off:=o3+30*(i-1)+PermIndex[p];\n" 
}{MPLTEXT 1 0 28 "   #Raender davon vom Typ 5:" }{MPLTEXT 1 0 1 "\n" }
{MPLTEXT 1 0 67 "   #Moeglichkeit III.5.1: Punkt i+2 geht nach oben na
ch unendlich:\n" }{MPLTEXT 1 0 13 "   randp:=p;\n" }{MPLTEXT 1 0 36 " \+
  randp:=moveElement(i+2,6,randp);\n" }{MPLTEXT 1 0 50 "   randp:=make
CanonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 42 "   randoff:=o
5+30*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 127 "   sgn:=(-1)^(1+0);
 #Koordinate mit geradem Index wird 1, und die anschliessende Koordina
tenpermutation ist 0 Transpositionen.\n" }{MPLTEXT 1 0 21 "   D10[rand
off,off]:=" }{MPLTEXT 1 0 17 "D10[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;
\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 66 "   #Moeglichkeit III.5.2: P
unkt i geht nach unten nach unendlich:\n" }{MPLTEXT 1 0 13 "   randp:=
p;\n" }{MPLTEXT 1 0 34 "   randp:=moveElement(i,6,randp);\n" }{MPLTEXT
 1 0 50 "   randp:=makeCanonicalRepresentative(randp);    \n" }
{MPLTEXT 1 0 42 "   randoff:=o5+30*(i-1)+PermIndex[randp];\n" }
{MPLTEXT 1 0 127 "   sgn:=(-1)^(2+0); #Koordinate mit geradem Index wi
rd 0, und die anschliessende Koordinatenpermutation ist 0 Transpositio
nen.\n" }{MPLTEXT 1 0 21 "   D10[randoff,off]:=" }{MPLTEXT 1 0 17 "D10
[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 1 "\n" }
{MPLTEXT 1 0 29 "   #Raender davon vom Typ 6:\n" }{MPLTEXT 1 0 68 "   \+
#Moeglichkeit III.6.1: Punkt i-1 geht nach rechts in den Stapel:\n" }
{MPLTEXT 1 0 16 "   if i>=2 then\n" }{MPLTEXT 1 0 46 "     #in dem Sta
pel gibt es 4 Moeglichkeiten:\n" }{MPLTEXT 1 0 27 "     for j from 0 t
o 3 do \n" }{MPLTEXT 1 0 82 "       #j ist die Stelle von unten aus ge
zaehlt, in zu der der Punkt i-1 stoesst.\n" }{MPLTEXT 1 0 17 "       r
andp:=p;\n" }{MPLTEXT 1 0 44 "       randp:=moveElement(i-1,i-1+j,rand
p);\n" }{MPLTEXT 1 0 54 "       randp:=makeCanonicalRepresentative(ran
dp);    \n" }{MPLTEXT 1 0 114 "       randoff:=o6+30*(i-2)+PermIndex[r
andp]; #i-2 kommt daher, dass der Stapel nach links rueckt (vom Index \+
her)\n" }{MPLTEXT 1 0 133 "       sgn:=(-1)^(1+j); #Koordinate mit ung
eradem Index wird 0, und die anschliessende Koordinatenpermutation ist
 j Transpositionen.\n" }{MPLTEXT 1 0 25 "       D10[randoff,off]:=" }
{MPLTEXT 1 0 17 "D10[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT
 1 0 9 "     od;\n" }{MPLTEXT 1 0 11 "   end if;\n" }{MPLTEXT 1 0 1 "
\n" }{MPLTEXT 1 0 67 "   #Moeglichkeit III.6.2: Punkt i+3 geht nach li
nks in den Stapel:\n" }{MPLTEXT 1 0 16 "   if i<=3 then\n" }{MPLTEXT 
1 0 46 "     #in dem Stapel gibt es 4 Moeglichkeiten:\n" }{MPLTEXT 1 
0 27 "     for j from 0 to 3 do \n" }{MPLTEXT 1 0 81 "       #j ist di
e Stelle von oben aus gezaehlt, in zu der der Punkt i+3 stoesst.\n" }
{MPLTEXT 1 0 17 "       randp:=p;\n" }{MPLTEXT 1 0 44 "       randp:=m
oveElement(i+3,i+3-j,randp);\n" }{MPLTEXT 1 0 54 "       randp:=makeCa
nonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 46 "       randoff:
=o6+30*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 133 "       sgn:=(-1)^
(1+j); #Koordinate mit ungeradem Index wird 0, und die anschliessende \+
Koordinatenpermutation ist j Transpositionen.\n" }{MPLTEXT 1 0 25 "   \+
    D10[randoff,off]:=" }{MPLTEXT 1 0 17 "D10[randoff,off]+" }{MPLTEXT
 1 0 5 "sgn;\n" }{MPLTEXT 1 0 9 "     od;\n" }{MPLTEXT 1 0 11 "   end \+
if;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 29 "   #Raender davon vom Ty
p 7:\n" }{MPLTEXT 1 0 79 "   #Moeglichkeit III.7.1: der Zweierhaufen b
ildet sich links vom Dreierhaufen:\n" }{MPLTEXT 1 0 26 "   for j from \+
1 to i-2 do\n" }{MPLTEXT 1 0 61 "     #Moeglichkeit III.7.1.a: j geht \+
nach rechts unter j+1: \n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }
{MPLTEXT 1 0 36 "     randp:=moveElement(j,j,randp);\n" }{MPLTEXT 1 0 
52 "     randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 
1 0 25 "     if j=1 then k:=i-2;\n" }{MPLTEXT 1 0 16 "     else k:=3;
\n" }{MPLTEXT 1 0 13 "     end if;\n" }{MPLTEXT 1 0 44 "     randoff:=
o7+30*(k-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 127 "     sgn:=(-1)^1; \+
#Koordinate mit ungeradem Index wird 0, und die anschliessende Koordin
atenpermutation ist 0 Transpositionen.\n" }{MPLTEXT 1 0 23 "     D10[r
andoff,off]:=" }{MPLTEXT 1 0 17 "D10[randoff,off]+" }{MPLTEXT 1 0 5 "s
gn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 61 "     #Moeglichkeit III.7
.1.b: j geht nach rechts ueber j+1: \n" }{MPLTEXT 1 0 15 "     randp:=
p;\n" }{MPLTEXT 1 0 38 "     randp:=moveElement(j,j+1,randp);\n" }
{MPLTEXT 1 0 52 "     randp:=makeCanonicalRepresentative(randp);    \n
" }{MPLTEXT 1 0 25 "     if j=1 then k:=i-2;\n" }{MPLTEXT 1 0 16 "    \+
 else k:=3;\n" }{MPLTEXT 1 0 13 "     end if;\n" }{MPLTEXT 1 0 44 "   \+
  randoff:=o7+30*(k-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 127 "     sg
n:=(-1)^2; #Koordinate mit ungeradem Index wird 0, und die anschliesse
nde Koordinatenpermutation ist 1 Transpositionen.\n" }{MPLTEXT 1 0 23 
"     D10[randoff,off]:=" }{MPLTEXT 1 0 17 "D10[randoff,off]+" }
{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 7 "   od;\n" }{MPLTEXT 1 0 1 "\n
" }{MPLTEXT 1 0 80 "   #Moeglichkeit III.7.2: der Zweierhaufen bildet \+
sich rechts vom Dreierhaufen:\n" }{MPLTEXT 1 0 26 "   for j from i+3 t
o 5 do\n" }{MPLTEXT 1 0 61 "     #Moeglichkeit III.7.2.a: j geht nach \+
rechts unter j+1: \n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 
0 36 "     randp:=moveElement(j,j,randp);\n" }{MPLTEXT 1 0 52 "     ra
ndp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 23 "    \+
 if i=1 then k:=j;\n" }{MPLTEXT 1 0 16 "     else k:=6;\n" }{MPLTEXT 
1 0 13 "     end if;\n" }{MPLTEXT 1 0 44 "     randoff:=o7+30*(k-1)+Pe
rmIndex[randp];\n" }{MPLTEXT 1 0 127 "     sgn:=(-1)^1; #Koordinate mi
t ungeradem Index wird 0, und die anschliessende Koordinatenpermutatio
n ist 0 Transpositionen.\n" }{MPLTEXT 1 0 23 "     D10[randoff,off]:="
 }{MPLTEXT 1 0 17 "D10[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 61 "     #Moeglichkeit III.7.2.b: j \+
geht nach rechts ueber j+1: \n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }
{MPLTEXT 1 0 38 "     randp:=moveElement(j,j+1,randp);\n" }{MPLTEXT 1 
0 52 "     randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT
 1 0 23 "     if i=1 then k:=j;\n" }{MPLTEXT 1 0 16 "     else k:=6;\n
" }{MPLTEXT 1 0 13 "     end if;\n" }{MPLTEXT 1 0 44 "     randoff:=o7
+30*(k-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 127 "     sgn:=(-1)^2; #K
oordinate mit ungeradem Index wird 0, und die anschliessende Koordinat
enpermutation ist 1 Transpositionen.\n" }{MPLTEXT 1 0 23 "     D10[ran
doff,off]:=" }{MPLTEXT 1 0 17 "D10[randoff,off]+" }{MPLTEXT 1 0 5 "sgn
;\n" }{MPLTEXT 1 0 7 "   od;\n" }{MPLTEXT 1 0 31 " od; #for i form 1 t
o 4 (Typ 3)" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 
9 " #Typ 4:\n" }{MPLTEXT 1 0 22 " for i from 1 to 3 do\n" }{MPLTEXT 1 
0 25 "  for j from i+2 to 5 do\n" }{MPLTEXT 1 0 23 "   if i=1 then k:=
j-2;\n" }{MPLTEXT 1 0 23 "   elif i=2 then k:=j;\n" }{MPLTEXT 1 0 14 "
   else k:=6;\n" }{MPLTEXT 1 0 11 "   end if;\n" }{MPLTEXT 1 0 34 "   \+
off:=o4+30*(k-1)+PermIndex[p];\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 
29 "   #Raender davon vom Typ 5:\n" }{MPLTEXT 1 0 60 "   #Moeglichkeit
 IV.5.1: i+1 geht nach oben nach unendlich:\n" }{MPLTEXT 1 0 13 "   ra
ndp:=p;\n" }{MPLTEXT 1 0 36 "   randp:=moveElement(i+1,6,randp);\n" }
{MPLTEXT 1 0 50 "   randp:=makeCanonicalRepresentative(randp);    \n" 
}{MPLTEXT 1 0 44 "   randoff:=o5+30*(j-1-1)+PermIndex[randp];\n" }
{MPLTEXT 1 0 129 "   sgn:=(-1)^(0+0); #Koordinate mit ungeradem Index \+
wird 1, und die anschliessende Koordinatenpermutation ist 0 Transposit
ionen.\n" }{MPLTEXT 1 0 21 "   D10[randoff,off]:=" }{MPLTEXT 1 0 17 "D
10[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 1 "\n" }
{MPLTEXT 1 0 59 "   #Moeglichkeit IV.5.2: i geht nach unten nach unend
lich:\n" }{MPLTEXT 1 0 13 "   randp:=p;\n" }{MPLTEXT 1 0 34 "   randp:
=moveElement(i,6,randp);\n" }{MPLTEXT 1 0 50 "   randp:=makeCanonicalR
epresentative(randp);    \n" }{MPLTEXT 1 0 44 "   randoff:=o5+30*(j-1-
1)+PermIndex[randp];\n" }{MPLTEXT 1 0 127 "   sgn:=(-1)^(2+0); #Koordi
nate mit geradem Index wird 0, und die anschliessende Koordinatenpermu
tation ist 0 Transpositionen.\n" }{MPLTEXT 1 0 21 "   D10[randoff,off]
:=" }{MPLTEXT 1 0 17 "D10[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 60 "   #Moeglichkeit IV.5.3: j+1 geh
t nach oben nach unendlich:\n" }{MPLTEXT 1 0 13 "   randp:=p;\n" }
{MPLTEXT 1 0 36 "   randp:=moveElement(j+1,6,randp);\n" }{MPLTEXT 1 0 
50 "   randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 
0 42 "   randoff:=o5+30*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 127 "
   sgn:=(-1)^(1+0); #Koordinate mit geradem Index wird 1, und die ansc
hliessende Koordinatenpermutation ist 0 Transpositionen.\n" }{MPLTEXT 
1 0 21 "   D10[randoff,off]:=" }{MPLTEXT 1 0 17 "D10[randoff,off]+" }
{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 59 "   #Moe
glichkeit IV.5.4: j geht nach unten nach unendlich:\n" }{MPLTEXT 1 0 
13 "   randp:=p;\n" }{MPLTEXT 1 0 34 "   randp:=moveElement(j,6,randp)
;\n" }{MPLTEXT 1 0 50 "   randp:=makeCanonicalRepresentative(randp);  \+
  \n" }{MPLTEXT 1 0 42 "   randoff:=o5+30*(i-1)+PermIndex[randp];\n" }
{MPLTEXT 1 0 129 "   sgn:=(-1)^(1+0); #Koordinate mit ungeradem Index \+
wird 0, und die anschliessende Koordinatenpermutation ist 0 Transposit
ionen.\n" }{MPLTEXT 1 0 21 "   D10[randoff,off]:=" }{MPLTEXT 1 0 17 "D
10[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 1 "\n" }
{MPLTEXT 1 0 29 "   #Raender davon vom Typ 6:\n" }{MPLTEXT 1 0 17 "   \+
if i+2=j then\n" }{MPLTEXT 1 0 91 "     #Es gibt 6 Moeglichkeiten, wie
 beide 2er-Stapel sich zu einem 4er vereinigen koennen:\n" }{MPLTEXT 
1 0 2 "  " }{MPLTEXT 1 0 64 "   #Moeglichkeit IV.6.1: i und i+1 gehen \+
beide unter j und j+1:\n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }
{MPLTEXT 1 0 2 "  " }{MPLTEXT 1 0 34 "   randp:=moveElement(i,i,randp)
;\n" }{MPLTEXT 1 0 52 "     randp:=makeCanonicalRepresentative(randp);
    \n" }{MPLTEXT 1 0 2 "  " }{MPLTEXT 1 0 42 "   randoff:=o6+30*(i-1)
+PermIndex[randp];\n" }{MPLTEXT 1 0 129 "     sgn:=(-1)^(2+0); #Koordi
nate mit geradem Index wird 0, und die anschliessende Koordinatenpermu
tation ist 0 Transpositionen.\n" }{MPLTEXT 1 0 2 "  " }{MPLTEXT 1 0 
21 "   D10[randoff,off]:=" }{MPLTEXT 1 0 17 "D10[randoff,off]+" }
{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 2 "  " }
{MPLTEXT 1 0 69 "   #Moeglichkeit IV.6.2: i geht unter j, und i+1 zwis
chen j und j+1:\n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 0 
38 "     randp:=moveElement(i+1,j,randp);\n" }{MPLTEXT 1 0 52 "     ra
ndp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 44 "    \+
 randoff:=o6+30*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 129 "     sgn
:=(-1)^(2+1); #Koordinate mit geradem Index wird 0, und die anschliess
ende Koordinatenpermutation ist 1 Transpositionen.\n" }{MPLTEXT 1 0 
23 "     D10[randoff,off]:=" }{MPLTEXT 1 0 17 "D10[randoff,off]+" }
{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 62 "     #M
oeglichkeit IV.6.3: i geht unter j, und i+1 ueber j+1:\n" }{MPLTEXT 1 
0 15 "     randp:=p;\n" }{MPLTEXT 1 0 40 "     randp:=moveElement(i+1,
j+1,randp);\n" }{MPLTEXT 1 0 52 "     randp:=makeCanonicalRepresentati
ve(randp);    \n" }{MPLTEXT 1 0 44 "     randoff:=o6+30*(i-1)+PermInde
x[randp];\n" }{MPLTEXT 1 0 129 "     sgn:=(-1)^(2+2); #Koordinate mit \+
geradem Index wird 0, und die anschliessende Koordinatenpermutation is
t 2 Transpositionen.\n" }{MPLTEXT 1 0 23 "     D10[randoff,off]:=" }
{MPLTEXT 1 0 17 "D10[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT
 1 0 1 "\n" }{MPLTEXT 1 0 69 "     #Moeglichkeit IV.6.4: i und i+1 geh
en beide zwischen j und j+1:\n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }
{MPLTEXT 1 0 36 "     randp:=moveElement(j,i,randp);\n" }{MPLTEXT 1 0 
52 "     randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 
1 0 44 "     randoff:=o6+30*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 
129 "     sgn:=(-1)^(2+2); #Koordinate mit geradem Index wird 0, und d
ie anschliessende Koordinatenpermutation ist 2 Transpositionen.\n" }
{MPLTEXT 1 0 23 "     D10[randoff,off]:=" }{MPLTEXT 1 0 17 "D10[randof
f,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 
78 "     #Moeglichkeit IV.6.5: i geht zwischen j und j+1, und i+1 geht
 ueber j+1:\n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 0 40 " \+
    randp:=moveElement(i+1,j+1,randp);\n" }{MPLTEXT 1 0 38 "     randp
:=moveElement(i,i+1,randp);\n" }{MPLTEXT 1 0 52 "     randp:=makeCanon
icalRepresentative(randp);    \n" }{MPLTEXT 1 0 44 "     randoff:=o6+3
0*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 129 "     sgn:=(-1)^(2+3); \+
#Koordinate mit geradem Index wird 0, und die anschliessende Koordinat
enpermutation ist 2 Transpositionen.\n" }{MPLTEXT 1 0 23 "     D10[ran
doff,off]:=" }{MPLTEXT 1 0 17 "D10[randoff,off]+" }{MPLTEXT 1 0 5 "sgn
;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 60 "     #Moeglichkeit IV.6.6:
 i und i+1 gehen beide ueber j+1:\n" }{MPLTEXT 1 0 15 "     randp:=p;
\n" }{MPLTEXT 1 0 40 "     randp:=moveElement(i+1,j+1,randp);\n" }
{MPLTEXT 1 0 38 "     randp:=moveElement(i,i+2,randp);\n" }{MPLTEXT 1 
0 52 "     randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT
 1 0 44 "     randoff:=o6+30*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 
129 "     sgn:=(-1)^(2+4); #Koordinate mit geradem Index wird 0, und d
ie anschliessende Koordinatenpermutation ist 2 Transpositionen.\n" }
{MPLTEXT 1 0 23 "     D10[randoff,off]:=" }{MPLTEXT 1 0 17 "D10[randof
f,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 10 "   end if;" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 29 "   #Raender
 davon vom Typ 7:\n" }{MPLTEXT 1 0 52 "   #Moeglichkeit IV.7.1: i-1 ge
ht auf den i-Stapel:\n" }{MPLTEXT 1 0 16 "   if i>=2 then\n" }{MPLTEXT
 1 0 69 "    #drei Moeglichkeiten fuer die Stelle im Stapel, zu der i-
1 geht:\n" }{MPLTEXT 1 0 25 "    for a from 0 to 2 do\n" }{MPLTEXT 1 
0 51 "     #a ist diese Stelle von unten aus gezaehlt.  \n" }{MPLTEXT 
1 0 15 "     randp:=p;\n" }{MPLTEXT 1 0 42 "     randp:=moveElement(i-
1,i-1+a,randp);\n" }{MPLTEXT 1 0 52 "     randp:=makeCanonicalRepresen
tative(randp);    \n" }{MPLTEXT 1 0 23 "     if i=2 then k:=j;\n" }
{MPLTEXT 1 0 16 "     else k:=6;\n" }{MPLTEXT 1 0 13 "     end if;\n" 
}{MPLTEXT 1 0 44 "     randoff:=o7+30*(k-1)+PermIndex[randp];\n" }
{MPLTEXT 1 0 131 "     sgn:=(-1)^(1+a); #Koordinate mit ungeradem Inde
x wird 0, und die anschliessende Koordinatenpermutation ist a Transpos
itionen.\n" }{MPLTEXT 1 0 23 "     D10[randoff,off]:=" }{MPLTEXT 1 0 
17 "D10[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 8 "    o
d;\n" }{MPLTEXT 1 0 11 "   end if;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 
1 0 52 "   #Moeglichkeit IV.7.2: i+2 geht auf den i-Stapel:\n" }
{MPLTEXT 1 0 18 "   if j>=i+3 then\n" }{MPLTEXT 1 0 69 "    #drei Moeg
lichkeiten fuer die Stelle im Stapel, zu der i-1 geht:\n" }{MPLTEXT 1 
0 25 "    for a from 0 to 2 do\n" }{MPLTEXT 1 0 50 "     #a ist diese \+
Stelle von oben aus gezaehlt.  \n" }{MPLTEXT 1 0 15 "     randp:=p;\n"
 }{MPLTEXT 1 0 42 "     randp:=moveElement(i+2,i+2-a,randp);\n" }
{MPLTEXT 1 0 52 "     randp:=makeCanonicalRepresentative(randp);    \n
" }{MPLTEXT 1 0 23 "     if i=1 then k:=j;\n" }{MPLTEXT 1 0 16 "     e
lse k:=6;\n" }{MPLTEXT 1 0 13 "     end if;\n" }{MPLTEXT 1 0 44 "     \+
randoff:=o7+30*(k-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 129 "     sgn:
=(-1)^(2+a); #Koordinate mit geradem Index wird 0, und die anschliesse
nde Koordinatenpermutation ist a Transpositionen.\n" }{MPLTEXT 1 0 23 
"     D10[randoff,off]:=" }{MPLTEXT 1 0 17 "D10[randoff,off]+" }
{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 8 "    od;\n" }{MPLTEXT 1 0 11 "
   end if;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 52 "   #Moeglichkeit \+
IV.7.3: j-1 geht auf den j-Stapel:\n" }{MPLTEXT 1 0 18 "   if j>=i+3 t
hen\n" }{MPLTEXT 1 0 69 "    #drei Moeglichkeiten fuer die Stelle im S
tapel, zu der j-1 geht:\n" }{MPLTEXT 1 0 25 "    for a from 0 to 2 do
\n" }{MPLTEXT 1 0 51 "     #a ist diese Stelle von unten aus gezaehlt.
  \n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 0 42 "     randp
:=moveElement(j-1,j-1+a,randp);\n" }{MPLTEXT 1 0 52 "     randp:=makeC
anonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 25 "     if i=1 th
en k:=j-3;\n" }{MPLTEXT 1 0 16 "     else k:=3;\n" }{MPLTEXT 1 0 13 " \+
    end if;\n" }{MPLTEXT 1 0 44 "     randoff:=o7+30*(k-1)+PermIndex[r
andp];\n" }{MPLTEXT 1 0 129 "     sgn:=(-1)^(2+a); #Koordinate mit ger
adem Index wird 0, und die anschliessende Koordinatenpermutation ist a
 Transpositionen.\n" }{MPLTEXT 1 0 23 "     D10[randoff,off]:=" }
{MPLTEXT 1 0 17 "D10[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT
 1 0 8 "    od;\n" }{MPLTEXT 1 0 11 "   end if;\n" }{MPLTEXT 1 0 1 "\n
" }{MPLTEXT 1 0 52 "   #Moeglichkeit IV.7.4: j+2 geht auf den j-Stapel
:\n" }{MPLTEXT 1 0 16 "   if j<=4 then\n" }{MPLTEXT 1 0 69 "    #drei \+
Moeglichkeiten fuer die Stelle im Stapel, zu der j+2 geht:\n" }
{MPLTEXT 1 0 25 "    for a from 0 to 2 do\n" }{MPLTEXT 1 0 50 "     #a
 ist diese Stelle von oben aus gezaehlt.  \n" }{MPLTEXT 1 0 15 "     r
andp:=p;\n" }{MPLTEXT 1 0 42 "     randp:=moveElement(j+2,j+2-a,randp)
;\n" }{MPLTEXT 1 0 52 "     randp:=makeCanonicalRepresentative(randp);
    \n" }{MPLTEXT 1 0 25 "     if i=1 then k:=j-2;\n" }{MPLTEXT 1 0 
16 "     else k:=3;\n" }{MPLTEXT 1 0 13 "     end if;\n" }{MPLTEXT 1 
0 44 "     randoff:=o7+30*(k-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 
131 "     sgn:=(-1)^(1+a); #Koordinate mit ungeradem Index wird 0, und
 die anschliessende Koordinatenpermutation ist a Transpositionen.\n" }
{MPLTEXT 1 0 23 "     D10[randoff,off]:=" }{MPLTEXT 1 0 17 "D10[randof
f,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 8 "    od;\n" }
{MPLTEXT 1 0 11 "   end if;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 29 "
   #Raender davon vom Typ 8:\n" }{MPLTEXT 1 0 69 "   #Moeglichkeit IV.
8.1: zwei einzelne Punkte links vereinigen sich:\n" }{MPLTEXT 1 0 16 "
   if i>=3 then\n" }{MPLTEXT 1 0 25 "    for a from 0 to 1 do\n" }
{MPLTEXT 1 0 89 "     #a ist diese Stelle von unten aus gezaehlt, zu d
er der erste Punkt nach rechts geht\n" }{MPLTEXT 1 0 15 "     randp:=p
;\n" }{MPLTEXT 1 0 38 "     randp:=moveElement(1,1+a,randp);\n" }
{MPLTEXT 1 0 52 "     randp:=makeCanonicalRepresentative(randp);    \n
" }{MPLTEXT 1 0 35 "     randoff:=o8+PermIndex[randp];\n" }{MPLTEXT 1 
0 131 "     sgn:=(-1)^(1+a); #Koordinate mit ungeradem Index wird 0, u
nd die anschliessende Koordinatenpermutation ist a Transpositionen.\n"
 }{MPLTEXT 1 0 23 "     D10[randoff,off]:=" }{MPLTEXT 1 0 17 "D10[rand
off,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT 1 0 8 "    od;\n" }
{MPLTEXT 1 0 11 "   end if;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "
   #Moeglichkeit IV.8.2: zwei einzelne Punkte in der Mitte vereinigen \+
sich:\n" }{MPLTEXT 1 0 23 "   if i=1 and j=5 then\n" }{MPLTEXT 1 0 25 
"    for a from 0 to 1 do\n" }{MPLTEXT 1 0 86 "     #a ist diese Stell
e von unten aus gezaehlt, zu der der 3. Punkt nach rechts geht\n" }
{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 0 38 "     randp:=moveE
lement(3,3+a,randp);\n" }{MPLTEXT 1 0 52 "     randp:=makeCanonicalRep
resentative(randp);    \n" }{MPLTEXT 1 0 35 "     randoff:=o8+PermInde
x[randp];\n" }{MPLTEXT 1 0 129 "     sgn:=(-1)^(2+a); #Koordinate mit \+
geradem Index wird 0, und die anschliessende Koordinatenpermutation is
t a Transpositionen.\n" }{MPLTEXT 1 0 23 "     D10[randoff,off]:=" }
{MPLTEXT 1 0 17 "D10[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }{MPLTEXT
 1 0 8 "    od;\n" }{MPLTEXT 1 0 11 "   end if;\n" }{MPLTEXT 1 0 1 "\n
" }{MPLTEXT 1 0 70 "   #Moeglichkeit IV.8.3: zwei einzelne Punkte rech
ts vereinigen sich:\n" }{MPLTEXT 1 0 16 "   if j<=3 then\n" }{MPLTEXT 
1 0 25 "    for a from 0 to 1 do\n" }{MPLTEXT 1 0 86 "     #a ist dies
e Stelle von unten aus gezaehlt, zu der der 5. Punkt nach rechts geht
\n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 0 38 "     randp:=
moveElement(5,5+a,randp);\n" }{MPLTEXT 1 0 52 "     randp:=makeCanonic
alRepresentative(randp);    \n" }{MPLTEXT 1 0 35 "     randoff:=o8+Per
mIndex[randp];\n" }{MPLTEXT 1 0 131 "     sgn:=(-1)^(1+a); #Koordinate
 mit ungeradem Index wird 0, und die anschliessende Koordinatenpermuta
tion ist a Transpositionen.\n" }{MPLTEXT 1 0 23 "     D10[randoff,off]
:=" }{MPLTEXT 1 0 17 "D10[randoff,off]+" }{MPLTEXT 1 0 5 "sgn;\n" }
{MPLTEXT 1 0 8 "    od;\n" }{MPLTEXT 1 0 11 "   end if;\n" }{MPLTEXT 
1 0 1 "\n" }{MPLTEXT 1 0 18 "  od; #j-Schleife\n" }{MPLTEXT 1 0 17 " o
d; #i-Schleife\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 18 "od; #for p in
 Perm" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 4 "D12,
" }{MPLTEXT 1 0 13 "D11,D10,Perm," }{MPLTEXT 1 0 9 "PermIndex" }
{MPLTEXT 1 0 2 ";\n" }{MPLTEXT 1 0 9 "end proc:" }{TEXT 213 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "Search(4,[1,2,3,4,5]);" }}
{PARA 11 "" 1 "" {XPPMATH 20 "\"\"%" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 32 "OctahedraOnSpheresCellComplex();" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6'-I'MatrixG6$%*protectedGI(_syslibG6\"6#/I$%idGF(\"*;[<P
\"-F$6#/F+\"*'H++9-F$6#/F+\"*kx^S\"7@7(\"\"\"\"\"#\"\"$\"\"%\"\"&\"\"'
7(F7F8F9F:F<F;7(F7F8F9F;F:F<7(F7F8F9F;F<F:7(F7F8F9F<F:F;7(F7F8F9F<F;F:
7(F7F8F:F9F;F<7(F7F8F:F9F<F;7(F7F8F:F;F9F<7(F7F8F;F9F:F<7(F7F8F;F9F<F:
7(F7F8F;F:F9F<7(F7F9F8F:F;F<7(F7F9F8F:F<F;7(F7F9F8F;F:F<7(F7F9F8F;F<F:
7(F7F9F8F<F:F;7(F7F9F8F<F;F:7(F7F9F:F8F;F<7(F7F9F:F8F<F;7(F7F9F:F<F8F;
7(F7F9F<F8F:F;7(F7F9F<F8F;F:7(F7F9F<F:F8F;7(F7F:F8F9F;F<7(F7F:F8F9F<F;
7(F7F:F8F;F9F<7(F7F:F9F8F;F<7(F7F:F9F8F<F;7(F7F:F9F<F8F;I*PermIndexGF(
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 66 "D12, D11, D10, perm, pe
rmIndex := OctahedraOnSpheresCellComplex();" }{MPLTEXT 1 0 0 "" }}
{PARA 11 "" 1 "" {XPPMATH 20 "6'-I'MatrixG6$%*protectedGI(_syslibG6\"6
#/I$%idGF(\"*G2vN\"-F$6#/F+\"*!ylC9-F$6#/F+\"*?5[S\"7@7(\"\"\"\"\"#\"
\"$\"\"%\"\"&\"\"'7(F7F8F9F:F<F;7(F7F8F9F;F:F<7(F7F8F9F;F<F:7(F7F8F9F<
F:F;7(F7F8F9F<F;F:7(F7F8F:F9F;F<7(F7F8F:F9F<F;7(F7F8F:F;F9F<7(F7F8F;F9
F:F<7(F7F8F;F9F<F:7(F7F8F;F:F9F<7(F7F9F8F:F;F<7(F7F9F8F:F<F;7(F7F9F8F;
F:F<7(F7F9F8F;F<F:7(F7F9F8F<F:F;7(F7F9F8F<F;F:7(F7F9F:F8F;F<7(F7F9F:F8
F<F;7(F7F9F:F<F8F;7(F7F9F<F8F:F;7(F7F9F<F8F;F:7(F7F9F<F:F8F;7(F7F:F8F9
F;F<7(F7F:F8F9F<F;7(F7F:F8F;F9F<7(F7F:F9F8F;F<7(F7F:F9F8F<F;7(F7F:F9F<
F8F;I*PermIndexGF(" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "permI
ndex[[1,2,3,6,5,4]];" }}{PARA 11 "" 1 "" {XPPMATH 20 "\"\"'" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 24 "linalg[iszero](D11.D12);" }}
{PARA 11 "" 1 "" {XPPMATH 20 "I%trueG%*protectedG" }}}{EXCHG {PARA 0 "
> " 0 "" {MPLTEXT 1 0 3 "lin" }{MPLTEXT 1 0 21 "alg[iszero](D10.D11);"
 }}{PARA 11 "" 1 "" {XPPMATH 20 "I%trueG%*protectedG" }}}{EXCHG {PARA 
0 "> " 0 "" {MPLTEXT 1 0 29 "b12,Z12:=Cohomology(D12,D11);" }}{PARA 11
 "" 1 "" {XPPMATH 20 "6$-I&ArrayG%*protectedG6#/I$%idG6\"\"*#>4Y8-I'Ma
trixG6$F%I(_syslibGF)6#/F(\"*Sj\\U\"" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 25 "b,Z:=Cohomology(D11,D10);" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6$-I&ArrayG%*protectedG6#/I$%idG6\"\"*)o]Y8-I'MatrixG6$F%
I(_syslibGF)6#/F(\"*;\"4>:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
58 "convert(Z[1..-1,202],'list')+convert(Z[1..-1,210],'list');" }}
{PARA 11 "" 1 "" {XPPMATH 20 "7f_l\"\"!!\"\"!\"#\"\"\"F#\"\"#F#F#F#F#F
#F'F$F&F#F#F#F#F$F#F#F#F#F#F%\"\"$F%F#F#F#F%F#F#F(F#F#F&F'F#F#F%F&F#F#
F#F&F#F#F#F&F%F#F#!\"$F#F#F#F#F#F#F'F&F#F'F&F%\"\"%F&F)F$F#F)F#F#F'F#F
#F#F#F#F%F#F#F#F#F#F#F%F#F#!\"%\"\"(!\"&F)F'F)F&\"\"&F#F#F#F#F#F&F#F#F
#F#F#F#F#F$F#F#F'F#F#F#F#F%F&F$F'F#F#F#F$F#F$F#F#F#F#F#F$F$F#F#F#F#F#F
#F#F#F&F'F$F#F#F#F$F.F#F#F#F#F#\"\"'F/F#F#F#F#F#F#F#F%F#F#F#F#F#F#F/F#
F#F#F#F#F#F(F#F(F#F#F#F$F#F$F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F$F#F#F#F#F#F&F#!\"'F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F(F#F#F#F*F#F*F#
F#F#F#F#F#F$F#F$F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F$F#F#F#F#F#F*
F#F#F*F#F#F#F&F#F#F#F#F#F#F#F#F#F#F#F#F#F#F&F#F#F#F#F#F#F#F'F#F#F#F#F#
F#F#F#F#F#F#F#F&F#F#F#F#F#F&F&F&" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT
 1 0 58 "convert(Z[1..-1,190],'list')+convert(Z[1..-1,209],'list');" }
{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "7f_l!\"\"\"\"!!\"'F%
F$\"\"$\"\"%!\"%!\"#\"\"\"F$\"\"(F'F(\"\"&F$F$F$F,F(\"\"#F$F$F$F(\"\"'
F%F$F$F$F(!\"&\"#5F0F$F*F)F&!\"(F-!\")F.F$F$F.F0F$F$F/F(F)F$F$!#6F$F$F
$F$F$F$F&F%\"#:\"\")F)F(\"\"*F(!#8F*F$F7F$F$\"#;F$F$F$F$F$F)F$F(F$F$F$
F$F%F-F$F2F0F3F3F-F%F+F5F$F$F$F$F$!\"$F$F.F$F,F$F$F$F&F$F$F'F$F$F$F$F%
F-F#F&F$F$F$F*F$F*F*F*F'F(F$F1F1F$F$F$F$F$F$F$F$F'F-F$F$F$F$F%F-F'F$F9
F+F$F6\"#@F$F$F$F$F$F$F$!#5F9F$F$F$F$F$\"#BF$F$F$F$F$F$F$F$F(F'F$F$F/F
$F#F$F$F$F$F$F$F$F$F$F$F$F$F$F$F$F'F$F$F$F$F$F(F$F$F$F$F$F'F$!#9F$F$F$
F$F$F$F$F$F$F$F$F$F$F$F$F$F$F5F$F$F$\"#7F$F>F$F$F$F$F$F$F9F$F9F$F$F$F$
F$F$F$F$F$F$F$F$F$F$F$F$F$F$F(F$F2F$F$F$F'F$F0F$F$F+F$F$F$F>F$F$F$F$F$
F$F$F$F$F$F$F$F$F$F5F$F9F$F$F$F$F$F'F*F$F$F$F$F$F$F$F$F$F$F$F$F$F$F$F$
F*F)F$F&" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "1=2;" }}{PARA 11
 "" 1 "" {XPPMATH 20 "/\"\"\"\"\"#" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 16 "modp(D10.D11,2);" }}{PARA 11 "" 1 "" {XPPMATH 20 "-I'
MatrixG6$%*protectedGI(_syslibG6\"6#/I$%idGF'\"*Kd?N\"" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 8 "D10.D11;" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "-I'MatrixG6$%*protectedGI(_syslibG6\"6#/I$%idGF'\"*s([M9"
 }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "IntegerRelations[LLL];" 
}}{PARA 11 "" 1 "" {XPPMATH 20 "I$LLLG6$%*protectedG/I+modulenameG6\"I
1IntegerRelationsG6$F$I(_syslibGF'" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 20 "X:=Z[1..330,1..206];" }}{PARA 11 "" 1 "" {XPPMATH 20 
"-I'MatrixG6$%*protectedGI(_syslibG6\"6#/I$%idGF'\"+7O0&4\"" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 24 "X12:=Z12[1..150,1..119];" }}
{PARA 11 "" 1 "" {XPPMATH 20 "-I'MatrixG6$%*protectedGI(_syslibG6\"6#/
I$%idGF'\"*+OiM\"" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 31 "matrix
ToListOfLists := proc(M)\n" }{MPLTEXT 1 0 11 "local L,i;\n" }{MPLTEXT 
1 0 7 "L:=[];\n" }{MPLTEXT 1 0 38 "for i from 1 to ColumnDimension(M) \+
do\n" }{MPLTEXT 1 0 41 "  L:=[op(L),convert(M[1..-1,i],'list')];\n" }
{MPLTEXT 1 0 4 "od;\n" }{MPLTEXT 1 0 3 "L;\n" }{MPLTEXT 1 0 9 "end pro
c:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 24 "matrixToListOfLists(D
1);" }}{PARA 11 "" 1 "" {XPPMATH 20 "7&7$\"\"\"!\"\"7$\"\"!F'F&7$F%F$"
 }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 
0 "" {MPLTEXT 1 0 26 "Xred:=IntegerRelations[LLL" }{MPLTEXT 1 0 36 "](
matrixToListOfLists(X),'integer'):" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 66 "X12red:=IntegerRelations[LLL](matrixToListOfLists(X12
),'integer'):" }{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT
 1 0 26 "betragsQuadrat := proc(V)\n" }{MPLTEXT 1 0 13 "local res,i;\n
" }{MPLTEXT 1 0 8 "res:=0;\n" }{MPLTEXT 1 0 14 "for i in V do\n" }
{MPLTEXT 1 0 16 "  res:=res+i^2;\n" }{MPLTEXT 1 0 4 "od;\n" }{MPLTEXT 
1 0 9 "end proc:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 24 "betrags
Quadrat([1,2,3]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "\"#9" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 21 "querSumme := proc(V)\n" }{MPLTEXT 
1 0 13 "local res,i;\n" }{MPLTEXT 1 0 8 "res:=0;\n" }{MPLTEXT 1 0 14 "
for i in V do\n" }{MPLTEXT 1 0 14 "  res:=res+i;\n" }{MPLTEXT 1 0 4 "o
d;\n" }{MPLTEXT 1 0 9 "end proc:" }{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0
 "> " 0 "" {MPLTEXT 1 0 19 "querSumme([1,2,3]);" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "\"\"'" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "[1,2,
3]+[1,2,3];" }}{PARA 11 "" 1 "" {XPPMATH 20 "7%\"\"#\"\"%\"\"'" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 145 "Die naechste Routine versuc
ht L betragsmaessig klein zu bekommen, indem Vektoren aus der Liste VL
ist davon substrahiert oder draufaddiert werden:" }}{PARA 8 "" 1 "" 
{TEXT 214 30 "Error, missing operator or `;`" }}}{EXCHG {PARA 0 "> " 0
 "" {MPLTEXT 1 0 37 "reduceVectorByOtherVectors := proc(VL" }{MPLTEXT 
1 0 7 "ist,L)\n" }{MPLTEXT 1 0 35 "local reduziert,v,jetzigesBQ,newL;
\n" }{MPLTEXT 1 0 18 "reduziert:=false;\n" }{MPLTEXT 1 0 31 "jetzigesB
Q:=betragsQuadrat(L);\n" }{MPLTEXT 1 0 9 "newL:=L;\n" }{MPLTEXT 1 0 
25 "while reduziert=false do\n" }{MPLTEXT 1 0 19 "  reduziert:=true;\n
" }{MPLTEXT 1 0 20 "  for v in VList do\n" }{MPLTEXT 1 0 47 "    while
 betragsQuadrat(newL-v)<jetzigesBQ do\n" }{MPLTEXT 1 0 20 "      newL:
=newL-v;\n" }{MPLTEXT 1 0 40 "      jetzigesBQ:=betragsQuadrat(newL);
\n" }{MPLTEXT 1 0 24 "      reduziert:=false;\n" }{MPLTEXT 1 0 12 "   \+
 end do;\n" }{MPLTEXT 1 0 47 "    while betragsQuadrat(newL+v)<jetzige
sBQ do\n" }{MPLTEXT 1 0 20 "      newL:=newL+v;\n" }{MPLTEXT 1 0 40 " \+
     jetzigesBQ:=betragsQuadrat(newL);\n" }{MPLTEXT 1 0 24 "      redu
ziert:=false;\n" }{MPLTEXT 1 0 12 "    end do;\n" }{MPLTEXT 1 0 6 "  o
d;\n" }{MPLTEXT 1 0 4 "od;\n" }{MPLTEXT 1 0 6 "newL;\n" }{MPLTEXT 1 0 
9 "end proc:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "for i from 207 to 210 do\n" }
{MPLTEXT 1 0 70 "  print(reduceVectorByOtherVectors(Xred,convert(Z[1..
-1,i],'list')));\n" }{MPLTEXT 1 0 3 "od:" }}{PARA 11 "" 1 "" {XPPMATH 
20 "7f_l\"\"\"!\"\"F$\"\"!F%F%F%\"\"#F%F$F%F#F%F%F%F$F%F%F$F&F$F$F%F#F
#F%F$F#F%F$F#F%!\"#F$F#F#F#F$F%F#F%F#F%F%F%F%F%F'F#F$F%F#F%F%F%F%F%F%F
%F$F#F%F%F'F%F#F#F#F'F$F$F#F$F#!\"$F%F'F&F%F#F%F$F#F$F$F#F#F#F#F#F$F$F
%F#F%F$F#F$F'F%F#F%F$F%F$F%F%F#F$F%F$F#F#F%F%F#F%F#F#F#F%F%F%F$F$F$F#F
%F$F%F%F$F#F%F$F$F#F#F$F$F$F$F#F%\"\"$F&F&F%F%F$F'F%F%F#F&F$F$F%F$F%F#
F$F%F%F&F#F&F%F#F%F$F%F%F#F#F%F%F%F%F%F#F&F%F'F%F(F%F%F%F%F$F$F#F%F'F$
F%F#F%F%F%F#F$F'F#F$F&F$F#F%F%F%F$F%F%F%F%F&F'F'F%F%F%F$F#F%F$F%F$F%F%
F%F%F$F#F#F$F&F$F%F#F&F$F%F$F%F%F#F%F)F'F(F%F#F%F%F%F%F&F$F%F%F$F%F%F&
F%F#F%F#F#F$F'F%F$F%F#F%\"\"%F#F%F%F#F$F%F%F%F$F%F%F%F%F%F$F%F%F%F$F%F
%F%F%F#F%F#F%F%F%F'F%F%F%F$F%F$F%F'F%F%F%F%F%F%F%F%F#F#F%F#F$" }}
{PARA 11 "" 1 "" {XPPMATH 20 "7f_l\"\"!\"\"#!\"\"F#F#F%\"\"\"F#F%F&F%F
#F%F#F&F$F#!\"$F&F%F$F%F&F#F%F#F%F#F&F#F%F%F&F'F#F#F%F#F#F$F#F#F&F#F#F
%F%F&F&F#F#F%F&F#F&F%F#F&F#F&F#F#F%F#F%F#F$F#F#F&F#F%F#F$F$F%F&F%F&F#F
#F&!\"#F#F#F#F%F%F#F%F&F#F&F(F#F&F&F&F&F#F%F#F#F&F&F&F%F#F#F&F(F&F(F#F
&F(F#F#F%F%F#F#F#F&F%F#F#F&F#F#F&F&F(F&F#F#F%F(F#F%F#F$F#F#F#F#F%F#F&F
#F$F#\"\"$F#F&F&F&F%F&F$F%F#F#F#F%F%F%F&F#F#F%F#F#F#F%F%F&F%F%F&F&F#F%
F$F%F&F&F&F#F#F#F#F%F#F&F#F&F#F#F&F&F&F#F#F&F%F#F%F#F#F$F&F#F%F#F#F#F%
F%F%F#F#F#F#F#F#F&F#F&F#F#F#F#F#F#F%F&F%F#F#F#F#F#F#F&F#F#F%F#F%F#F$F#
F#F%F#F#F#F%F#F#F#F#F%F#F#F#F%F#F#F%F#F&F#F&F#F$F&F#F#F#F%F#F%F#F$F#F#
F%F#F#F#F#F#F#F#F#F#F#F#F&F%F(F$F#F#F#F#F&F#F#F#F#F#F&F#F)F#F&F#F#F#F#
F#F%F#F#F%F&F&" }}{PARA 11 "" 1 "" {XPPMATH 20 "7f_l!\"\"\"\"!\"\"#F%F
%!\"$!\"#F$\"\"\"F'F$F#F(F'F#F$F(F$F$F$\"\"&F$F%F$!\"%F$F(F$F(F'F*F'F%
F#F#F'F%F#F#F#F#F$\"\"$F#F#F$F(F%F#F+F(F'F%F(F$F(F'F%F#F%F$F'F'F(!\"&F
(F%F'F(\"\"'F$F'F#F$\"\")F*F)F'F)F#F(F&F#F(F$F(F'F'F'F#F(F%F$F'F#F+F(F
$\"\"%F+F(F*F(F$F%F#F#F(F(F$F$F'F&F%F$F'F&F$F#F'F$F%F$F%F%F#F$F+F%F(F/
F)F'F(F(F#F&F(F+F#F%F(F'F#F'F,F&F'F*F&F/F$F%F'F/F/F$F$F%F#F$F#F&F'F,F#
F,F#F*F'F(F#F#F$F,F&F%F'F'F$F+F#F'F$F#F(F/F$F&F(F/F/!\"*F#F/F/F/F$F+F%
F)F)F'F-F/F#F&F(F&F#F/F(F%F$F$F%F(F(F(F+F%F(F#F%F$F'F+F%F+F$F$F$F(F#F*
F'F%!\"'F'F#F%F,F/F+F.F%F+F$F$!\"(F$F.F+F#F&F$F$F(F(F%F(F(F(F2F&F*F'F'
F%F&F2F'\"\"*F'F%F#F$F#F'!\")F#F*F(F'F#\"\"(F'F%F&F$F(F$F$F)F#F#F$F%F%
F/F)F(F2F/F#F(F(F$F+F(F&F%F(F&F-F'F5F&F)F+F+F,F+F#F$F$F$F#F(F$" }}
{PARA 11 "" 1 "" {XPPMATH 20 "7f_l\"\"\"!\"\"!\"#F%F$F#\"\"#F$F%F#F#F&
F$F&\"\"!F$F$F#F'F#!\"&F'F'F'\"\"%F&F$F$F'F#\"\"$F&F%F#F&F*F$F$F#F#F#F
$!\"$F#F&F'F$F%F#F+F'F*F%F'F%F'F$F$F&F+F#F#F&F'F*F#F+F&F+!\"'F#F&F#F#!
\")F)F,F&!\"%F'F'F#F*F%F%F'F&F*F&F&F'F.F#F&F#F%F#F$F.F.F%F*F$F$F%F#F'F
$F$F&F'F*F*F+F'F*F&F#F&F#F'F$F'F%F$F'F#F%F+F$F+F+F&F%F+F$F&F'F.F#F%F$F
&F&F*F)F*F&\"\"&F&F(F'F%F#F$F.F$F#F+F'F'F'F*F#\"\"(F&\"\"'F&F)F&F$F*F#
F#F*F&F%F'F#F$F+F$F'F%F%F+F(F$F*F#F%F+\"\")F#F(F,F+F$F%F$F(F+F&F(F%F'F
)F%F*F#F(F$F+F$F$F%F+F$F%F+F$F$F'F%F'F#F%F%F+F'F'F$F'F'F/F*F%F1F'F&F'F
1F+F+!\"(F%F(F#F%F2F&!\"*F%F#F/F$F'F$F'F$F%F'F'F1F&F/F#F&F$F&F/F#F3F#F
'F#F#F'F&F1F$F*F$F#F'F,F#F%F*F'F%F'F'F.F#F&F'F+F%F+F+F'F/F.F%F%F%F#F+F
'F*F%F%F&F(F#F,F)F.F%F$F)F%F#F'F'F#F#F'F$" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 66 "reduceVectorByOtherVectors(X12red,convert(Z12[1..-1,
121],'list'));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "7bt
\"\"!F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#\"\"\"F#F#F$F$F#F#F
$F#F#F#F#F$F#F#F#F#F#F#F#F#F#F#F#F#!\"\"F#F#F#F#F#F$F#F#F%F#F#F#F%F#F#
F#F#F$F#F%F#F#F#F$F#F#F#F#F#F#F#F#F#F#F$F$F#F#F#F#F#F#F#F#F#F#F#F#F$F#
F#F#F#F#F#F#F#F#F#F#F%F#F#F#F#F%F#F#F#F#F#F#F#F#F#F#F#F#F%F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F%F#F#" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 
1 0 47 "reduceVectorByOtherVectorsX := proc(VMatrix,L)\n" }{MPLTEXT 1 
0 25 "local LVec,Lproj,Lambda;\n" }{MPLTEXT 1 0 41 "LVec:=convert(conv
ert(L,Vector),Matrix);\n" }{MPLTEXT 1 0 99 "#Lproj:=convert(VMatrix.Ma
trixInverse(Transpose(VMatrix).VMatrix).Transpose(VMatrix).LVec,'list'
);\n" }{MPLTEXT 1 0 16 "Lambda:=convert(" }{MPLTEXT 1 0 75 "MatrixInve
rse(Transpose(VMatrix).VMatrix).Transpose(VMatrix).LVec,'list');\n" }
{MPLTEXT 1 0 27 "Lambda:=map(round,Lambda);\n" }{MPLTEXT 1 0 31 "Lambd
a:=convert(Lambda,Vector);" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 34 "L-c
onvert(VMatrix.Lambda,'list');\n" }{MPLTEXT 1 0 9 "end proc:" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 60 "reduceVectorByOtherVectorsX(X,convert(Z[1..-1,207],'
list'));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "7f_l!\"#!
#7\"\"!\"#5\"\"(\"\"'!\"'F(\"\"#!\")F%\"\"%!#5F&!\"$F%F%F%F+F(F#F%F%F%
F*\"\"$!\"&F%F%F%F#F,!#9F*F%F*F&F(F/F%F.F%F%F%F+!\"%F%F%F/F&F)F%F%F.F%
F%F%F%F%F%F(F&!#CF&\"#7F)F,F4F%F$F%F,F%F%F)F%F%F%F%F%F)F%F2F%F%F%F%F*F
#F%F1\"#CF+F0F,!#:F#\"#?F%F%F%F%F%F(F%!#6F%F.F%F%F%F)F%F%F/F%\"\"&F%F%
F*F.F1\"#8F%F%F%F#F%F#F+F+F#F*F%F'F'F%F%F%F%F%F%F%F%F9F9F%F%F%F%F)\"#K
F%F%F#F#F%\"#A\"\"\"F%F%F%F%F%F%F%F%\"\")F%F%F%F%F%F/F%F%F%F%F%F%\"\"*
F%F?F2F%F%F#F%F*F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F*F%F%F%F%F%
F#F%F1F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F(F%F%F%F4F*F&F%F%F%F%F%F%F(F%
F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F*F%F(F%F%F%F%F%F&F%F%F&F%F%F%F-
F%F%F%F%F%F%F%F%F%F%F%F%F%F%F#F%F*F%F*F%F%F%F,F%F%F%F%F%F%F%F%F%F%F%F%
F%F%F%F%F%F%F%F%F=" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 55 "#Proj
X := X.MatrixInverse(Transpose(X).X).Transpose(X);" }}}{EXCHG {PARA 0 
"> " 0 "" {MPLTEXT 1 0 4 "#M:=" }{MPLTEXT 1 0 43 "MatrixInverse(Transp
ose(X).X).Transpose(X);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 44 "
XredMatrix:=Transpose(convert(Xred,Matrix));" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "-I'MatrixG6$%*protectedGI(_syslibG6\"6#/I$%idGF'\"*WIaa\"
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 76 "Mred:=MatrixInverse(Tra
nspose(XredMatrix).XredMatrix).Transpose(XredMatrix);" }{MPLTEXT 1 0 
0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "-I'MatrixG6$%*protectedGI(_syslib
G6\"6#/I$%idGF'\"*KodM\"" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> "
 0 "" {MPLTEXT 1 0 33 "Z1:=convert(Z[1..-1,207],'list');" }}{PARA 11 "
" 1 "" {XPPMATH 20 "7f_l!\"#!#7\"\"!\"#5\"\"(\"\"'!\"'F(\"\"#!\")F%\"
\"%!#5F&!\"$F%F%F%F+F(F#F%F%F%F*\"\"$!\"&F%F%F%F#F,!#9F*F%F*F&F(F/F%F.
F%F%F%F+!\"%F%F%F/F&F)F%F%F.F%F%F%F%F%F%F(F&!#CF&\"#7F)F,F4F%F$F%F,F%F
%F)F%F%F%F%F%F)F%F2F%F%F%F%F*F#F%F1\"#CF+F0F,!#:F#\"#?F%F%F%F%F%F(F%!#
6F%F.F%F%F%F)F%F%F/F%\"\"&F%F%F*F.F1\"#8F%F%F%F#F%F#F+F+F#F*F%F'F'F%F%
F%F%F%F%F%F%F9F9F%F%F%F%F)\"#KF%F%F#F#F%\"#A\"\"\"F%F%F%F%F%F%F%F%\"\"
)F%F%F%F%F%F/F%F%F%F%F%F%\"\"*F%F?F2F%F%F#F%F*F%F%F%F%F%F%F%F%F%F%F%F%
F%F%F%F%F%F%F%F%F%F*F%F%F%F%F%F#F%F1F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%
F(F%F%F%F4F*F&F%F%F%F%F%F%F(F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F*
F%F(F%F%F%F%F%F&F%F%F&F%F%F%F-F%F%F%F%F%F%F%F%F%F%F%F%F%F%F#F%F*F%F*F%
F%F%F,F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F%F=" }}}{EXCHG {PARA 0 ">
 " 0 "" {MPLTEXT 1 0 29 "convert(Z[1..-1,200],'list');" }}{PARA 11 "" 
1 "" {XPPMATH 20 "7f_l\"\")\"#l!#=!#k!#S!#A\"#W!#W!#:\"#\\\"\"!!\"\"\"
#g!#h\"#FF-F-F-\"#`F*\"#:F-F-F-!#E\"\"&\"\"*F-F-F-!\"$!#O\"$/\"\"#8F-!
\"*!#cF(!#I\"\"%!\"&\"#;F-F-\"#f\"#UF-F-!#F!#g\"#CF-F-!#9F-F-F-F-F-F-F
(F&\"$j\"!#N!#p\"#AF#!#qFHF$F-!#dF-F-\"#tF-F-F-F-F-FEF-F:F-F-F-F-F=\"#
9F-F2!#&*\"#6!\"'FF\"#kF1!##)F-F-F-F-F-!#QF-\"#wF-F1F-F-F-\"#RF-F-F7F-
!#HF-F-F=FJFM!#iF-F-F-F6F-F#F,F,\"#@!#@F-!#bFenF-F-F-F-F-F-F-F-!#<Ffn!
\"%F-F-F-\"#?!$m\"F#F-F>\"#GF-!##*\"#eF-F-F-F-F-F-F-!#D!#`F-F-F-F-F-\"
#]F-F-F-F-F-F-F*F-!#_\"#KF-F-F?F-FZF-F-F-F-F-F-F-F-F-F-F-F-F-F-F-F#F-F
-F-F-F-FZF-F-F-F-F-FYF-FaoF-F-F-F-F-F-F-F-F-F-F-F-F-F-F-F-F-!\")F-F-F-
!#K!#7!#?F-F-F-F-F-F-!#UF-FQF-F-F-F-F-F-F-F-F-F-F-F-F-F-F-F-F-F-FeoF-!
#]F-F-F-F#F-F(F-F-!#JF-F-F-\"##)F-F-F-F-F-F-F-F-F-F-F-F-F-F-\"#IF-FZF-
!#6F-F-F-F;F-F-F-F-F-F-F-F-F-F-\"\"\"F-F-F-F-F-F-F-F-F>F\\p" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 33 "Z2:=convert(Z[1..-1,208],'li
st'):" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 33 "Z3:=convert(Z[1..-
1,209],'list'):" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 33 "Z4:=conv
ert(Z[1..-1,210],'list'):" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
24 "Z1v:=convert(Z1,Vector):" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 
0 24 "Z2v:=convert(Z2,Vector):" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 
1 0 24 "Z3v:=convert(Z3,Vector):" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT
 1 0 24 "Z4v:=convert(Z4,Vector):" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 39 "Z1red:=reduceVectorByOtherVectors(Xred," }{MPLTEXT 
1 0 83 "Z1-convert(XredMatrix.convert(map(round,convert(Mred.Z1v,'list
')),Vector),'list'));" }}{PARA 11 "" 1 "" {XPPMATH 20 "7f_l\"\"!F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#\"\"\"F#!\"\"F#F#F#F#F#F#F#F
#F#F#F%F#F#F#F#F#F#F#F#F#F#F#F$F#F#F#F#F#F%F#F#F$F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F$F%F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F$F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F$F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F$" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 
0 122 "Z2red:=reduceVectorByOtherVectors(Xred,Z2-convert(XredMatrix.co
nvert(map(round,convert(Mred.Z2v,'list')),Vector),'list'));" }{MPLTEXT
 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "7f_l\"\"!F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#\"\"\"F#F#F#F#F#F#F#F#F#!\"\"
F#F#F#F#F#F$F%F#F#F#F#F%F#F#F$F%F#F$F%F#F#F#F#F#F%F#F#F#F#F#F#F#F#F#F$
F#F#F#F#F$F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F%F#F%F#F#F#F#F$F#F#F#F#F$
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F%F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F%F#F#F#F#F#F#F#F#F%F#F#F#F#F#
F#F#F#F#F#F#F#F$F#F$F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F$F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F$" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 122 "Z3red:
=reduceVectorByOtherVectors(Xred,Z3-convert(XredMatrix.convert(map(rou
nd,convert(Mred.Z3v,'list')),Vector),'list'));" }{MPLTEXT 1 0 0 "" }}
{PARA 11 "" 1 "" {XPPMATH 20 "7f_l\"\"!F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#\"\"\"F#F#!\"\"F#F#F#F#F#F#
F#F#F%F#F#F#F#F#F$F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F$F%F$
F#F%F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F%F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F%F#F%F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F$F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F$" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 122 "Z4red:=reduceVecto
rByOtherVectors(Xred,Z4-convert(XredMatrix.convert(map(round,convert(M
red.Z4v,'list')),Vector),'list'));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1
 "" {XPPMATH 20 "7f_l\"\"!F#F#F#F#F#F#F#F#F#F#\"\"\"F#F#!\"\"F$F#F#F#F
#F#F#F#F%F#F#F#F#F#F#F#F#F#F#F#F#F#F$F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F%F#F#F#F#F#F$F#F%F#F$F#F%F$F#F#F#F$F#F#F%F%F#F#F#F#F#F#F$F#F%F#F
#F#F#F#F%F#F#F#F#F#F%F%F%F$F$F$F#F#F#F#F$F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F$F#F%F%F#F#F$F#F
#F%F#F#F#F#F%F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 143 "reduceVectorByOtherVectors(
Xred,Z1+Z2-convert(XredMatrix.convert(map(round,convert(Mred.Z1v,'list
')+convert(Mred.Z2v,'list')),Vector),'list'));" }{MPLTEXT 1 0 0 "" }}
{PARA 11 "" 1 "" {XPPMATH 20 "7f_l\"\"!F#F#F#F#F#\"\"\"!\"\"F#F#F$F#F#
F#F#F#F#F#F#F#F#F%F#F#F#F#F#F#F#F#F$F#F#F#F#F#F%F#F$F#F#F#F$F#F#F#F#F#
F#F#F#F%F#F#F#F#F#F#F#F%F#F#F#F#F#F#F%F#F#F#F#F#F$F#F#F#F#F$F$F%F#F#F$
F#F%F#F#F#F%F#F$F#F#F$F#F%F$F$F#F%F$F%F%F#F#F%F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F$F%F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F%F$F#
F#F$F#F#F$F$F#F#F#F#F#F$F#F%F#F#F#F#F#F#F$F#F#F#F#F#F#F#F$F#F#F$F#F%F#
F%F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 
"> " 0 "" {MPLTEXT 1 0 48 "X12redMatrix:=Transpose(convert(X12red,Matr
ix));" }}{PARA 11 "" 1 "" {XPPMATH 20 "-I'MatrixG6$%*protectedGI(_sysl
ibG6\"6#/I$%idGF'\"*!33Y8" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
84 "M12red:=MatrixInverse(Transpose(X12redMatrix).X12redMatrix).Transp
ose(X12redMatrix);" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 
"-I'MatrixG6$%*protectedGI(_syslibG6\"6#/I$%idGF'\"*;)RG:" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 49 "Z12letzterVektor:=convert(Z12[1..-1
,121],'list');" }}{PARA 11 "" 1 "" {XPPMATH 20 "7bt\"\"!F#!\"$F#F#F#F$
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#\"\"$F$!\"#F#F#F#F#F%F#F#F#F#F%F$F#F
%F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F$F%F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F$F#F&" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 39 "Z12v:=conver
t(Z12letzterVektor,Vector);" }}{PARA 11 "" 1 "" {XPPMATH 20 "-&I'Vecto
rG6$%*protectedGI(_syslibG6\"6#I'columnGF(6#/I$%idGF(\"*7FPN\"" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 152 "convert(reduceVectorByOther
Vectors(X12red,Z12letzterVektor-convert(X12redMatrix.convert(map(round
,convert(M12red.Z12v,'list')),Vector),'list')),Vector);" }{MPLTEXT 1 
0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "-&I'VectorG6$%*protectedGI(_sys
libG6\"6#I'columnGF(6#/I$%idGF(\"*so$f:" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 26 "l1:=convert(M.Z1v,'list'):" 
}}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 19 "l1r:=map(round,l1);" }}
{PARA 8 "" 1 "" {TEXT 214 652 "Error, invalid input: round expects its
 1st argument, a1, to be of type algebraic, but received Vector(330, \+
\{(1) = -2, (2) = -12, (3) = 0, (4) = 10, (5) = 7, (6) = 6, (7) = -6, \+
(8) = 6, (9) = 2, (10) = -8, (11) = 0, (12) = 4, (13) = -10, (14) = 10
, (15) = -3, (16) = 0, (17) = 0, (18) = 0, (19) = -8, (20) = 6, (21) =
 -2, (22) = 0, (23) = 0, (24) = 0, (25) = 2, (26) = 3, (27) = -5, (28)
 = 0, (29) = 0, (30) = 0, (31) = -2, (32) = 4, (33) = -14, (34) = 2, (
35) = 0, (36) = 2, (37) = 10, (38) = 6, (39) = 3, (40) = 0, (41) = -3,
 (42) = 0, (43) = 0, (44) = 0, (45) = -8, (46) = -4, (47) = 0, (48) = \+
0, (49) = 3, (50) = 10, (51) = -6, (52) = 0, (53) = ..." }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "round(l1[4]);" }}{PARA 8 "" 1 "" 
{TEXT 214 33 "Error, invalid subscript selector" }}}{EXCHG {PARA 0 "> 
" 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 ""
 }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 
0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 26 "#f
or i from 207 to 210 do\n" }{MPLTEXT 1 0 1 "#" }{MPLTEXT 1 0 8 "  prin
t(" }{MPLTEXT 1 0 59 "reduceVectorByOtherVectorsX(X,convert(Z[1..-1,i]
,'list')));" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 1 "#" }{MPLTEXT 1 0 3 
"od:" }{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 ""
 }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "Rank(ProjX);" }}{PARA 8 
"" 1 "" {TEXT 214 135 "Error, (in LinearAlgebra:-Rank) invalid input: \+
LinearAlgebra:-Rank expects its 1st argument, M, to be of type Matrix \+
but received ProjX" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 53 "v:=con
vert(convert([1.3,2.7,3.5,4.2],Vector),Matrix);" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "-I'MatrixG6$%*protectedGI(_syslibG6\"6#/I$%idGF'\"*[%3H:"
 }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 5 "D1.v;" }}{PARA 11 "" 1 ""
 {XPPMATH 20 "-I'MatrixG6$%*protectedGI(_syslibG6\"6#/I$%idGF'\"*go6b
\"" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "round(v);" }}{PARA 8 "
" 1 "" {TEXT 214 166 "Error, invalid input: round expects its 1st argu
ment, a1, to be of type algebraic, but received Matrix(4, 1, \{(1, 1) \+
= 1.3, (2, 1) = 2.7, (3, 1) = 3.5, (4, 1) = 4.2\})" }}}{EXCHG {PARA 0 
"> " 0 "" {MPLTEXT 1 0 10 "map(round," }{MPLTEXT 1 0 19 "[1.3,2.7,3.5,
4.2]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "7&\"\"\"\"\"$\"\"%F%" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{SECT 1 {PARA 3 "" 0 "" {TEXT 212 74 "Test, ob g
eratene Mannigfaltigkeiten die Erzeuger Z1...Z4 repraesentieren:" }
{TEXT 212 0 "" }}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 52 "ProjZ := MatrixInverse(Transpose(Z)
.Z).Transpose(Z);" }{MPLTEXT 1 0 0 "" }}{PARA 7 "" 1 "" {TEXT 215 33 "
Warning,  computation interrupted" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 25 "v1:=Vector[column](330):\n" }{MPLTEXT 1 0 26 "v1[150+
30*(2-1)+permIndex[" }{MPLTEXT 1 0 28 "makeCanonicalRepresentative(" }
{MPLTEXT 1 0 21 "[1,2,3,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 3 "v1[" }
{MPLTEXT 1 0 13 "150+30*(2-1)+" }{MPLTEXT 1 0 10 "permIndex[" }
{MPLTEXT 1 0 28 "makeCanonicalRepresentative(" }{MPLTEXT 1 0 21 "[2,1,
3,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 3 "v1[" }{MPLTEXT 1 0 13 "150+30*(2-1
)+" }{MPLTEXT 1 0 10 "permIndex[" }{MPLTEXT 1 0 28 "makeCanonicalRepre
sentative(" }{MPLTEXT 1 0 21 "[1,2,3,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 3 
"v1[" }{MPLTEXT 1 0 13 "150+30*(2-1)+" }{MPLTEXT 1 0 10 "permIndex[" }
{MPLTEXT 1 0 28 "makeCanonicalRepresentative(" }{MPLTEXT 1 0 21 "[2,1,
3,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 4 "v1, " }{MPLTEXT 1 0 10 "ProjZ.v1, 
" }{MPLTEXT 1 0 32 "linalg[iszero](v1-Z.(ProjZ.v1));" }{MPLTEXT 1 0 1 
"\n" }{MPLTEXT 1 0 1 " " }}{PARA 11 "" 1 "" {XPPMATH 20 "6%-&I'VectorG
6$%*protectedGI(_syslibG6\"6#I'columnGF)6#/I$%idGF)\"*?8ON\"-I\".GF&6$
I&ProjZGF)F#I&falseGF'" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "v
2:=Vector[column](330):\n" }{MPLTEXT 1 0 75 "v2[150+30*(5-1)+permIndex
[makeCanonicalRepresentative([1,2,3,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 75 
"v2[150+30*(5-1)+permIndex[makeCanonicalRepresentative([1,3,2,4,5,6])]
]:=1:\n" }{MPLTEXT 1 0 75 "v2[150+30*(5-1)+permIndex[makeCanonicalRepr
esentative([1,2,3,4,6,5])]]:=1:\n" }{MPLTEXT 1 0 75 "v2[150+30*(5-1)+p
ermIndex[makeCanonicalRepresentative([1,3,2,4,6,5])]]:=1:\n" }{MPLTEXT
 1 0 3 "v2;" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "-&I'Ve
ctorG6$%*protectedGI(_syslibG6\"6#I'columnGF(6#/I$%idGF(\"*W<tO\"" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "ProjZ.v2;" }{MPLTEXT 1 0 0 ""
 }}{PARA 11 "" 1 "" {XPPMATH 20 "-I\".G6$%*protectedGI(_syslibG6\"6$I&
ProjZGF'-&I'VectorGF$6#I'columnGF'6#/I$%idGF'\"*W<tO\"" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 32 "linalg[iszero](v2-Z.(ProjZ.v2));" }
{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "I&falseG%*protectedG
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "v3:=Vector[column](330)
:\n" }{MPLTEXT 1 0 75 "v3[150+30*(5-1)+permIndex[makeCanonicalRepresen
tative([2,1,3,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v3[150+30*(5-1)+permI
ndex[makeCanonicalRepresentative([2,3,1,5,4,6])]]:=1:\n" }{MPLTEXT 1 
0 75 "v3[150+30*(5-1)+permIndex[makeCanonicalRepresentative([2,1,3,5,6
,4])]]:=1:\n" }{MPLTEXT 1 0 75 "v3[150+30*(5-1)+permIndex[makeCanonica
lRepresentative([2,3,1,5,6,4])]]:=1:\n" }{MPLTEXT 1 0 3 "v3;" }
{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "-&I'VectorG6$%*prote
ctedGI(_syslibG6\"6#I'columnGF(6#/I$%idGF(\"*S2()Q\"" }}}{EXCHG {PARA 
0 "> " 0 "" {MPLTEXT 1 0 9 "ProjZ.v3;" }{MPLTEXT 1 0 0 "" }}{PARA 11 "
" 1 "" {XPPMATH 20 "-I\".G6$%*protectedGI(_syslibG6\"6$I&ProjZGF'-&I'V
ectorGF$6#I'columnGF'6#/I$%idGF'\"*S2()Q\"" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 32 "linalg[iszero](v3-Z.(ProjZ.v3));" }{MPLTEXT 1 0 0 "
" }}{PARA 11 "" 1 "" {XPPMATH 20 "I&falseG%*protectedG" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "v4:=Vector[column](330):\n" }
{MPLTEXT 1 0 75 "v4[150+30*(1-1)+permIndex[makeCanonicalRepresentative
([1,2,3,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v4[150+30*(1-1)+permIndex[m
akeCanonicalRepresentative([2,1,3,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v
4[150+30*(1-1)+permIndex[makeCanonicalRepresentative([1,2,4,3,5,6])]]:
=1:\n" }{MPLTEXT 1 0 75 "v4[150+30*(1-1)+permIndex[makeCanonicalRepres
entative([2,1,4,3,5,6])]]:=1:\n" }{MPLTEXT 1 0 3 "v4;" }{MPLTEXT 1 0 
0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "-&I'VectorG6$%*protectedGI(_sysli
bG6\"6#I'columnGF(6#/I$%idGF(\"*o*4Y8" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 9 "ProjZ.v4;" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "-I\".G6$%*protectedGI(_syslibG6\"6$I&ProjZGF'-&I'VectorGF
$6#I'columnGF'6#/I$%idGF'\"*o*4Y8" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 32 "linalg[iszero](v4-Z.(ProjZ.v4));" }{MPLTEXT 1 0 0 "" 
}}{PARA 11 "" 1 "" {XPPMATH 20 "I&falseG%*protectedG" }}}{EXCHG {PARA 
0 "> " 0 "" {MPLTEXT 1 0 25 "v5:=Vector[column](330):\n" }{MPLTEXT 1 
0 75 "v5[150+30*(2-1)+permIndex[makeCanonicalRepresentative([1,2,4,3,5
,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v5[150+30*(2-1)+permIndex[makeCanonica
lRepresentative([2,1,4,3,5,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v5[150+30*(2
-1)+permIndex[makeCanonicalRepresentative([1,2,4,5,3,6])]]:=1:\n" }
{MPLTEXT 1 0 75 "v5[150+30*(2-1)+permIndex[makeCanonicalRepresentative
([2,1,4,5,3,6])]]:=1:\n" }{MPLTEXT 1 0 3 "v5;" }{MPLTEXT 1 0 0 "" }}
{PARA 11 "" 1 "" {XPPMATH 20 "-&I'VectorG6$%*protectedGI(_syslibG6\"6#
I'columnGF(6#/I$%idGF(\"*GvpO\"" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 
1 0 9 "ProjZ.v5;" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "-
I\".G6$%*protectedGI(_syslibG6\"6$I&ProjZGF'-&I'VectorGF$6#I'columnGF'
6#/I$%idGF'\"*GvpO\"" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 32 "lin
alg[iszero](v5-Z.(ProjZ.v5));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "I&falseG%*protectedG" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 25 "v6:=Vector[column](330):\n" }{MPLTEXT 1 0 75 "v6[150+
30*(1-1)+permIndex[makeCanonicalRepresentative([1,2,3,5,4,6])]]:=1:\n"
 }{MPLTEXT 1 0 75 "v6[150+30*(1-1)+permIndex[makeCanonicalRepresentati
ve([2,1,3,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v6[150+30*(1-1)+permIndex
[makeCanonicalRepresentative([1,2,5,3,4,6])]]:=1:\n" }{MPLTEXT 1 0 75 
"v6[150+30*(1-1)+permIndex[makeCanonicalRepresentative([2,1,5,3,4,6])]
]:=1:\n" }{MPLTEXT 1 0 3 "v6;" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "-&I'VectorG6$%*protectedGI(_syslibG6\"6#I'columnGF(6#/I$%
idGF(\"*+'3d8" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "ProjZ.v6;" 
}{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "-I\".G6$%*protected
GI(_syslibG6\"6$I&ProjZGF'-&I'VectorGF$6#I'columnGF'6#/I$%idGF'\"*+'3d
8" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 32 "linalg[iszero](v6-Z.(P
rojZ.v6));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "I&false
G%*protectedG" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "v7:=Vector
[column](330):\n" }{MPLTEXT 1 0 75 "v7[150+30*(6-1)+permIndex[makeCano
nicalRepresentative([4,3,2,5,1,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v7[150+3
0*(6-1)+permIndex[makeCanonicalRepresentative([4,3,2,5,6,1])]]:=1:\n" 
}{MPLTEXT 1 0 75 "v7[150+30*(6-1)+permIndex[makeCanonicalRepresentativ
e([4,3,5,2,1,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v7[150+30*(6-1)+permIndex[
makeCanonicalRepresentative([4,3,5,2,6,1])]]:=1:\n" }{MPLTEXT 1 0 3 "v
7;" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "-&I'VectorG6$%*
protectedGI(_syslibG6\"6#I'columnGF(6#/I$%idGF(\"*SI$)R\"" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "ProjZ.v7;" }{MPLTEXT 1 0 0 "" }}
{PARA 11 "" 1 "" {XPPMATH 20 "-I\".G6$%*protectedGI(_syslibG6\"6$I&Pro
jZGF'-&I'VectorGF$6#I'columnGF'6#/I$%idGF'\"*SI$)R\"" }}}{EXCHG {PARA 
0 "> " 0 "" {MPLTEXT 1 0 32 "linalg[iszero](v7-Z.(ProjZ.v7));" }
{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "I&falseG%*protectedG
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "v8:=Vector[column](330)
:\n" }{MPLTEXT 1 0 75 "v8[150+30*(2-1)+permIndex[makeCanonicalRepresen
tative([1,2,3,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v8[150+30*(3-1)+permI
ndex[makeCanonicalRepresentative([1,2,3,4,5,6])]]:=1:\n" }{MPLTEXT 1 
0 75 "v8[150+30*(2-1)+permIndex[makeCanonicalRepresentative([1,2,3,4,6
,5])]]:=1:\n" }{MPLTEXT 1 0 75 "v8[150+30*(3-1)+permIndex[makeCanonica
lRepresentative([1,2,3,6,4,5])]]:=1:\n" }{MPLTEXT 1 0 75 "v8[150+30*(2
-1)+permIndex[makeCanonicalRepresentative([1,2,3,6,5,4])]]:=1:\n" }
{MPLTEXT 1 0 75 "v8[150+30*(3-1)+permIndex[makeCanonicalRepresentative
([1,2,3,5,6,4])]]:=1:\n" }{MPLTEXT 1 0 75 "v8[150+30*(2-1)+permIndex[m
akeCanonicalRepresentative([2,1,3,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v
8[150+30*(3-1)+permIndex[makeCanonicalRepresentative([2,1,3,4,5,6])]]:
=1:\n" }{MPLTEXT 1 0 75 "v8[150+30*(2-1)+permIndex[makeCanonicalRepres
entative([2,1,3,4,6,5])]]:=1:\n" }{MPLTEXT 1 0 75 "v8[150+30*(3-1)+per
mIndex[makeCanonicalRepresentative([2,1,3,6,4,5])]]:=1:\n" }{MPLTEXT 
1 0 75 "v8[150+30*(2-1)+permIndex[makeCanonicalRepresentative([2,1,3,6
,5,4])]]:=1:\n" }{MPLTEXT 1 0 75 "v8[150+30*(3-1)+permIndex[makeCanoni
calRepresentative([2,1,3,5,6,4])]]:=1:\n" }{MPLTEXT 1 0 3 "v8;" }
{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "-&I'VectorG6$%*prote
ctedGI(_syslibG6\"6#I'columnGF(6#/I$%idGF(\"*wm$*R\"" }}}{EXCHG {PARA 
0 "> " 0 "" {MPLTEXT 1 0 9 "ProjZ.v8;" }{MPLTEXT 1 0 0 "" }}{PARA 11 "
" 1 "" {XPPMATH 20 "-I\".G6$%*protectedGI(_syslibG6\"6$I&ProjZGF'-&I'V
ectorGF$6#I'columnGF'6#/I$%idGF'\"*wm$*R\"" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 32 "linalg[iszero](v8-Z.(ProjZ.v8));" }{MPLTEXT 1 0 0 "
" }}{PARA 11 "" 1 "" {XPPMATH 20 "I&falseG%*protectedG" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "v9:=Vector[column](330):\n" }
{MPLTEXT 1 0 75 "v9[150+30*(2-1)+permIndex[makeCanonicalRepresentative
([3,2,1,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v9[150+30*(3-1)+permIndex[m
akeCanonicalRepresentative([3,2,1,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v
9[150+30*(2-1)+permIndex[makeCanonicalRepresentative([3,2,1,4,6,5])]]:
=1:\n" }{MPLTEXT 1 0 75 "v9[150+30*(3-1)+permIndex[makeCanonicalRepres
entative([3,2,1,6,4,5])]]:=1:\n" }{MPLTEXT 1 0 75 "v9[150+30*(2-1)+per
mIndex[makeCanonicalRepresentative([3,2,1,6,5,4])]]:=1:\n" }{MPLTEXT 
1 0 75 "v9[150+30*(3-1)+permIndex[makeCanonicalRepresentative([3,2,1,5
,6,4])]]:=1:\n" }{MPLTEXT 1 0 75 "v9[150+30*(2-1)+permIndex[makeCanoni
calRepresentative([2,3,1,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v9[150+30*
(3-1)+permIndex[makeCanonicalRepresentative([2,3,1,4,5,6])]]:=1:\n" }
{MPLTEXT 1 0 75 "v9[150+30*(2-1)+permIndex[makeCanonicalRepresentative
([2,3,1,4,6,5])]]:=1:\n" }{MPLTEXT 1 0 75 "v9[150+30*(3-1)+permIndex[m
akeCanonicalRepresentative([2,3,1,6,4,5])]]:=1:\n" }{MPLTEXT 1 0 75 "v
9[150+30*(2-1)+permIndex[makeCanonicalRepresentative([2,3,1,6,5,4])]]:
=1:\n" }{MPLTEXT 1 0 75 "v9[150+30*(3-1)+permIndex[makeCanonicalRepres
entative([2,3,1,5,6,4])]]:=1:\n" }{MPLTEXT 1 0 3 "v9;" }{MPLTEXT 1 0 
0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "-&I'VectorG6$%*protectedGI(_sysli
bG6\"6#I'columnGF(6#/I$%idGF(\"*7SiT\"" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 9 "ProjZ.v9;" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "-I\".G6$%*protectedGI(_syslibG6\"6$I&ProjZGF'-&I'VectorGF
$6#I'columnGF'6#/I$%idGF'\"*7SiT\"" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 32 "linalg[iszero](v9-Z.(ProjZ.v9));" }{MPLTEXT 1 0 0 "" 
}}{PARA 11 "" 1 "" {XPPMATH 20 "I&falseG%*protectedG" }}}{EXCHG {PARA 
0 "> " 0 "" {MPLTEXT 1 0 26 "v10:=Vector[column](330):\n" }{MPLTEXT 1 
0 76 "v10[150+30*(2-1)+permIndex[makeCanonicalRepresentative([2,1,3,5,
4,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30*(3-1)+permIndex[makeCanoni
calRepresentative([2,1,3,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30
*(2-1)+permIndex[makeCanonicalRepresentative([2,1,3,4,6,5])]]:=1:\n" }
{MPLTEXT 1 0 76 "v10[150+30*(3-1)+permIndex[makeCanonicalRepresentativ
e([2,1,3,6,4,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30*(2-1)+permIndex
[makeCanonicalRepresentative([2,1,3,6,5,4])]]:=1:\n" }{MPLTEXT 1 0 76 
"v10[150+30*(3-1)+permIndex[makeCanonicalRepresentative([2,1,3,5,6,4])
]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "v10[150+30*(2-1)+perm
Index[makeCanonicalRepresentative([3,2,1,5,4,6])]]:=1:\n" }{MPLTEXT 1 
0 76 "v10[150+30*(3-1)+permIndex[makeCanonicalRepresentative([3,2,1,4,
5,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30*(2-1)+permIndex[makeCanoni
calRepresentative([3,2,1,4,6,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30
*(3-1)+permIndex[makeCanonicalRepresentative([3,2,1,6,4,5])]]:=1:\n" }
{MPLTEXT 1 0 76 "v10[150+30*(2-1)+permIndex[makeCanonicalRepresentativ
e([3,2,1,6,5,4])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30*(3-1)+permIndex
[makeCanonicalRepresentative([3,2,1,5,6,4])]]:=1:\n" }{MPLTEXT 1 0 1 "
\n" }{MPLTEXT 1 0 76 "v10[150+30*(2-1)+permIndex[makeCanonicalRepresen
tative([1,3,2,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30*(3-1)+perm
Index[makeCanonicalRepresentative([1,3,2,4,5,6])]]:=1:\n" }{MPLTEXT 1 
0 76 "v10[150+30*(2-1)+permIndex[makeCanonicalRepresentative([1,3,2,4,
6,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30*(3-1)+permIndex[makeCanoni
calRepresentative([1,3,2,6,4,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30
*(2-1)+permIndex[makeCanonicalRepresentative([1,3,2,6,5,4])]]:=1:\n" }
{MPLTEXT 1 0 76 "v10[150+30*(3-1)+permIndex[makeCanonicalRepresentativ
e([1,3,2,5,6,4])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "v10[1
50+30*(4-1)+permIndex[makeCanonicalRepresentative([2,3,1,5,4,6])]]:=1:
\n" }{MPLTEXT 1 0 76 "v10[150+30*(5-1)+permIndex[makeCanonicalRepresen
tative([2,3,1,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30*(4-1)+perm
Index[makeCanonicalRepresentative([2,3,1,4,6,5])]]:=1:\n" }{MPLTEXT 1 
0 76 "v10[150+30*(5-1)+permIndex[makeCanonicalRepresentative([2,3,1,6,
4,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30*(4-1)+permIndex[makeCanoni
calRepresentative([2,3,1,6,5,4])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30
*(5-1)+permIndex[makeCanonicalRepresentative([2,3,1,5,6,4])]]:=1:\n" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "v10[150+30*(4-1)+permIndex[makeC
anonicalRepresentative([3,1,2,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[1
50+30*(5-1)+permIndex[makeCanonicalRepresentative([3,1,2,4,5,6])]]:=1:
\n" }{MPLTEXT 1 0 76 "v10[150+30*(4-1)+permIndex[makeCanonicalRepresen
tative([3,1,2,4,6,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30*(5-1)+perm
Index[makeCanonicalRepresentative([3,1,2,6,4,5])]]:=1:\n" }{MPLTEXT 1 
0 76 "v10[150+30*(4-1)+permIndex[makeCanonicalRepresentative([3,1,2,6,
5,4])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30*(5-1)+permIndex[makeCanoni
calRepresentative([3,1,2,5,6,4])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }
{MPLTEXT 1 0 76 "v10[150+30*(4-1)+permIndex[makeCanonicalRepresentativ
e([1,2,3,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30*(5-1)+permIndex
[makeCanonicalRepresentative([1,2,3,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 76 
"v10[150+30*(4-1)+permIndex[makeCanonicalRepresentative([1,2,3,4,6,5])
]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30*(5-1)+permIndex[makeCanonicalRe
presentative([1,2,3,6,4,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v10[150+30*(4-1
)+permIndex[makeCanonicalRepresentative([1,2,3,6,5,4])]]:=1:\n" }
{MPLTEXT 1 0 76 "v10[150+30*(5-1)+permIndex[makeCanonicalRepresentativ
e([1,2,3,5,6,4])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 1 "v" }
{MPLTEXT 1 0 4 "10, " }{MPLTEXT 1 0 11 "ProjZ.v10, " }{MPLTEXT 1 0 34 
"linalg[iszero](v10-Z.(ProjZ.v10));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 
1 "" {XPPMATH 20 "6%-&I'VectorG6$%*protectedGI(_syslibG6\"6#I'columnGF
)6#/I$%idGF)\"*oY,P\"-I\".GF&6$I&ProjZGF)F#I&falseGF'" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 26 "v11:=Vector[column](330):\n" }
{MPLTEXT 1 0 76 "v11[150+30*(3-1)+permIndex[makeCanonicalRepresentativ
e([1,4,2,3,5,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v11[150+30*(2-1)+permIndex
[makeCanonicalRepresentative([1,4,2,3,6,5])]]:=1:\n" }{MPLTEXT 1 0 76 
"v11[150+30*(1-1)+permIndex[makeCanonicalRepresentative([1,4,2,6,3,5])
]]:=1:\n" }{MPLTEXT 1 0 76 "v11[150+30*(3-1)+permIndex[makeCanonicalRe
presentative([4,1,2,3,5,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v11[150+30*(2-1
)+permIndex[makeCanonicalRepresentative([4,1,2,3,6,5])]]:=1:\n" }
{MPLTEXT 1 0 76 "v11[150+30*(1-1)+permIndex[makeCanonicalRepresentativ
e([4,1,2,6,3,5])]]:=1:\n" }{MPLTEXT 1 0 5 "v11, " }{MPLTEXT 1 0 11 "Pr
ojZ.v11, " }{MPLTEXT 1 0 34 "linalg[iszero](v11-Z.(ProjZ.v11));" }
{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "6%-&I'VectorG6$%*pro
tectedGI(_syslibG6\"6#I'columnGF)6#/I$%idGF)\"*!GQ>9-I\".GF&6$I&ProjZG
F)F#I&falseGF'" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 26 "v12:=Vect
or[column](330):\n" }{MPLTEXT 1 0 75 "v12[30+30*(1-1)+permIndex[makeCa
nonicalRepresentative([1,2,3,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 4 "v12[" }
{MPLTEXT 1 0 3 "30+" }{MPLTEXT 1 0 69 "30*(1-1)+permIndex[makeCanonica
lRepresentative([3,1,2,4,5,6])]]:=-1:\n" }{MPLTEXT 1 0 4 "v12[" }
{MPLTEXT 1 0 3 "30+" }{MPLTEXT 1 0 68 "30*(1-1)+permIndex[makeCanonica
lRepresentative([2,1,3,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 4 "v12[" }
{MPLTEXT 1 0 3 "30+" }{MPLTEXT 1 0 69 "30*(1-1)+permIndex[makeCanonica
lRepresentative([3,2,1,4,5,6])]]:=-1:\n" }{MPLTEXT 1 0 5 "v12, " }
{MPLTEXT 1 0 11 "ProjZ.v12, " }{MPLTEXT 1 0 34 "linalg[iszero](v12-Z.(
ProjZ.v12));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "6%-&I
'VectorG6$%*protectedGI(_syslibG6\"6#I'columnGF)6#/I$%idGF)\"*O$4?9-I
\".GF&6$I&ProjZGF)F#I&falseGF'" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 
1 0 26 "v13:=Vector[column](330):\n" }{MPLTEXT 1 0 75 "v13[30+30*(1-1)
+permIndex[makeCanonicalRepresentative([1,2,4,3,5,6])]]:=1:\n" }
{MPLTEXT 1 0 76 "v13[30+30*(1-1)+permIndex[makeCanonicalRepresentative
([4,1,2,3,5,6])]]:=-1:\n" }{MPLTEXT 1 0 75 "v13[30+30*(1-1)+permIndex[
makeCanonicalRepresentative([2,1,4,3,5,6])]]:=1:\n" }{MPLTEXT 1 0 76 "
v13[30+30*(1-1)+permIndex[makeCanonicalRepresentative([4,2,1,3,5,6])]]
:=-1:\n" }{MPLTEXT 1 0 5 "v13, " }{MPLTEXT 1 0 11 "ProjZ.v13, " }
{MPLTEXT 1 0 34 "linalg[iszero](v13-Z.(ProjZ.v13));" }{MPLTEXT 1 0 0 "
" }}{PARA 11 "" 1 "" {XPPMATH 20 "6%-&I'VectorG6$%*protectedGI(_syslib
G6\"6#I'columnGF)6#/I$%idGF)\"++D>&4\"-I\".GF&6$I&ProjZGF)F#I&falseGF'
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 26 "v14:=Vector[column](330
):\n" }{MPLTEXT 1 0 76 "v14[150+30*(3-1)+permIndex[makeCanonicalRepres
entative([4,1,2,5,3,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v14[150+30*(3-1)+pe
rmIndex[makeCanonicalRepresentative([4,1,2,5,6,3])]]:=1:\n" }{MPLTEXT 
1 0 76 "v14[150+30*(6-1)+permIndex[makeCanonicalRepresentative([4,1,5,
2,3,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v14[150+30*(6-1)+permIndex[makeCano
nicalRepresentative([4,1,5,2,6,3])]]:=1:\n" }{MPLTEXT 1 0 5 "v14, " }
{MPLTEXT 1 0 45 "ProjZ.v14, linalg[iszero](v14-Z.(ProjZ.v14));" }
{MPLTEXT 1 0 1 " " }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "
6%-&I'VectorG6$%*protectedGI(_syslibG6\"6#I'columnGF)6#/I$%idGF)\"*38v
Q\"-I\".GF&6$I&ProjZGF)F#I&falseGF'" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 26 "v15:=Vector[column](330):\n" }{MPLTEXT 1 0 76 "v15[15
0+30*(4-1)+permIndex[makeCanonicalRepresentative([3,1,2,4,6,5])]]:=1:
\n" }{MPLTEXT 1 0 76 "v15[150+30*(4-1)+permIndex[makeCanonicalRepresen
tative([3,2,1,4,6,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v15[150+30*(4-1)+perm
Index[makeCanonicalRepresentative([3,1,2,6,4,5])]]:=1:\n" }{MPLTEXT 1 
0 76 "v15[150+30*(4-1)+permIndex[makeCanonicalRepresentative([3,2,1,6,
4,5])]]:=1:\n" }{MPLTEXT 1 0 50 "v15, ProjZ.v15, linalg[iszero](v15-Z.
(ProjZ.v15));" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1
 "" {XPPMATH 20 "6%-&I'VectorG6$%*protectedGI(_syslibG6\"6#I'columnGF)
6#/I$%idGF)\"*gf[U\"-I\".GF&6$I&ProjZGF)F#I&falseGF'" }}}{EXCHG {PARA 
0 "> " 0 "" {MPLTEXT 1 0 27 "v11b:=Vector[column](330):\n" }{MPLTEXT 
1 0 77 "v11b[150+30*(3-1)+permIndex[makeCanonicalRepresentative([2,5,1
,3,4,6])]]:=1:\n" }{MPLTEXT 1 0 77 "v11b[150+30*(2-1)+permIndex[makeCa
nonicalRepresentative([2,5,1,3,6,4])]]:=1:\n" }{MPLTEXT 1 0 77 "v11b[1
50+30*(1-1)+permIndex[makeCanonicalRepresentative([2,5,1,6,3,4])]]:=1:
\n" }{MPLTEXT 1 0 77 "v11b[150+30*(3-1)+permIndex[makeCanonicalReprese
ntative([5,2,1,3,4,6])]]:=1:\n" }{MPLTEXT 1 0 77 "v11b[150+30*(2-1)+pe
rmIndex[makeCanonicalRepresentative([5,2,1,3,6,4])]]:=1:\n" }{MPLTEXT 
1 0 77 "v11b[150+30*(1-1)+permIndex[makeCanonicalRepresentative([5,2,1
,6,3,4])]]:=1:\n" }{MPLTEXT 1 0 54 "v11b, ProjZ.v11b, linalg[iszero](v
11b-Z.(ProjZ.v11b));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 
20 "6%-&I'VectorG6$%*protectedGI(_syslibG6\"6#I'columnGF)6#/I$%idGF)\"
*k/iT\"-I\".GF&6$I&ProjZGF)F#I&falseGF'" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 27 "v12b:=Vector[column](330):\n" }{MPLTEXT 1 0 76 "v12b[
30+30*(1-1)+permIndex[makeCanonicalRepresentative([4,2,1,5,3,6])]]:=1:
\n" }{MPLTEXT 1 0 76 "v12b[30+30*(1-1)+permIndex[makeCanonicalRepresen
tative([4,1,2,5,3,6])]]:=1:\n" }{MPLTEXT 1 0 77 "v12b[30+30*(1-1)+perm
Index[makeCanonicalRepresentative([1,2,4,5,3,6])]]:=-1:\n" }{MPLTEXT 
1 0 77 "v12b[30+30*(1-1)+permIndex[makeCanonicalRepresentative([1,4,2,
5,3,6])]]:=-1:\n" }{MPLTEXT 1 0 54 "v12b, ProjZ.v12b, linalg[iszero](v
12b-Z.(ProjZ.v12b));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 
20 "6%-&I'VectorG6$%*protectedGI(_syslibG6\"6#I'columnGF)6#/I$%idGF)\"
*)=G+9-I\".GF&6$I&ProjZGF)F#I&falseGF'" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 27 "v10b:=Vector[column](330):\n" }{MPLTEXT 1 0 77 "v10b[
150+30*(2-1)+permIndex[makeCanonicalRepresentative([2,1,4,5,3,6])]]:=1
:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(3-1)+permIndex[makeCanonicalRepres
entative([2,1,4,3,5,6])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(2-1)+p
ermIndex[makeCanonicalRepresentative([2,1,4,3,6,5])]]:=1:\n" }{MPLTEXT
 1 0 77 "v10b[150+30*(3-1)+permIndex[makeCanonicalRepresentative([2,1,
4,6,3,5])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(2-1)+permIndex[makeC
anonicalRepresentative([2,1,4,6,5,3])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[
150+30*(3-1)+permIndex[makeCanonicalRepresentative([2,1,4,5,6,3])]]:=1
:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 77 "v10b[150+30*(2-1)+permInde
x[makeCanonicalRepresentative([4,2,1,5,3,6])]]:=1:\n" }{MPLTEXT 1 0 
77 "v10b[150+30*(3-1)+permIndex[makeCanonicalRepresentative([4,2,1,3,5
,6])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(2-1)+permIndex[makeCanoni
calRepresentative([4,2,1,3,6,5])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+3
0*(3-1)+permIndex[makeCanonicalRepresentative([4,2,1,6,3,5])]]:=1:\n" 
}{MPLTEXT 1 0 77 "v10b[150+30*(2-1)+permIndex[makeCanonicalRepresentat
ive([4,2,1,6,5,3])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(3-1)+permIn
dex[makeCanonicalRepresentative([4,2,1,5,6,3])]]:=1:\n" }{MPLTEXT 1 0 
1 "\n" }{MPLTEXT 1 0 77 "v10b[150+30*(2-1)+permIndex[makeCanonicalRepr
esentative([1,4,2,5,3,6])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(3-1)
+permIndex[makeCanonicalRepresentative([1,4,2,3,5,6])]]:=1:\n" }
{MPLTEXT 1 0 77 "v10b[150+30*(2-1)+permIndex[makeCanonicalRepresentati
ve([1,4,2,3,6,5])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(3-1)+permInd
ex[makeCanonicalRepresentative([1,4,2,6,3,5])]]:=1:\n" }{MPLTEXT 1 0 
77 "v10b[150+30*(2-1)+permIndex[makeCanonicalRepresentative([1,4,2,6,5
,3])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(3-1)+permIndex[makeCanoni
calRepresentative([1,4,2,5,6,3])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }
{MPLTEXT 1 0 77 "v10b[150+30*(4-1)+permIndex[makeCanonicalRepresentati
ve([2,4,1,5,3,6])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(5-1)+permInd
ex[makeCanonicalRepresentative([2,4,1,3,5,6])]]:=1:\n" }{MPLTEXT 1 0 
77 "v10b[150+30*(4-1)+permIndex[makeCanonicalRepresentative([2,4,1,3,6
,5])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(5-1)+permIndex[makeCanoni
calRepresentative([2,4,1,6,3,5])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+3
0*(4-1)+permIndex[makeCanonicalRepresentative([2,4,1,6,5,3])]]:=1:\n" 
}{MPLTEXT 1 0 77 "v10b[150+30*(5-1)+permIndex[makeCanonicalRepresentat
ive([2,4,1,5,6,3])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 77 "v10
b[150+30*(4-1)+permIndex[makeCanonicalRepresentative([4,1,2,5,3,6])]]:
=1:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(5-1)+permIndex[makeCanonicalRepr
esentative([4,1,2,3,5,6])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(4-1)
+permIndex[makeCanonicalRepresentative([4,1,2,3,6,5])]]:=1:\n" }
{MPLTEXT 1 0 77 "v10b[150+30*(5-1)+permIndex[makeCanonicalRepresentati
ve([4,1,2,6,3,5])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(4-1)+permInd
ex[makeCanonicalRepresentative([4,1,2,6,5,3])]]:=1:\n" }{MPLTEXT 1 0 
77 "v10b[150+30*(5-1)+permIndex[makeCanonicalRepresentative([4,1,2,5,6
,3])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 77 "v10b[150+30*(4-1)
+permIndex[makeCanonicalRepresentative([1,2,4,5,3,6])]]:=1:\n" }
{MPLTEXT 1 0 77 "v10b[150+30*(5-1)+permIndex[makeCanonicalRepresentati
ve([1,2,4,3,5,6])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(4-1)+permInd
ex[makeCanonicalRepresentative([1,2,4,3,6,5])]]:=1:\n" }{MPLTEXT 1 0 
77 "v10b[150+30*(5-1)+permIndex[makeCanonicalRepresentative([1,2,4,6,3
,5])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+30*(4-1)+permIndex[makeCanoni
calRepresentative([1,2,4,6,5,3])]]:=1:\n" }{MPLTEXT 1 0 77 "v10b[150+3
0*(5-1)+permIndex[makeCanonicalRepresentative([1,2,4,5,6,3])]]:=1:\n" 
}{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 54 "v10b, ProjZ.v10b, linalg[iszero
](v10b-Z.(ProjZ.v10b));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6%-&I'VectorG6$%*protectedGI(_syslibG6\"6#I'columnGF)6#/I
$%idGF)\"*%Gw)Q\"-I\".GF&6$I&ProjZGF)F#I&falseGF'" }}}{EXCHG {PARA 0 "
> " 0 "" {MPLTEXT 1 0 27 "v10c:=Vector[column](330):\n" }{MPLTEXT 1 0 
77 "v10c[150+30*(2-1)+permIndex[makeCanonicalRepresentative([2,1,3,5,4
,6])]]:=1:\n" }{MPLTEXT 1 0 77 "v10c[150+30*(3-1)+permIndex[makeCanoni
calRepresentative([2,1,3,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 77 "v10c[150+3
0*(2-1)+permIndex[makeCanonicalRepresentative([2,1,3,4,6,5])]]:=1:\n" 
}{MPLTEXT 1 0 77 "v10c[150+30*(3-1)+permIndex[makeCanonicalRepresentat
ive([2,1,3,6,4,5])]]:=1:\n" }{MPLTEXT 1 0 77 "v10c[150+30*(2-1)+permIn
dex[makeCanonicalRepresentative([2,1,3,6,5,4])]]:=1:\n" }{MPLTEXT 1 0 
77 "v10c[150+30*(3-1)+permIndex[makeCanonicalRepresentative([2,1,3,5,6
,4])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 77 "v10c[150+30*(4-1)
+permIndex[makeCanonicalRepresentative([2,3,1,5,4,6])]]:=1:\n" }
{MPLTEXT 1 0 77 "v10c[150+30*(5-1)+permIndex[makeCanonicalRepresentati
ve([2,3,1,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 77 "v10c[150+30*(4-1)+permInd
ex[makeCanonicalRepresentative([2,3,1,4,6,5])]]:=1:\n" }{MPLTEXT 1 0 
77 "v10c[150+30*(5-1)+permIndex[makeCanonicalRepresentative([2,3,1,6,4
,5])]]:=1:\n" }{MPLTEXT 1 0 77 "v10c[150+30*(4-1)+permIndex[makeCanoni
calRepresentative([2,3,1,6,5,4])]]:=1:\n" }{MPLTEXT 1 0 77 "v10c[150+3
0*(5-1)+permIndex[makeCanonicalRepresentative([2,3,1,5,6,4])]]:=1:\n" 
}{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 54 "v10c, ProjZ.v10c, linalg[iszero
](v10c-Z.(ProjZ.v10c));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6%-&I'VectorG6$%*protectedGI(_syslibG6\"6#I'columnGF)6#/I
$%idGF)\"*SQ(f8-I\".GF&6$I&ProjZGF)F#I&falseGF'" }}}{EXCHG {PARA 0 "> 
" 0 "" {MPLTEXT 1 0 27 "v11c:=Vector[column](330):\n" }{MPLTEXT 1 0 
77 "v11c[150+30*(3-1)+permIndex[makeCanonicalRepresentative([2,5,1,3,4
,6])]]:=1:\n" }{MPLTEXT 1 0 77 "v11c[150+30*(2-1)+permIndex[makeCanoni
calRepresentative([2,5,1,3,6,4])]]:=1:\n" }{MPLTEXT 1 0 77 "v11c[150+3
0*(1-1)+permIndex[makeCanonicalRepresentative([2,5,1,6,3,4])]]:=1:\n" 
}{MPLTEXT 1 0 77 "v11c[150+30*(3-1)+permIndex[makeCanonicalRepresentat
ive([5,2,1,3,4,6])]]:=1:\n" }{MPLTEXT 1 0 77 "v11c[150+30*(2-1)+permIn
dex[makeCanonicalRepresentative([5,2,1,3,6,4])]]:=1:\n" }{MPLTEXT 1 0 
77 "v11c[150+30*(1-1)+permIndex[makeCanonicalRepresentative([5,2,1,6,3
,4])]]:=1:\n" }{MPLTEXT 1 0 54 "v11c, ProjZ.v11c, linalg[iszero](v11c-
Z.(ProjZ.v11c));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "6
%-&I'VectorG6$%*protectedGI(_syslibG6\"6#I'columnGF)6#/I$%idGF)\"*?g6Q
\"-I\".GF&6$I&ProjZGF)F#I&falseGF'" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 26 "v16:=Vector[column](330):\n" }{MPLTEXT 1 0 76 "v16[15
0+30*(1-1)+permIndex[makeCanonicalRepresentative([1,4,2,5,3,6])]]:=1:
\n" }{MPLTEXT 1 0 76 "v16[150+30*(1-1)+permIndex[makeCanonicalRepresen
tative([4,1,2,5,3,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v16[150+30*(1-1)+perm
Index[makeCanonicalRepresentative([1,4,5,2,3,6])]]:=1:\n" }{MPLTEXT 1 
0 76 "v16[150+30*(1-1)+permIndex[makeCanonicalRepresentative([4,1,5,2,
3,6])]]:=1:\n" }{MPLTEXT 1 0 50 "v16, ProjZ.v16, linalg[iszero](v16-Z.
(ProjZ.v16));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "6%-&
I'VectorG6$%*protectedGI(_syslibG6\"6#I'columnGF)6#/I$%idGF)\"*3XLU\"-
I\".GF&6$I&ProjZGF)F#I&falseGF'" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 
1 0 27 "v16b:=Vector[column](330):\n" }{MPLTEXT 1 0 77 "v16b[150+30*(1
-1)+permIndex[makeCanonicalRepresentative([1,4,2,5,3,6])]]:=1:\n" }
{MPLTEXT 1 0 77 "v16b[150+30*(1-1)+permIndex[makeCanonicalRepresentati
ve([4,1,2,5,3,6])]]:=1:\n" }{MPLTEXT 1 0 54 "v16b, ProjZ.v16b, linalg[
iszero](v16b-Z.(ProjZ.v16b));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6%-&I'VectorG6$%*protectedGI(_syslibG6\"6#I'columnGF)6#/I
$%idGF)\"*g^5P\"-I\".GF&6$I&ProjZGF)F#I&falseGF'" }}}{EXCHG {PARA 0 ">
 " 0 "" {MPLTEXT 1 0 26 "v1b:=Vector[column](330):\n" }{MPLTEXT 1 0 
76 "v1b[150+30*(2-1)+permIndex[makeCanonicalRepresentative([1,2,3,4,5,
6])]]:=1:\n" }{MPLTEXT 1 0 76 "v1b[150+30*(2-1)+permIndex[makeCanonica
lRepresentative([2,1,3,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v1b[150+30*(
2-1)+permIndex[makeCanonicalRepresentative([1,2,3,5,4,6])]]:=1:" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "v1b[150+30*(2-1)+permIndex[makeC
anonicalRepresentative([2,1,3,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 50 "v1b, \+
ProjZ.v1b, linalg[iszero](v1b-Z.(ProjZ.v1b));" }{MPLTEXT 1 0 0 "" }}
{PARA 11 "" 1 "" {XPPMATH 20 "6%-&I'VectorG6$%*protectedGI(_syslibG6\"
6#I'columnGF)6#/I$%idGF)\"*OT,Q\"-I\".GF&6$I&ProjZGF)F#I&falseGF'" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 26 "v17:=Vector[column](330):\n"
 }{MPLTEXT 1 0 76 "v17[150+30*(2-1)+permIndex[makeCanonicalRepresentat
ive([2,1,3,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v17[150+30*(2-1)+permInd
ex[makeCanonicalRepresentative([2,1,3,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 
76 "v17[150+30*(3-1)+permIndex[makeCanonicalRepresentative([2,1,3,5,6,
4])]]:=1:\n" }{MPLTEXT 1 0 76 "v17[150+30*(3-1)+permIndex[makeCanonica
lRepresentative([2,1,3,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v17[150+30*(
4-1)+permIndex[makeCanonicalRepresentative([2,3,1,5,4,6])]]:=1:\n" }
{MPLTEXT 1 0 76 "v17[150+30*(4-1)+permIndex[makeCanonicalRepresentativ
e([2,3,1,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v17[150+30*(5-1)+permIndex
[makeCanonicalRepresentative([2,3,1,5,6,4])]]:=1:\n" }{MPLTEXT 1 0 76 
"v17[150+30*(5-1)+permIndex[makeCanonicalRepresentative([2,3,1,5,4,6])
]]:=1:\n" }{MPLTEXT 1 0 50 "v17, ProjZ.v17, linalg[iszero](v17-Z.(Proj
Z.v17));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "6%-&I'Vec
torG6$%*protectedGI(_syslibG6\"6#I'columnGF)6#/I$%idGF)\"+/!\\Y4\"-I\"
.GF&6$I&ProjZGF)F#I&falseGF'" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 
0 26 "v18:=Vector[column](330):\n" }{MPLTEXT 1 0 76 "v18[150+30*(6-1)+
permIndex[makeCanonicalRepresentative([1,2,5,4,3,6])]]:=1:\n" }
{MPLTEXT 1 0 76 "v18[150+30*(3-1)+permIndex[makeCanonicalRepresentativ
e([2,1,5,4,3,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v18[150+30*(6-1)+permIndex
[makeCanonicalRepresentative([1,2,5,4,6,3])]]:=1:\n" }{MPLTEXT 1 0 76 
"v18[150+30*(3-1)+permIndex[makeCanonicalRepresentative([2,1,5,4,6,3])
]]:=1:\n" }{MPLTEXT 1 0 50 "v18, ProjZ.v18, linalg[iszero](v18-Z.(Proj
Z.v18));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "6%-&I'Vec
torG6$%*protectedGI(_syslibG6\"6#I'columnGF)6#/I$%idGF)\"*7(G)R\"-I\".
GF&6$I&ProjZGF)F#I&falseGF'" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
26 "v19:=Vector[column](330):\n" }{MPLTEXT 1 0 10 "#Fall 2->6" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permIndex[makeC
anonicalRepresentative([4,1,3,2,5,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[1
50+30*(2-1)+permIndex[makeCanonicalRepresentative([4,1,3,5,2,6])]]:=1:
\n" }{MPLTEXT 1 0 76 "v19[150+30*(3-1)+permIndex[makeCanonicalRepresen
tative([4,1,3,5,6,2])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(4-1)+perm
Index[makeCanonicalRepresentative([4,3,1,5,2,6])]]:=1:\n" }{MPLTEXT 1 
0 76 "v19[150+30*(5-1)+permIndex[makeCanonicalRepresentative([4,3,1,5,
6,2])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(6-1)+permIndex[makeCanoni
calRepresentative([4,3,5,1,6,2])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }
{MPLTEXT 1 0 75 "v19[30+30*(2-1)+permIndex[makeCanonicalRepresentative
([4,3,1,2,5,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(4-1)+permIndex[
makeCanonicalRepresentative([4,3,2,5,1,6])]]:=1:\n" }{MPLTEXT 1 0 75 "
v19[30+30*(3-1)+permIndex[makeCanonicalRepresentative([4,3,5,1,2,6])]]
:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(5-1)+permIndex[makeCanonicalRepr
esentative([4,3,2,5,6,1])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(6-1)+
permIndex[makeCanonicalRepresentative([4,3,5,2,6,1])]]:=1:\n" }
{MPLTEXT 1 0 75 "v19[30+30*(4-1)+permIndex[makeCanonicalRepresentative
([4,3,5,6,1,2])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 75 "v19[30
+30*(1-1)+permIndex[makeCanonicalRepresentative([1,2,4,3,5,6])]]:=1:\n
" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permIndex[makeCanonicalRepresenta
tive([1,2,3,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(1-1)+permInd
ex[makeCanonicalRepresentative([4,2,1,3,5,6])]]:=1:\n" }{MPLTEXT 1 0 
76 "v19[150+30*(1-1)+permIndex[makeCanonicalRepresentative([2,1,3,4,5,
6])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(2-1)+permIndex[makeCanonical
Representative([2,3,4,1,5,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(5
-1)+permIndex[makeCanonicalRepresentative([2,3,4,5,6,1])]]:=1:\n" }
{MPLTEXT 1 0 76 "v19[150+30*(4-1)+permIndex[makeCanonicalRepresentativ
e([2,3,4,5,1,6])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "v19[1
50+30*(2-1)+permIndex[makeCanonicalRepresentative([1,2,3,5,4,6])]]:=1:
\n" }{MPLTEXT 1 0 76 "v19[150+30*(2-1)+permIndex[makeCanonicalRepresen
tative([2,1,3,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(4-1)+perm
Index[makeCanonicalRepresentative([2,3,1,5,4,6])]]:=1:\n" }{MPLTEXT 1 
0 75 "v19[30+30*(3-1)+permIndex[makeCanonicalRepresentative([2,3,5,4,1
,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(6-1)+permIndex[makeCanonic
alRepresentative([2,3,5,4,6,1])]]:=1:\n" }{MPLTEXT 1 0 4 "####" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permIndex[makeC
anonicalRepresentative([1,2,5,3,4,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[1
50+30*(1-1)+permIndex[makeCanonicalRepresentative([2,1,5,3,4,6])]]:=1:
\n" }{MPLTEXT 1 0 75 "v19[30+30*(2-1)+permIndex[makeCanonicalRepresent
ative([2,5,3,1,4,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(4-1)+permI
ndex[makeCanonicalRepresentative([2,5,3,4,1,6])]]:=1:\n" }{MPLTEXT 1 
0 76 "v19[150+30*(5-1)+permIndex[makeCanonicalRepresentative([2,5,3,4,
6,1])]]:=1:\n" }{MPLTEXT 1 0 4 "####" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 
1 0 75 "v19[30+30*(1-1)+permIndex[makeCanonicalRepresentative([5,1,2,3
,4,6])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(1-1)+permIndex[makeCanoni
calRepresentative([5,2,1,3,4,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30
*(1-1)+permIndex[makeCanonicalRepresentative([5,2,3,1,4,6])]]:=1:\n" }
{MPLTEXT 1 0 76 "v19[150+30*(2-1)+permIndex[makeCanonicalRepresentativ
e([5,2,3,4,1,6])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(3-1)+permIndex
[makeCanonicalRepresentative([5,2,3,4,6,1])]]:=1:\n" }{MPLTEXT 1 0 1 "
\n" }{MPLTEXT 1 0 10 "#Fall 3->2" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 
75 "v19[30+30*(1-1)+permIndex[makeCanonicalRepresentative([1,3,4,5,6,2
])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(1-1)+permIndex[makeCanonicalR
epresentative([1,4,3,5,6,2])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-
1)+permIndex[makeCanonicalRepresentative([1,4,5,3,6,2])]]:=1:\n" }
{MPLTEXT 1 0 76 "v19[150+30*(2-1)+permIndex[makeCanonicalRepresentativ
e([1,4,5,6,3,2])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(3-1)+permIndex
[makeCanonicalRepresentative([1,4,5,6,2,3])]]:=1:\n" }{MPLTEXT 1 0 5 "
####\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permIndex[makeCanonicalRepr
esentative([3,4,1,5,6,2])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+
permIndex[makeCanonicalRepresentative([4,3,1,5,6,2])]]:=1:\n" }
{MPLTEXT 1 0 75 "v19[30+30*(2-1)+permIndex[makeCanonicalRepresentative
([4,1,5,6,3,2])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(4-1)+permIndex[
makeCanonicalRepresentative([4,1,5,6,3,2])]]:=1:\n" }{MPLTEXT 1 0 76 "
v19[150+30*(5-1)+permIndex[makeCanonicalRepresentative([4,1,5,6,2,3])]
]:=1:\n" }{MPLTEXT 1 0 5 "####\n" }{MPLTEXT 1 0 76 "v19[150+30*(2-1)+p
ermIndex[makeCanonicalRepresentative([3,4,5,1,6,2])]]:=1:\n" }{MPLTEXT
 1 0 76 "v19[150+30*(2-1)+permIndex[makeCanonicalRepresentative([4,3,5
,1,6,2])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(4-1)+permIndex[makeCan
onicalRepresentative([4,5,3,1,6,2])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+
30*(3-1)+permIndex[makeCanonicalRepresentative([4,5,1,6,3,2])]]:=1:\n"
 }{MPLTEXT 1 0 76 "v19[150+30*(6-1)+permIndex[makeCanonicalRepresentat
ive([4,5,1,6,2,3])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "v19
[150+30*(3-1)+permIndex[makeCanonicalRepresentative([3,4,5,6,1,2])]]:=
1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(3-1)+permIndex[makeCanonicalRepres
entative([4,3,5,6,1,2])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(5-1)+pe
rmIndex[makeCanonicalRepresentative([4,5,3,6,1,2])]]:=1:\n" }{MPLTEXT 
1 0 76 "v19[150+30*(6-1)+permIndex[makeCanonicalRepresentative([4,5,6,
3,1,2])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(4-1)+permIndex[makeCanon
icalRepresentative([4,5,6,1,2,3])]]:=1:\n" }{MPLTEXT 1 0 5 "####\n" }
{MPLTEXT 1 0 76 "v19[150+30*(2-1)+permIndex[makeCanonicalRepresentativ
e([3,4,5,6,2,1])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(2-1)+permIndex
[makeCanonicalRepresentative([4,3,5,6,2,1])]]:=1:\n" }{MPLTEXT 1 0 76 
"v19[150+30*(4-1)+permIndex[makeCanonicalRepresentative([4,5,3,6,2,1])
]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(3-1)+permIndex[makeCanonicalRep
resentative([4,5,6,2,3,1])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(6-1)
+permIndex[makeCanonicalRepresentative([4,5,6,2,1,3])]]:=1:\n" }
{MPLTEXT 1 0 5 "####\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permIndex[m
akeCanonicalRepresentative([3,4,5,2,6,1])]]:=1:\n" }{MPLTEXT 1 0 76 "v
19[150+30*(1-1)+permIndex[makeCanonicalRepresentative([4,3,5,2,6,1])]]
:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(2-1)+permIndex[makeCanonicalRepre
sentative([4,5,2,3,6,1])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(4-1)+p
ermIndex[makeCanonicalRepresentative([4,5,2,6,3,1])]]:=1:\n" }{MPLTEXT
 1 0 76 "v19[150+30*(5-1)+permIndex[makeCanonicalRepresentative([4,5,2
,6,1,3])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 75 "v19[30+30*(1-
1)+permIndex[makeCanonicalRepresentative([3,4,2,5,6,1])]]:=1:\n" }
{MPLTEXT 1 0 75 "v19[30+30*(1-1)+permIndex[makeCanonicalRepresentative
([4,2,3,5,6,1])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permIndex[
makeCanonicalRepresentative([4,2,5,3,6,1])]]:=1:\n" }{MPLTEXT 1 0 76 "
v19[150+30*(2-1)+permIndex[makeCanonicalRepresentative([4,2,5,6,3,1])]
]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(3-1)+permIndex[makeCanonicalRep
resentative([4,2,5,6,1,3])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 
0 76 "v19[150+30*(1-1)+permIndex[makeCanonicalRepresentative([3,2,5,4,
6,1])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permIndex[makeCanoni
calRepresentative([2,3,5,4,6,1])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*
(2-1)+permIndex[makeCanonicalRepresentative([2,5,4,3,6,1])]]:=1:\n" }
{MPLTEXT 1 0 76 "v19[150+30*(4-1)+permIndex[makeCanonicalRepresentativ
e([2,5,4,6,3,1])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(5-1)+permIndex
[makeCanonicalRepresentative([2,5,4,6,1,3])]]:=1:\n" }{MPLTEXT 1 0 4 "
####" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 75 "v19[30+30*(1-1)+permIndex
[makeCanonicalRepresentative([5,3,2,4,6,1])]]:=1:\n" }{MPLTEXT 1 0 75 
"v19[30+30*(1-1)+permIndex[makeCanonicalRepresentative([5,2,3,4,6,1])]
]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permIndex[makeCanonicalRep
resentative([5,2,4,3,6,1])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(2-1)
+permIndex[makeCanonicalRepresentative([5,2,4,6,3,1])]]:=1:\n" }
{MPLTEXT 1 0 76 "v19[150+30*(3-1)+permIndex[makeCanonicalRepresentativ
e([5,2,4,6,1,3])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 11 "#Fall
 5->3\n" }{MPLTEXT 1 0 75 "v19[30+30*(1-1)+permIndex[makeCanonicalRepr
esentative([1,5,4,6,2,3])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(1-1)+p
ermIndex[makeCanonicalRepresentative([1,4,5,6,2,3])]]:=1:\n" }{MPLTEXT
 1 0 76 "v19[150+30*(1-1)+permIndex[makeCanonicalRepresentative([1,4,6
,5,2,3])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(2-1)+permIndex[makeCan
onicalRepresentative([1,4,6,2,5,3])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150
+30*(3-1)+permIndex[makeCanonicalRepresentative([1,4,6,2,3,5])]]:=1:\n
" }{MPLTEXT 1 0 5 "####\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permInde
x[makeCanonicalRepresentative([5,4,1,6,2,3])]]:=1:\n" }{MPLTEXT 1 0 
76 "v19[150+30*(1-1)+permIndex[makeCanonicalRepresentative([4,5,1,6,2,
3])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(2-1)+permIndex[makeCanonical
Representative([4,1,6,5,2,3])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(4
-1)+permIndex[makeCanonicalRepresentative([4,1,6,2,5,3])]]:=1:\n" }
{MPLTEXT 1 0 76 "v19[150+30*(5-1)+permIndex[makeCanonicalRepresentativ
e([4,1,6,2,3,5])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "v19[1
50+30*(2-1)+permIndex[makeCanonicalRepresentative([5,4,6,1,2,3])]]:=1:
\n" }{MPLTEXT 1 0 76 "v19[150+30*(2-1)+permIndex[makeCanonicalRepresen
tative([4,5,6,1,2,3])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(4-1)+perm
Index[makeCanonicalRepresentative([4,6,5,1,2,3])]]:=1:\n" }{MPLTEXT 1 
0 75 "v19[30+30*(3-1)+permIndex[makeCanonicalRepresentative([4,6,1,2,5
,3])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(6-1)+permIndex[makeCanonic
alRepresentative([4,6,1,2,3,5])]]:=1:\n" }{MPLTEXT 1 0 5 "####\n" }
{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permIndex[makeCanonicalRepresentativ
e([5,4,6,2,1,3])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permIndex
[makeCanonicalRepresentative([4,5,6,2,1,3])]]:=1:\n" }{MPLTEXT 1 0 75 
"v19[30+30*(2-1)+permIndex[makeCanonicalRepresentative([4,6,2,5,1,3])]
]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(4-1)+permIndex[makeCanonicalRep
resentative([4,6,2,1,5,3])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(5-1)
+permIndex[makeCanonicalRepresentative([4,6,2,1,3,5])]]:=1:\n" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permIndex[makeC
anonicalRepresentative([2,4,6,5,1,3])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[1
50+30*(2-1)+permIndex[makeCanonicalRepresentative([2,4,6,1,5,3])]]:=1:
\n" }{MPLTEXT 1 0 76 "v19[150+30*(4-1)+permIndex[makeCanonicalRepresen
tative([2,6,4,1,5,3])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(3-1)+perm
Index[makeCanonicalRepresentative([2,4,6,1,3,5])]]:=1:\n" }{MPLTEXT 1 
0 76 "v19[150+30*(5-1)+permIndex[makeCanonicalRepresentative([2,6,4,1,
3,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(6-1)+permIndex[makeCanoni
calRepresentative([2,6,1,4,3,5])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }
{MPLTEXT 1 0 75 "v19[30+30*(1-1)+permIndex[makeCanonicalRepresentative
([5,4,2,6,1,3])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(1-1)+permIndex[m
akeCanonicalRepresentative([2,4,5,6,1,3])]]:=1:\n" }{MPLTEXT 1 0 5 "##
##\n" }{MPLTEXT 1 0 75 "v19[30+30*(2-1)+permIndex[makeCanonicalReprese
ntative([2,6,5,4,1,3])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+per
mIndex[makeCanonicalRepresentative([5,2,6,4,1,3])]]:=1:\n" }{MPLTEXT 
1 0 75 "v19[30+30*(3-1)+permIndex[makeCanonicalRepresentative([2,6,1,5
,4,3])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(4-1)+permIndex[makeCanon
icalRepresentative([2,6,5,1,4,3])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+3
0*(2-1)+permIndex[makeCanonicalRepresentative([5,2,6,1,4,3])]]:=1:\n" 
}{MPLTEXT 1 0 75 "v19[30+30*(4-1)+permIndex[makeCanonicalRepresentativ
e([2,6,1,3,5,4])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(6-1)+permIndex
[makeCanonicalRepresentative([2,6,1,5,3,4])]]:=1:\n" }{MPLTEXT 1 0 76 
"v19[150+30*(5-1)+permIndex[makeCanonicalRepresentative([2,6,5,1,3,4])
]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(3-1)+permIndex[makeCanonicalRe
presentative([5,2,6,1,3,4])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 
0 11 "#Fall 6->5\n" }{MPLTEXT 1 0 75 "v19[30+30*(1-1)+permIndex[makeCa
nonicalRepresentative([1,6,4,2,3,5])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30
+30*(1-1)+permIndex[makeCanonicalRepresentative([1,4,6,2,3,5])]]:=1:\n
" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permIndex[makeCanonicalRepresenta
tive([1,4,2,6,3,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(2-1)+permIn
dex[makeCanonicalRepresentative([1,4,2,3,6,5])]]:=1:\n" }{MPLTEXT 1 0 
76 "v19[150+30*(3-1)+permIndex[makeCanonicalRepresentative([1,4,2,3,5,
6])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+p
ermIndex[makeCanonicalRepresentative([6,4,1,2,3,5])]]:=1:\n" }{MPLTEXT
 1 0 76 "v19[150+30*(1-1)+permIndex[makeCanonicalRepresentative([4,6,1
,2,3,5])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(2-1)+permIndex[makeCano
nicalRepresentative([4,1,2,6,3,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+
30*(4-1)+permIndex[makeCanonicalRepresentative([4,1,2,3,6,5])]]:=1:\n"
 }{MPLTEXT 1 0 76 "v19[150+30*(5-1)+permIndex[makeCanonicalRepresentat
ive([4,1,2,3,5,6])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 75 "v19
[30+30*(1-1)+permIndex[makeCanonicalRepresentative([6,2,4,1,3,5])]]:=1
:\n" }{MPLTEXT 1 0 75 "v19[30+30*(1-1)+permIndex[makeCanonicalRepresen
tative([2,4,6,1,3,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+perm
Index[makeCanonicalRepresentative([2,4,1,6,3,5])]]:=1:\n" }{MPLTEXT 1 
0 76 "v19[150+30*(2-1)+permIndex[makeCanonicalRepresentative([2,4,1,3,
6,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(3-1)+permIndex[makeCanoni
calRepresentative([2,4,1,3,5,6])]]:=1:\n" }{MPLTEXT 1 0 5 "####\n" }
{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permIndex[makeCanonicalRepresentativ
e([6,2,1,4,3,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permIndex
[makeCanonicalRepresentative([2,6,1,4,3,5])]]:=1:\n" }{MPLTEXT 1 0 75 
"v19[30+30*(2-1)+permIndex[makeCanonicalRepresentative([2,1,4,6,3,5])]
]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(4-1)+permIndex[makeCanonicalRep
resentative([2,1,4,3,6,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(5-1)
+permIndex[makeCanonicalRepresentative([2,1,4,3,5,6])]]:=1:\n" }
{MPLTEXT 1 0 5 "####\n" }{MPLTEXT 1 0 76 "v19[150+30*(2-1)+permIndex[m
akeCanonicalRepresentative([6,2,1,3,4,5])]]:=1:\n" }{MPLTEXT 1 0 76 "v
19[150+30*(2-1)+permIndex[makeCanonicalRepresentative([2,6,1,3,4,5])]]
:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(4-1)+permIndex[makeCanonicalRepr
esentative([2,1,6,3,4,5])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(3-1)+p
ermIndex[makeCanonicalRepresentative([2,1,3,4,6,5])]]:=1:\n" }{MPLTEXT
 1 0 76 "v19[150+30*(6-1)+permIndex[makeCanonicalRepresentative([2,1,3
,4,5,6])]]:=1:\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "v19[150+30*(3
-1)+permIndex[makeCanonicalRepresentative([6,2,1,3,5,4])]]:=1:\n" }
{MPLTEXT 1 0 76 "v19[150+30*(3-1)+permIndex[makeCanonicalRepresentativ
e([2,6,1,3,5,4])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(5-1)+permIndex
[makeCanonicalRepresentative([2,1,3,6,5,4])]]:=1:\n" }{MPLTEXT 1 0 76 
"v19[150+30*(6-1)+permIndex[makeCanonicalRepresentative([2,1,3,6,5,4])
]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(4-1)+permIndex[makeCanonicalRep
resentative([2,1,3,5,4,6])]]:=1:\n" }{MPLTEXT 1 0 5 "####\n" }{MPLTEXT
 1 0 76 "v19[150+30*(2-1)+permIndex[makeCanonicalRepresentative([6,2,1
,5,3,4])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(2-1)+permIndex[makeCan
onicalRepresentative([2,6,1,5,3,4])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150
+30*(4-1)+permIndex[makeCanonicalRepresentative([2,1,6,5,3,4])]]:=1:\n
" }{MPLTEXT 1 0 75 "v19[30+30*(3-1)+permIndex[makeCanonicalRepresentat
ive([2,1,5,3,6,4])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(6-1)+permInd
ex[makeCanonicalRepresentative([2,1,5,3,4,6])]]:=1:\n" }{MPLTEXT 1 0 
4 "####" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "v19[150+30*(1-1)+permI
ndex[makeCanonicalRepresentative([6,2,1,5,3,4])]]:=1:\n" }{MPLTEXT 1 
0 76 "v19[150+30*(1-1)+permIndex[makeCanonicalRepresentative([2,6,1,5,
3,4])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(2-1)+permIndex[makeCanonic
alRepresentative([2,1,5,6,3,4])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*
(4-1)+permIndex[makeCanonicalRepresentative([2,1,5,3,6,4])]]:=1:\n" }
{MPLTEXT 1 0 76 "v19[150+30*(5-1)+permIndex[makeCanonicalRepresentativ
e([2,1,5,3,4,6])]]:=1:\n" }{MPLTEXT 1 0 4 "####" }{MPLTEXT 1 0 1 "\n" 
}{MPLTEXT 1 0 75 "v19[30+30*(1-1)+permIndex[makeCanonicalRepresentativ
e([5,6,2,1,3,4])]]:=1:\n" }{MPLTEXT 1 0 75 "v19[30+30*(1-1)+permIndex[
makeCanonicalRepresentative([5,2,6,1,3,4])]]:=1:\n" }{MPLTEXT 1 0 76 "
v19[150+30*(1-1)+permIndex[makeCanonicalRepresentative([5,2,1,6,3,4])]
]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(2-1)+permIndex[makeCanonicalRep
resentative([5,2,1,3,6,4])]]:=1:\n" }{MPLTEXT 1 0 76 "v19[150+30*(3-1)
+permIndex[makeCanonicalRepresentative([5,2,1,3,4,6])]]:=1:\n" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 50 "v19, ProjZ.v19, linalg[iszero](v
19-Z.(ProjZ.v19));" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 
"6%-&I'VectorG6$%*protectedGI(_syslibG6\"6#I'columnGF)6#/I$%idGF)\"*!o
A!Q\"-I\".GF&6$I&ProjZGF)F#I&falseGF'" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 135 "### Jetzt versuchen wir, die beiden Stiefelwhitney-
Klassen (bzw. die davon induzierten Hom(H_*(..),Z_2)'s) einfach direkt
 auszurechnen:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "with(combinat); " }{MPLTEXT 
1 0 1 "\n" }}{PARA 11 "" 1 "" {XPPMATH 20 "7CI$ChiG6\"I%bellGF$I)binom
ialGF$I)cartprodGF$I*characterGF$I'chooseGF$I,compositionGF$I)conjpart
GF$I+decodepartGF$I+encodepartGF$I*fibonacciGF$I*firstpartGF$I)graycod
eGF$I)inttovecGF$I)lastpartGF$I,multinomialGF$I)nextpartGF$I)numbcombG
F$I)numbcompGF$I)numbpartGF$I)numbpermGF$I*partitionGF$I(permuteGF$I)p
owersetGF$I)prevpartGF$I)randcombGF$I)randpartGF$I)randpermGF$I-setpar
titionGF$I*stirling1GF$I*stirling2GF$I(subsetsGF$I)vectointGF$" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 42 "OctahedraOnSpheresGCellComplex := proc() \n" }
{MPLTEXT 1 0 21 "local i, j, k, a, b,\n" }{MPLTEXT 1 0 21 "      D10, \+
D11, D12,\n" }{MPLTEXT 1 0 53 "      o1, o2, o3, o4, o5, o6, o7, o8, o
ff, randoff, \n" }{MPLTEXT 1 0 33 "      Perm, PermIndex, p, randp,\n"
 }{MPLTEXT 1 0 12 "      sgn; \n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 
10 "o1 := 0; \n" }{MPLTEXT 1 0 33 "o2, o3, o4 := 0, 30*24, 150*24; \n"
 }{MPLTEXT 1 0 46 "o5, o6, o7, o8 := 0, 120*24, 210*24, 390*24; \n" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 17 "with(combinat); \n" }{MPLTEXT 1 
0 67 "Perm := permute(6);#select(isCanonicalRepresentative, permute(6)
);\n" }{MPLTEXT 1 0 6 "i:=1;\n" }{MPLTEXT 1 0 20 "PermIndex:=table();
\n" }{MPLTEXT 1 0 17 "for p in Perm do\n" }{MPLTEXT 1 0 21 "  PermInde
x[p]:=i;  \n" }{MPLTEXT 1 0 10 "  i:=i+1;\n" }{MPLTEXT 1 0 4 "od;\n" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 20 "#Berechnen von D12:\n" }{MPLTEXT
 1 0 44 "D12 := Matrix(150*24,30*24,storage=sparse);\n" }{MPLTEXT 1 0 
21 "for i from 1 to 5 do\n" }{MPLTEXT 1 0 18 " for p in Perm do\n" }
{MPLTEXT 1 0 21 "  off:=PermIndex[p];\n" }{MPLTEXT 1 0 3 "  \n" }
{MPLTEXT 1 0 79 "  #Randzellen vom Typ 1: (es gibt auch nur die eine M
oeglichkeit hier bei D12)\n" }{MPLTEXT 1 0 68 "  #Moeglichkeit 1.1: Pu
nkt i geht nach rechts an die untere Stelle:\n" }{MPLTEXT 1 0 12 "  ra
ndp:=p;\n" }{MPLTEXT 1 0 33 "  randp:=moveElement(i,i,randp);\n" }
{MPLTEXT 1 0 50 "  #randp:=makeCanonicalRepresentative(randp);    \n" 
}{MPLTEXT 1 0 44 "  randoff:=o1+30*24*(i-1)+PermIndex[randp];\n" }
{MPLTEXT 1 0 121 "  sgn:=(-1)^1; #Koordinate mit ungeradem Index wird \+
0, und die anschliessende Koordinatenpermutation ist die Identitaet.\n
" }{MPLTEXT 1 0 42 "  D12[randoff,off]:=D12[randoff,off]+sgn;\n" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 67 "  #Moeglichkeit 1.2: Punkt i geh
t nach rechts an die obere Stelle:\n" }{MPLTEXT 1 0 12 "  randp:=p;\n"
 }{MPLTEXT 1 0 35 "  randp:=moveElement(i,i+1,randp);\n" }{MPLTEXT 1 
0 50 "  #randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 
1 0 16 "  randoff:=o1+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(i-
1)+PermIndex[randp];\n" }{MPLTEXT 1 0 122 "  sgn:=(-1)^2; #Koordinate \+
mit ungeradem Index wird 0, und die anschliessende Koordinatenpermutat
ion ist 1 Transposition.\n" }{MPLTEXT 1 0 42 "  D12[randoff,off]:=D12[
randoff,off]+sgn;\n" }{MPLTEXT 1 0 12 " od; #for p\n" }{MPLTEXT 1 0 
11 "od; #for i\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 20 "#Berechnen vo
n D11:\n" }{MPLTEXT 1 0 46 "D11 := Matrix(330*24, 150*24,storage=spars
e);\n" }{MPLTEXT 1 0 21 "for i from 1 to 5 do\n" }{MPLTEXT 1 0 18 " fo
r p in Perm do\n" }{MPLTEXT 1 0 12 "  off:=o1+30" }{MPLTEXT 1 0 3 "*24
" }{MPLTEXT 1 0 21 "*(i-1)+PermIndex[p];\n" }{MPLTEXT 1 0 3 "  \n" }
{MPLTEXT 1 0 25 "  #Randzellen vom Typ 2:\n" }{MPLTEXT 1 0 62 "  #Moeg
lichkeit 2.1: Punkt i+1 geht nach oben nach unendlich:\n" }{MPLTEXT 1 
0 12 "  randp:=p;\n" }{MPLTEXT 1 0 35 "  randp:=moveElement(i+1,6,rand
p);\n" }{MPLTEXT 1 0 50 "  #randp:=makeCanonicalRepresentative(randp);
    \n" }{MPLTEXT 1 0 32 "  randoff:=o2+PermIndex[randp];\n" }{MPLTEXT
 1 0 125 "  sgn:=(-1)^(0+0); #Koordinate mit ungeradem Index wird 1, u
nd die anschliessende Koordinatenpermutation ist die Identitaet.\n" }
{MPLTEXT 1 0 42 "  D11[randoff,off]:=D11[randoff,off]+sgn;\n" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 61 "  #Moeglichkeit 2.2: Punkt i geh
t nach unten nach unendlich:\n" }{MPLTEXT 1 0 12 "  randp:=p;\n" }
{MPLTEXT 1 0 33 "  randp:=moveElement(i,6,randp);\n" }{MPLTEXT 1 0 50 
"  #randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 
32 "  randoff:=o2+PermIndex[randp];\n" }{MPLTEXT 1 0 119 "  sgn:=(-1)^
2; #Koordinate mit geradem Index wird 0, und die anschliessende Koordi
natenpermutation ist die Identitaet.\n" }{MPLTEXT 1 0 42 "  D11[randof
f,off]:=D11[randoff,off]+sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 
25 "  #Randzellen vom Typ 3:\n" }{MPLTEXT 1 0 59 "  #Moeglichkeit 3.1:
 Punkt i+2 geht nach links zum Stapel:\n" }{MPLTEXT 1 0 15 "  if i<=4 \+
then\n" }{MPLTEXT 1 0 74 "    #Moeglichkeit 3.1.1: Punkt i+2 geht nach
 links an die oberste Stelle:\n" }{MPLTEXT 1 0 14 "    randp:=p;\n" }
{MPLTEXT 1 0 39 "    randp:=moveElement(i+2,i+2,randp);\n" }{MPLTEXT 
1 0 52 "    #randp:=makeCanonicalRepresentative(randp);    \n" }
{MPLTEXT 1 0 18 "    randoff:=o3+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 
1 0 25 "*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 121 "    sgn:=(-1)^2
; #Koordinate mit geradem Index wird 0, und die anschliessende Koordin
atenpermutation ist die Identitaet.\n" }{MPLTEXT 1 0 44 "    D11[rando
ff,off]:=D11[randoff,off]+sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 
75 "    #Moeglichkeit 3.1.2: Punkt i+2 geht nach links an die mittlere
 Stelle:\n" }{MPLTEXT 1 0 14 "    randp:=p;\n" }{MPLTEXT 1 0 39 "    r
andp:=moveElement(i+2,i+1,randp);\n" }{MPLTEXT 1 0 52 "    #randp:=mak
eCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 18 "    randoff:
=o3+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(i-1)+PermIndex[randp
];\n" }{MPLTEXT 1 0 125 "    sgn:=(-1)^3; #Koordinate mit geradem Inde
x wird 0, und die anschliessende Koordinatenpermutation ist eine Trans
position.\n" }{MPLTEXT 1 0 44 "    D11[randoff,off]:=D11[randoff,off]+
sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 75 "    #Moeglichkeit 3.1.3
: Punkt i+2 geht nach links an die unterste Stelle:\n" }{MPLTEXT 1 0 
14 "    randp:=p;\n" }{MPLTEXT 1 0 37 "    randp:=moveElement(i+2,i,ra
ndp);\n" }{MPLTEXT 1 0 52 "    #randp:=makeCanonicalRepresentative(ran
dp);    \n" }{MPLTEXT 1 0 18 "    randoff:=o3+30" }{MPLTEXT 1 0 3 "*24
" }{MPLTEXT 1 0 25 "*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 127 "   \+
 sgn:=(-1)^4; #Koordinate mit geradem Index wird 0, und die anschliess
ende Koordinatenpermutation ist zwei Transpositionen.\n" }{MPLTEXT 1 
0 44 "    D11[randoff,off]:=D11[randoff,off]+sgn;\n" }{MPLTEXT 1 0 10 
"  end if;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 60 "  #Moeglichkeit 3
.2: Punkt i-1 geht nach rechts zum Stapel:\n" }{MPLTEXT 1 0 15 "  if i
>=2 then\n" }{MPLTEXT 1 0 75 "    #Moeglichkeit 3.2.1: Punkt i-1 geht \+
nach rechts an die oberste Stelle:\n" }{MPLTEXT 1 0 14 "    randp:=p;
\n" }{MPLTEXT 1 0 39 "    randp:=moveElement(i-1,i+1,randp);\n" }
{MPLTEXT 1 0 52 "    #randp:=makeCanonicalRepresentative(randp);    \n
" }{MPLTEXT 1 0 18 "    randoff:=o3+30" }{MPLTEXT 1 0 3 "*24" }
{MPLTEXT 1 0 25 "*(i-2)+PermIndex[randp];\n" }{MPLTEXT 1 0 129 "    sg
n:=(-1)^3; #Koordinate mit ungeradem Index wird 0, und die anschliesse
nde Koordinatenpermutation ist zwei Transpositionen.\n" }{MPLTEXT 1 0 
44 "    D11[randoff,off]:=D11[randoff,off]+sgn;\n" }{MPLTEXT 1 0 1 "\n
" }{MPLTEXT 1 0 76 "    #Moeglichkeit 3.2.2: Punkt i-1 geht nach recht
s an die mittlere Stelle:\n" }{MPLTEXT 1 0 14 "    randp:=p;\n" }
{MPLTEXT 1 0 37 "    randp:=moveElement(i-1,i,randp);\n" }{MPLTEXT 1 
0 52 "    #randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT
 1 0 18 "    randoff:=o3+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*
(i-2)+PermIndex[randp];\n" }{MPLTEXT 1 0 127 "    sgn:=(-1)^2; #Koordi
nate mit ungeradem Index wird 0, und die anschliessende Koordinatenper
mutation ist eine Transposition.\n" }{MPLTEXT 1 0 44 "    D11[randoff,
off]:=D11[randoff,off]+sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 76 "
    #Moeglichkeit 3.2.3: Punkt i-1 geht nach rechts an die unterste St
elle:\n" }{MPLTEXT 1 0 14 "    randp:=p;\n" }{MPLTEXT 1 0 39 "    rand
p:=moveElement(i-1,i-1,randp);\n" }{MPLTEXT 1 0 52 "    #randp:=makeCa
nonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 18 "    randoff:=o3
+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(i-2)+PermIndex[randp];
\n" }{MPLTEXT 1 0 123 "    sgn:=(-1)^1; #Koordinate mit ungeradem Inde
x wird 0, und die anschliessende Koordinatenpermutation ist die Identi
taet.\n" }{MPLTEXT 1 0 44 "    D11[randoff,off]:=D11[randoff,off]+sgn;
\n" }{MPLTEXT 1 0 10 "  end if;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 
25 "  #Randzellen vom Typ 4:\n" }{MPLTEXT 1 0 68 "  #Moeglichkeit 4.1:
 zwei Punkte links vom Stapel ueberlagern sich:\n" }{MPLTEXT 1 0 25 " \+
 for j from 1 to i-2 do\n" }{MPLTEXT 1 0 61 "    #Moeglichkeit 4.1.1: \+
Punkt j geht nach rechts unter j+1:\n" }{MPLTEXT 1 0 14 "    randp:=p;
\n" }{MPLTEXT 1 0 35 "    randp:=moveElement(j,j,randp);\n" }{MPLTEXT 
1 0 52 "    #randp:=makeCanonicalRepresentative(randp);    \n" }
{MPLTEXT 1 0 24 "    if j=1 then k:=i-2;\n" }{MPLTEXT 1 0 24 "    elif
 j=2 then k:=i;\n" }{MPLTEXT 1 0 24 "    elif j=3 then k:=6;\n" }
{MPLTEXT 1 0 12 "    end if;\n" }{MPLTEXT 1 0 18 "    randoff:=o4+30" 
}{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(k-1)+PermIndex[randp];\n" }
{MPLTEXT 1 0 126 "    sgn:=(-1)^1; #Koordinate mit ungeradem Index wir
d 0, und die anschliessende Koordinatenpermutation ist 0 Transposition
en.\n" }{MPLTEXT 1 0 44 "    D11[randoff,off]:=D11[randoff,off]+sgn;\n
" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 61 "    #Moeglichkeit 4.1.2: Punk
t j geht nach rechts ueber j+1:\n" }{MPLTEXT 1 0 14 "    randp:=p;\n" 
}{MPLTEXT 1 0 37 "    randp:=moveElement(j,j+1,randp);\n" }{MPLTEXT 1 
0 52 "    #randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT
 1 0 24 "    if j=1 then k:=i-2;\n" }{MPLTEXT 1 0 24 "    elif j=2 the
n k:=i;\n" }{MPLTEXT 1 0 24 "    elif j=3 then k:=6;\n" }{MPLTEXT 1 0 
12 "    end if;\n" }{MPLTEXT 1 0 18 "    randoff:=o4+30" }{MPLTEXT 1 
0 3 "*24" }{MPLTEXT 1 0 25 "*(k-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 
126 "    sgn:=(-1)^2; #Koordinate mit ungeradem Index wird 0, und die \+
anschliessende Koordinatenpermutation ist 1 Transpositionen.\n" }
{MPLTEXT 1 0 44 "    D11[randoff,off]:=D11[randoff,off]+sgn;\n" }
{MPLTEXT 1 0 6 "  od;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 69 "  #Moe
glichkeit 4.2: zwei Punkte rechts vom Stapel ueberlagern sich:\n" }
{MPLTEXT 1 0 25 "  for j from i+2 to 5 do\n" }{MPLTEXT 1 0 61 "    #Mo
eglichkeit 4.2.1: Punkt j geht nach rechts unter j+1:\n" }{MPLTEXT 1 
0 14 "    randp:=p;\n" }{MPLTEXT 1 0 35 "    randp:=moveElement(j,j,ra
ndp);\n" }{MPLTEXT 1 0 52 "    #randp:=makeCanonicalRepresentative(ran
dp);    \n" }{MPLTEXT 1 0 24 "    if i=1 then k:=j-2;\n" }{MPLTEXT 1 
0 24 "    elif i=2 then k:=j;\n" }{MPLTEXT 1 0 24 "    elif i=3 then k
:=6;\n" }{MPLTEXT 1 0 12 "    end if;\n" }{MPLTEXT 1 0 18 "    randoff
:=o4+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(k-1)+PermIndex[rand
p];\n" }{MPLTEXT 1 0 124 "    sgn:=(-1)^2; #Koordinate mit geradem Ind
ex wird 0, und die anschliessende Koordinatenpermutation ist 0 Transpo
sitionen.\n" }{MPLTEXT 1 0 44 "    D11[randoff,off]:=D11[randoff,off]+
sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 61 "    #Moeglichkeit 4.2.2
: Punkt j geht nach rechts ueber j+1:\n" }{MPLTEXT 1 0 14 "    randp:=
p;\n" }{MPLTEXT 1 0 37 "    randp:=moveElement(j,j+1,randp);\n" }
{MPLTEXT 1 0 52 "    #randp:=makeCanonicalRepresentative(randp);    \n
" }{MPLTEXT 1 0 24 "    if i=1 then k:=j-2;\n" }{MPLTEXT 1 0 24 "    e
lif i=2 then k:=j;\n" }{MPLTEXT 1 0 24 "    elif i=3 then k:=6;\n" }
{MPLTEXT 1 0 12 "    end if;\n" }{MPLTEXT 1 0 18 "    randoff:=o4+30" 
}{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(k-1)+PermIndex[randp];\n" }
{MPLTEXT 1 0 124 "    sgn:=(-1)^3; #Koordinate mit geradem Index wird \+
0, und die anschliessende Koordinatenpermutation ist 1 Transpositionen
.\n" }{MPLTEXT 1 0 44 "    D11[randoff,off]:=D11[randoff,off]+sgn;\n" 
}{MPLTEXT 1 0 6 "  od;\n" }{MPLTEXT 1 0 3 "  \n" }{MPLTEXT 1 0 56 "  #
Fertig mit allen Randzelltypen von Zellen vom Typ 1!\n" }{MPLTEXT 1 0 
5 " od;\n" }{MPLTEXT 1 0 4 "od;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 
20 "#Berechnen von D10:\n" }{MPLTEXT 1 0 46 "D10 := Matrix(420*24, 330
*24,storage=sparse);\n" }{MPLTEXT 1 0 17 "for p in Perm do\n" }
{MPLTEXT 1 0 9 " #Typ 2:\n" }{MPLTEXT 1 0 23 " off:=o2+PermIndex[p];\n
" }{MPLTEXT 1 0 32 " #Raender davon sind vom Typ 5:\n" }{MPLTEXT 1 0 
22 " for i from 1 to 4 do\n" }{MPLTEXT 1 0 72 "   #Moeglichkeit II.5.1
: Punkt i geht nach rechts, unter den Punkt i+1:\n" }{MPLTEXT 1 0 13 "
   randp:=p;\n" }{MPLTEXT 1 0 34 "   randp:=moveElement(i,i,randp);\n"
 }{MPLTEXT 1 0 51 "   #randp:=makeCanonicalRepresentative(randp);    \+
\n" }{MPLTEXT 1 0 17 "   randoff:=o5+30" }{MPLTEXT 1 0 3 "*24" }
{MPLTEXT 1 0 25 "*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 125 "   sgn
:=(-1)^1; #Koordinate mit ungeradem Index wird 0, und die anschliessen
de Koordinatenpermutation ist 0 Transpositionen.\n" }{MPLTEXT 1 0 43 "
   D10[randoff,off]:=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 3 "  \n" }
{MPLTEXT 1 0 72 "   #Moeglichkeit II.5.2: Punkt i geht nach rechts, ue
ber den Punkt i+1:\n" }{MPLTEXT 1 0 13 "   randp:=p;\n" }{MPLTEXT 1 0 
36 "   randp:=moveElement(i,i+1,randp);\n" }{MPLTEXT 1 0 51 "   #randp
:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 17 "   rand
off:=o5+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(i-1)+PermIndex[r
andp];\n" }{MPLTEXT 1 0 125 "   sgn:=(-1)^2; #Koordinate mit ungeradem
 Index wird 0, und die anschliessende Koordinatenpermutation ist 1 Tra
nspositionen.\n" }{MPLTEXT 1 0 43 "   D10[randoff,off]:=D10[randoff,of
f]+sgn;\n" }{MPLTEXT 1 0 5 " od;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 
0 21 " #Typ 3: vier Stueck\n" }{MPLTEXT 1 0 22 " for i from 1 to 4 do
\n" }{MPLTEXT 1 0 13 "   off:=o3+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 
1 0 21 "*(i-1)+PermIndex[p];\n" }{MPLTEXT 1 0 29 "   #Raender davon vo
m Typ 5:\n" }{MPLTEXT 1 0 67 "   #Moeglichkeit III.5.1: Punkt i+2 geht
 nach oben nach unendlich:\n" }{MPLTEXT 1 0 13 "   randp:=p;\n" }
{MPLTEXT 1 0 36 "   randp:=moveElement(i+2,6,randp);\n" }{MPLTEXT 1 0 
51 "   #randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 
0 17 "   randoff:=o5+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(i-1
)+PermIndex[randp];\n" }{MPLTEXT 1 0 127 "   sgn:=(-1)^(1+0); #Koordin
ate mit geradem Index wird 1, und die anschliessende Koordinatenpermut
ation ist 0 Transpositionen.\n" }{MPLTEXT 1 0 43 "   D10[randoff,off]:
=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 66 "   #M
oeglichkeit III.5.2: Punkt i geht nach unten nach unendlich:\n" }
{MPLTEXT 1 0 13 "   randp:=p;\n" }{MPLTEXT 1 0 34 "   randp:=moveEleme
nt(i,6,randp);\n" }{MPLTEXT 1 0 51 "   #randp:=makeCanonicalRepresenta
tive(randp);    \n" }{MPLTEXT 1 0 17 "   randoff:=o5+30" }{MPLTEXT 1 
0 3 "*24" }{MPLTEXT 1 0 25 "*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 
127 "   sgn:=(-1)^(2+0); #Koordinate mit geradem Index wird 0, und die
 anschliessende Koordinatenpermutation ist 0 Transpositionen.\n" }
{MPLTEXT 1 0 43 "   D10[randoff,off]:=D10[randoff,off]+sgn;\n" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 29 "   #Raender davon vom Typ 6:\n" 
}{MPLTEXT 1 0 68 "   #Moeglichkeit III.6.1: Punkt i-1 geht nach rechts
 in den Stapel:\n" }{MPLTEXT 1 0 16 "   if i>=2 then\n" }{MPLTEXT 1 0 
46 "     #in dem Stapel gibt es 4 Moeglichkeiten:\n" }{MPLTEXT 1 0 27 
"     for j from 0 to 3 do \n" }{MPLTEXT 1 0 82 "       #j ist die Ste
lle von unten aus gezaehlt, in zu der der Punkt i-1 stoesst.\n" }
{MPLTEXT 1 0 17 "       randp:=p;\n" }{MPLTEXT 1 0 44 "       randp:=m
oveElement(i-1,i-1+j,randp);\n" }{MPLTEXT 1 0 55 "       #randp:=makeC
anonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 21 "       randoff
:=o6+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 93 "*(i-2)+PermIndex[rand
p]; #i-2 kommt daher, dass der Stapel nach links rueckt (vom Index her
)\n" }{MPLTEXT 1 0 133 "       sgn:=(-1)^(1+j); #Koordinate mit ungera
dem Index wird 0, und die anschliessende Koordinatenpermutation ist j \+
Transpositionen.\n" }{MPLTEXT 1 0 47 "       D10[randoff,off]:=D10[ran
doff,off]+sgn;\n" }{MPLTEXT 1 0 9 "     od;\n" }{MPLTEXT 1 0 11 "   en
d if;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 67 "   #Moeglichkeit III.6
.2: Punkt i+3 geht nach links in den Stapel:\n" }{MPLTEXT 1 0 16 "   i
f i<=3 then\n" }{MPLTEXT 1 0 46 "     #in dem Stapel gibt es 4 Moeglic
hkeiten:\n" }{MPLTEXT 1 0 27 "     for j from 0 to 3 do \n" }{MPLTEXT 
1 0 81 "       #j ist die Stelle von oben aus gezaehlt, in zu der der \+
Punkt i+3 stoesst.\n" }{MPLTEXT 1 0 17 "       randp:=p;\n" }{MPLTEXT 
1 0 44 "       randp:=moveElement(i+3,i+3-j,randp);\n" }{MPLTEXT 1 0 
55 "       #randp:=makeCanonicalRepresentative(randp);    \n" }
{MPLTEXT 1 0 21 "       randoff:=o6+30" }{MPLTEXT 1 0 3 "*24" }
{MPLTEXT 1 0 25 "*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 133 "      \+
 sgn:=(-1)^(1+j); #Koordinate mit ungeradem Index wird 0, und die ansc
hliessende Koordinatenpermutation ist j Transpositionen.\n" }{MPLTEXT 
1 0 47 "       D10[randoff,off]:=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 
0 9 "     od;\n" }{MPLTEXT 1 0 11 "   end if;\n" }{MPLTEXT 1 0 1 "\n" 
}{MPLTEXT 1 0 29 "   #Raender davon vom Typ 7:\n" }{MPLTEXT 1 0 79 "  \+
 #Moeglichkeit III.7.1: der Zweierhaufen bildet sich links vom Dreierh
aufen:\n" }{MPLTEXT 1 0 26 "   for j from 1 to i-2 do\n" }{MPLTEXT 1 
0 61 "     #Moeglichkeit III.7.1.a: j geht nach rechts unter j+1: \n" 
}{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 0 36 "     randp:=move
Element(j,j,randp);\n" }{MPLTEXT 1 0 53 "     #randp:=makeCanonicalRep
resentative(randp);    \n" }{MPLTEXT 1 0 25 "     if j=1 then k:=i-2;
\n" }{MPLTEXT 1 0 16 "     else k:=3;\n" }{MPLTEXT 1 0 13 "     end if
;\n" }{MPLTEXT 1 0 19 "     randoff:=o7+30" }{MPLTEXT 1 0 3 "*24" }
{MPLTEXT 1 0 25 "*(k-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 127 "     s
gn:=(-1)^1; #Koordinate mit ungeradem Index wird 0, und die anschliess
ende Koordinatenpermutation ist 0 Transpositionen.\n" }{MPLTEXT 1 0 
45 "     D10[randoff,off]:=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 1 "
\n" }{MPLTEXT 1 0 61 "     #Moeglichkeit III.7.1.b: j geht nach rechts
 ueber j+1: \n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 0 38 "
     randp:=moveElement(j,j+1,randp);\n" }{MPLTEXT 1 0 53 "     #randp
:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 25 "     if
 j=1 then k:=i-2;\n" }{MPLTEXT 1 0 16 "     else k:=3;\n" }{MPLTEXT 1 
0 13 "     end if;\n" }{MPLTEXT 1 0 19 "     randoff:=o7+30" }{MPLTEXT
 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(k-1)+PermIndex[randp];\n" }{MPLTEXT 
1 0 127 "     sgn:=(-1)^2; #Koordinate mit ungeradem Index wird 0, und
 die anschliessende Koordinatenpermutation ist 1 Transpositionen.\n" }
{MPLTEXT 1 0 45 "     D10[randoff,off]:=D10[randoff,off]+sgn;\n" }
{MPLTEXT 1 0 7 "   od;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 80 "   #M
oeglichkeit III.7.2: der Zweierhaufen bildet sich rechts vom Dreierhau
fen:\n" }{MPLTEXT 1 0 26 "   for j from i+3 to 5 do\n" }{MPLTEXT 1 0 
61 "     #Moeglichkeit III.7.2.a: j geht nach rechts unter j+1: \n" }
{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 0 36 "     randp:=moveE
lement(j,j,randp);\n" }{MPLTEXT 1 0 53 "     #randp:=makeCanonicalRepr
esentative(randp);    \n" }{MPLTEXT 1 0 23 "     if i=1 then k:=j;\n" 
}{MPLTEXT 1 0 16 "     else k:=6;\n" }{MPLTEXT 1 0 13 "     end if;\n"
 }{MPLTEXT 1 0 19 "     randoff:=o7+30" }{MPLTEXT 1 0 3 "*24" }
{MPLTEXT 1 0 25 "*(k-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 127 "     s
gn:=(-1)^1; #Koordinate mit ungeradem Index wird 0, und die anschliess
ende Koordinatenpermutation ist 0 Transpositionen.\n" }{MPLTEXT 1 0 
45 "     D10[randoff,off]:=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 1 "
\n" }{MPLTEXT 1 0 61 "     #Moeglichkeit III.7.2.b: j geht nach rechts
 ueber j+1: \n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 0 38 "
     randp:=moveElement(j,j+1,randp);\n" }{MPLTEXT 1 0 53 "     #randp
:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 23 "     if
 i=1 then k:=j;\n" }{MPLTEXT 1 0 16 "     else k:=6;\n" }{MPLTEXT 1 0 
13 "     end if;\n" }{MPLTEXT 1 0 19 "     randoff:=o7+30" }{MPLTEXT 
1 0 3 "*24" }{MPLTEXT 1 0 25 "*(k-1)+PermIndex[randp];\n" }{MPLTEXT 1 
0 127 "     sgn:=(-1)^2; #Koordinate mit ungeradem Index wird 0, und d
ie anschliessende Koordinatenpermutation ist 1 Transpositionen.\n" }
{MPLTEXT 1 0 45 "     D10[randoff,off]:=D10[randoff,off]+sgn;\n" }
{MPLTEXT 1 0 7 "   od;\n" }{MPLTEXT 1 0 32 " od; #for i form 1 to 4 (T
yp 3)\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 9 " #Typ 4:\n" }{MPLTEXT 
1 0 22 " for i from 1 to 3 do\n" }{MPLTEXT 1 0 25 "  for j from i+2 to
 5 do\n" }{MPLTEXT 1 0 23 "   if i=1 then k:=j-2;\n" }{MPLTEXT 1 0 23 
"   elif i=2 then k:=j;\n" }{MPLTEXT 1 0 14 "   else k:=6;\n" }
{MPLTEXT 1 0 11 "   end if;\n" }{MPLTEXT 1 0 13 "   off:=o4+30" }
{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 21 "*(k-1)+PermIndex[p];\n" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 29 "   #Raender davon vom Typ 5:\n" 
}{MPLTEXT 1 0 60 "   #Moeglichkeit IV.5.1: i+1 geht nach oben nach une
ndlich:\n" }{MPLTEXT 1 0 13 "   randp:=p;\n" }{MPLTEXT 1 0 36 "   rand
p:=moveElement(i+1,6,randp);\n" }{MPLTEXT 1 0 51 "   #randp:=makeCanon
icalRepresentative(randp);    \n" }{MPLTEXT 1 0 17 "   randoff:=o5+30"
 }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 27 "*(j-1-1)+PermIndex[randp];\n"
 }{MPLTEXT 1 0 129 "   sgn:=(-1)^(0+0); #Koordinate mit ungeradem Inde
x wird 1, und die anschliessende Koordinatenpermutation ist 0 Transpos
itionen.\n" }{MPLTEXT 1 0 43 "   D10[randoff,off]:=D10[randoff,off]+sg
n;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 59 "   #Moeglichkeit IV.5.2: \+
i geht nach unten nach unendlich:\n" }{MPLTEXT 1 0 13 "   randp:=p;\n"
 }{MPLTEXT 1 0 34 "   randp:=moveElement(i,6,randp);\n" }{MPLTEXT 1 0 
51 "   #randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 
0 17 "   randoff:=o5+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 27 "*(j-1
-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 127 "   sgn:=(-1)^(2+0); #Koord
inate mit geradem Index wird 0, und die anschliessende Koordinatenperm
utation ist 0 Transpositionen.\n" }{MPLTEXT 1 0 43 "   D10[randoff,off
]:=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 60 "   \+
#Moeglichkeit IV.5.3: j+1 geht nach oben nach unendlich:\n" }{MPLTEXT 
1 0 13 "   randp:=p;\n" }{MPLTEXT 1 0 36 "   randp:=moveElement(j+1,6,
randp);\n" }{MPLTEXT 1 0 51 "   #randp:=makeCanonicalRepresentative(ra
ndp);    \n" }{MPLTEXT 1 0 17 "   randoff:=o5+30" }{MPLTEXT 1 0 3 "*24
" }{MPLTEXT 1 0 25 "*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 127 "   \+
sgn:=(-1)^(1+0); #Koordinate mit geradem Index wird 1, und die anschli
essende Koordinatenpermutation ist 0 Transpositionen.\n" }{MPLTEXT 1 
0 43 "   D10[randoff,off]:=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 1 "
\n" }{MPLTEXT 1 0 59 "   #Moeglichkeit IV.5.4: j geht nach unten nach \+
unendlich:\n" }{MPLTEXT 1 0 13 "   randp:=p;\n" }{MPLTEXT 1 0 34 "   r
andp:=moveElement(j,6,randp);\n" }{MPLTEXT 1 0 51 "   #randp:=makeCano
nicalRepresentative(randp);    \n" }{MPLTEXT 1 0 17 "   randoff:=o5+30
" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(i-1)+PermIndex[randp];\n" 
}{MPLTEXT 1 0 129 "   sgn:=(-1)^(1+0); #Koordinate mit ungeradem Index
 wird 0, und die anschliessende Koordinatenpermutation ist 0 Transposi
tionen.\n" }{MPLTEXT 1 0 43 "   D10[randoff,off]:=D10[randoff,off]+sgn
;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 29 "   #Raender davon vom Typ \+
6:\n" }{MPLTEXT 1 0 17 "   if i+2=j then\n" }{MPLTEXT 1 0 91 "     #Es
 gibt 6 Moeglichkeiten, wie beide 2er-Stapel sich zu einem 4er vereini
gen koennen:\n" }{MPLTEXT 1 0 66 "     #Moeglichkeit IV.6.1: i und i+1
 gehen beide unter j und j+1:\n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }
{MPLTEXT 1 0 36 "     randp:=moveElement(i,i,randp);\n" }{MPLTEXT 1 0 
53 "     #randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 
1 0 19 "     randoff:=o6+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*
(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 129 "     sgn:=(-1)^(2+0); #K
oordinate mit geradem Index wird 0, und die anschliessende Koordinaten
permutation ist 0 Transpositionen.\n" }{MPLTEXT 1 0 45 "     D10[rando
ff,off]:=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 
71 "     #Moeglichkeit IV.6.2: i geht unter j, und i+1 zwischen j und \+
j+1:\n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 0 38 "     ran
dp:=moveElement(i+1,j,randp);\n" }{MPLTEXT 1 0 53 "     #randp:=makeCa
nonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 19 "     randoff:=o
6+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(i-1)+PermIndex[randp];
\n" }{MPLTEXT 1 0 129 "     sgn:=(-1)^(2+1); #Koordinate mit geradem I
ndex wird 0, und die anschliessende Koordinatenpermutation ist 1 Trans
positionen.\n" }{MPLTEXT 1 0 45 "     D10[randoff,off]:=D10[randoff,of
f]+sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 62 "     #Moeglichkeit I
V.6.3: i geht unter j, und i+1 ueber j+1:\n" }{MPLTEXT 1 0 15 "     ra
ndp:=p;\n" }{MPLTEXT 1 0 40 "     randp:=moveElement(i+1,j+1,randp);\n
" }{MPLTEXT 1 0 53 "     #randp:=makeCanonicalRepresentative(randp);  \+
  \n" }{MPLTEXT 1 0 19 "     randoff:=o6+30" }{MPLTEXT 1 0 3 "*24" }
{MPLTEXT 1 0 25 "*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 129 "     s
gn:=(-1)^(2+2); #Koordinate mit geradem Index wird 0, und die anschlie
ssende Koordinatenpermutation ist 2 Transpositionen.\n" }{MPLTEXT 1 0 
45 "     D10[randoff,off]:=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 1 "
\n" }{MPLTEXT 1 0 69 "     #Moeglichkeit IV.6.4: i und i+1 gehen beide
 zwischen j und j+1:\n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 
1 0 36 "     randp:=moveElement(j,i,randp);\n" }{MPLTEXT 1 0 53 "     \+
#randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 19 " \+
    randoff:=o6+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(i-1)+Per
mIndex[randp];\n" }{MPLTEXT 1 0 129 "     sgn:=(-1)^(2+2); #Koordinate
 mit geradem Index wird 0, und die anschliessende Koordinatenpermutati
on ist 2 Transpositionen.\n" }{MPLTEXT 1 0 45 "     D10[randoff,off]:=
D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 78 "     #
Moeglichkeit IV.6.5: i geht zwischen j und j+1, und i+1 geht ueber j+1
:\n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 0 40 "     randp:
=moveElement(i+1,j+1,randp);\n" }{MPLTEXT 1 0 38 "     randp:=moveElem
ent(i,i+1,randp);\n" }{MPLTEXT 1 0 53 "     #randp:=makeCanonicalRepre
sentative(randp);    \n" }{MPLTEXT 1 0 19 "     randoff:=o6+30" }
{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(i-1)+PermIndex[randp];\n" }
{MPLTEXT 1 0 129 "     sgn:=(-1)^(2+3); #Koordinate mit geradem Index \+
wird 0, und die anschliessende Koordinatenpermutation ist 2 Transposit
ionen.\n" }{MPLTEXT 1 0 45 "     D10[randoff,off]:=D10[randoff,off]+sg
n;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 60 "     #Moeglichkeit IV.6.6
: i und i+1 gehen beide ueber j+1:\n" }{MPLTEXT 1 0 15 "     randp:=p;
\n" }{MPLTEXT 1 0 40 "     randp:=moveElement(i+1,j+1,randp);\n" }
{MPLTEXT 1 0 38 "     randp:=moveElement(i,i+2,randp);\n" }{MPLTEXT 1 
0 53 "     #randp:=makeCanonicalRepresentative(randp);    \n" }
{MPLTEXT 1 0 19 "     randoff:=o6+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 
1 0 25 "*(i-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 129 "     sgn:=(-1)^
(2+4); #Koordinate mit geradem Index wird 0, und die anschliessende Ko
ordinatenpermutation ist 2 Transpositionen.\n" }{MPLTEXT 1 0 45 "     \+
D10[randoff,off]:=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 11 "   end if
;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 29 "   #Raender davon vom Typ \+
7:\n" }{MPLTEXT 1 0 52 "   #Moeglichkeit IV.7.1: i-1 geht auf den i-St
apel:\n" }{MPLTEXT 1 0 16 "   if i>=2 then\n" }{MPLTEXT 1 0 69 "    #d
rei Moeglichkeiten fuer die Stelle im Stapel, zu der i-1 geht:\n" }
{MPLTEXT 1 0 25 "    for a from 0 to 2 do\n" }{MPLTEXT 1 0 51 "     #a
 ist diese Stelle von unten aus gezaehlt.  \n" }{MPLTEXT 1 0 15 "     \+
randp:=p;\n" }{MPLTEXT 1 0 42 "     randp:=moveElement(i-1,i-1+a,randp
);\n" }{MPLTEXT 1 0 53 "     #randp:=makeCanonicalRepresentative(randp
);    \n" }{MPLTEXT 1 0 23 "     if i=2 then k:=j;\n" }{MPLTEXT 1 0 
16 "     else k:=6;\n" }{MPLTEXT 1 0 13 "     end if;\n" }{MPLTEXT 1 
0 19 "     randoff:=o7+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(k
-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 131 "     sgn:=(-1)^(1+a); #Koo
rdinate mit ungeradem Index wird 0, und die anschliessende Koordinaten
permutation ist a Transpositionen.\n" }{MPLTEXT 1 0 45 "     D10[rando
ff,off]:=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 8 "    od;\n" }
{MPLTEXT 1 0 11 "   end if;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 52 "
   #Moeglichkeit IV.7.2: i+2 geht auf den i-Stapel:\n" }{MPLTEXT 1 0 
18 "   if j>=i+3 then\n" }{MPLTEXT 1 0 69 "    #drei Moeglichkeiten fu
er die Stelle im Stapel, zu der i-1 geht:\n" }{MPLTEXT 1 0 25 "    for
 a from 0 to 2 do\n" }{MPLTEXT 1 0 50 "     #a ist diese Stelle von ob
en aus gezaehlt.  \n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 
0 42 "     randp:=moveElement(i+2,i+2-a,randp);\n" }{MPLTEXT 1 0 53 " \+
    #randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 
23 "     if i=1 then k:=j;\n" }{MPLTEXT 1 0 16 "     else k:=6;\n" }
{MPLTEXT 1 0 13 "     end if;\n" }{MPLTEXT 1 0 19 "     randoff:=o7+30
" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(k-1)+PermIndex[randp];\n" 
}{MPLTEXT 1 0 129 "     sgn:=(-1)^(2+a); #Koordinate mit geradem Index
 wird 0, und die anschliessende Koordinatenpermutation ist a Transposi
tionen.\n" }{MPLTEXT 1 0 45 "     D10[randoff,off]:=D10[randoff,off]+s
gn;\n" }{MPLTEXT 1 0 8 "    od;\n" }{MPLTEXT 1 0 11 "   end if;\n" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 52 "   #Moeglichkeit IV.7.3: j-1 geh
t auf den j-Stapel:\n" }{MPLTEXT 1 0 18 "   if j>=i+3 then\n" }
{MPLTEXT 1 0 69 "    #drei Moeglichkeiten fuer die Stelle im Stapel, z
u der j-1 geht:\n" }{MPLTEXT 1 0 25 "    for a from 0 to 2 do\n" }
{MPLTEXT 1 0 51 "     #a ist diese Stelle von unten aus gezaehlt.  \n"
 }{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 0 42 "     randp:=mov
eElement(j-1,j-1+a,randp);\n" }{MPLTEXT 1 0 53 "     #randp:=makeCanon
icalRepresentative(randp);    \n" }{MPLTEXT 1 0 25 "     if i=1 then k
:=j-3;\n" }{MPLTEXT 1 0 16 "     else k:=3;\n" }{MPLTEXT 1 0 13 "     \+
end if;\n" }{MPLTEXT 1 0 19 "     randoff:=o7+30" }{MPLTEXT 1 0 3 "*24
" }{MPLTEXT 1 0 25 "*(k-1)+PermIndex[randp];\n" }{MPLTEXT 1 0 129 "   \+
  sgn:=(-1)^(2+a); #Koordinate mit geradem Index wird 0, und die ansch
liessende Koordinatenpermutation ist a Transpositionen.\n" }{MPLTEXT 
1 0 45 "     D10[randoff,off]:=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 
8 "    od;\n" }{MPLTEXT 1 0 11 "   end if;\n" }{MPLTEXT 1 0 1 "\n" }
{MPLTEXT 1 0 52 "   #Moeglichkeit IV.7.4: j+2 geht auf den j-Stapel:\n
" }{MPLTEXT 1 0 16 "   if j<=4 then\n" }{MPLTEXT 1 0 69 "    #drei Moe
glichkeiten fuer die Stelle im Stapel, zu der j+2 geht:\n" }{MPLTEXT 
1 0 25 "    for a from 0 to 2 do\n" }{MPLTEXT 1 0 50 "     #a ist dies
e Stelle von oben aus gezaehlt.  \n" }{MPLTEXT 1 0 15 "     randp:=p;
\n" }{MPLTEXT 1 0 42 "     randp:=moveElement(j+2,j+2-a,randp);\n" }
{MPLTEXT 1 0 53 "     #randp:=makeCanonicalRepresentative(randp);    \+
\n" }{MPLTEXT 1 0 25 "     if i=1 then k:=j-2;\n" }{MPLTEXT 1 0 16 "  \+
   else k:=3;\n" }{MPLTEXT 1 0 13 "     end if;\n" }{MPLTEXT 1 0 19 " \+
    randoff:=o7+30" }{MPLTEXT 1 0 3 "*24" }{MPLTEXT 1 0 25 "*(k-1)+Per
mIndex[randp];\n" }{MPLTEXT 1 0 131 "     sgn:=(-1)^(1+a); #Koordinate
 mit ungeradem Index wird 0, und die anschliessende Koordinatenpermuta
tion ist a Transpositionen.\n" }{MPLTEXT 1 0 45 "     D10[randoff,off]
:=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 8 "    od;\n" }{MPLTEXT 1 0 
11 "   end if;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 29 "   #Raender d
avon vom Typ 8:\n" }{MPLTEXT 1 0 69 "   #Moeglichkeit IV.8.1: zwei ein
zelne Punkte links vereinigen sich:\n" }{MPLTEXT 1 0 16 "   if i>=3 th
en\n" }{MPLTEXT 1 0 25 "    for a from 0 to 1 do\n" }{MPLTEXT 1 0 89 "
     #a ist diese Stelle von unten aus gezaehlt, zu der der erste Punk
t nach rechts geht\n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 
0 38 "     randp:=moveElement(1,1+a,randp);\n" }{MPLTEXT 1 0 53 "     \+
#randp:=makeCanonicalRepresentative(randp);    \n" }{MPLTEXT 1 0 35 " \+
    randoff:=o8+PermIndex[randp];\n" }{MPLTEXT 1 0 131 "     sgn:=(-1)
^(1+a); #Koordinate mit ungeradem Index wird 0, und die anschliessende
 Koordinatenpermutation ist a Transpositionen.\n" }{MPLTEXT 1 0 45 "  \+
   D10[randoff,off]:=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 8 "    od;
\n" }{MPLTEXT 1 0 11 "   end if;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 
0 76 "   #Moeglichkeit IV.8.2: zwei einzelne Punkte in der Mitte verei
nigen sich:\n" }{MPLTEXT 1 0 23 "   if i=1 and j=5 then\n" }{MPLTEXT 
1 0 25 "    for a from 0 to 1 do\n" }{MPLTEXT 1 0 86 "     #a ist dies
e Stelle von unten aus gezaehlt, zu der der 3. Punkt nach rechts geht
\n" }{MPLTEXT 1 0 15 "     randp:=p;\n" }{MPLTEXT 1 0 38 "     randp:=
moveElement(3,3+a,randp);\n" }{MPLTEXT 1 0 53 "     #randp:=makeCanoni
calRepresentative(randp);    \n" }{MPLTEXT 1 0 35 "     randoff:=o8+Pe
rmIndex[randp];\n" }{MPLTEXT 1 0 129 "     sgn:=(-1)^(2+a); #Koordinat
e mit geradem Index wird 0, und die anschliessende Koordinatenpermutat
ion ist a Transpositionen.\n" }{MPLTEXT 1 0 45 "     D10[randoff,off]:
=D10[randoff,off]+sgn;\n" }{MPLTEXT 1 0 8 "    od;\n" }{MPLTEXT 1 0 
11 "   end if;\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 70 "   #Moeglichk
eit IV.8.3: zwei einzelne Punkte rechts vereinigen sich:\n" }{MPLTEXT 
1 0 16 "   if j<=3 then\n" }{MPLTEXT 1 0 25 "    for a from 0 to 1 do
\n" }{MPLTEXT 1 0 86 "     #a ist diese Stelle von unten aus gezaehlt,
 zu der der 5. Punkt nach rechts geht\n" }{MPLTEXT 1 0 15 "     randp:
=p;\n" }{MPLTEXT 1 0 38 "     randp:=moveElement(5,5+a,randp);\n" }
{MPLTEXT 1 0 53 "     #randp:=makeCanonicalRepresentative(randp);    \+
\n" }{MPLTEXT 1 0 35 "     randoff:=o8+PermIndex[randp];\n" }{MPLTEXT 
1 0 131 "     sgn:=(-1)^(1+a); #Koordinate mit ungeradem Index wird 0,
 und die anschliessende Koordinatenpermutation ist a Transpositionen.
\n" }{MPLTEXT 1 0 45 "     D10[randoff,off]:=D10[randoff,off]+sgn;\n" 
}{MPLTEXT 1 0 8 "    od;\n" }{MPLTEXT 1 0 11 "   end if;\n" }{MPLTEXT 
1 0 1 "\n" }{MPLTEXT 1 0 18 "  od; #j-Schleife\n" }{MPLTEXT 1 0 17 " o
d; #i-Schleife\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 19 "od; #for p in
 Perm\n" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 28 "D12,D11,D10,Perm,PermI
ndex;\n" }{MPLTEXT 1 0 9 "end proc:" }{MPLTEXT 1 0 0 "" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 72 "GD12, G
D11, GD10, Gperm, GpermIndex := OctahedraOnSpheresGCellComplex();" }
{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "6'-I'MatrixG6$%*prot
ectedGI(_syslibG6\"6#/I$%idGF(\"*op%e8-F$6#/F+\"*S4m]\"-F$6#/F+\"*SrW
\\\"7\\hm7(\"\"\"\"\"#\"\"$\"\"%\"\"&\"\"'7(F7F8F9F:F<F;7(F7F8F9F;F:F<
7(F7F8F9F;F<F:7(F7F8F9F<F:F;7(F7F8F9F<F;F:7(F7F8F:F9F;F<7(F7F8F:F9F<F;
7(F7F8F:F;F9F<7(F7F8F:F;F<F97(F7F8F:F<F9F;7(F7F8F:F<F;F97(F7F8F;F9F:F<
7(F7F8F;F9F<F:7(F7F8F;F:F9F<7(F7F8F;F:F<F97(F7F8F;F<F9F:7(F7F8F;F<F:F9
7(F7F8F<F9F:F;7(F7F8F<F9F;F:7(F7F8F<F:F9F;7(F7F8F<F:F;F97(F7F8F<F;F9F:
7(F7F8F<F;F:F97(F7F9F8F:F;F<7(F7F9F8F:F<F;7(F7F9F8F;F:F<7(F7F9F8F;F<F:
7(F7F9F8F<F:F;7(F7F9F8F<F;F:7(F7F9F:F8F;F<7(F7F9F:F8F<F;7(F7F9F:F;F8F<
7(F7F9F:F;F<F87(F7F9F:F<F8F;7(F7F9F:F<F;F87(F7F9F;F8F:F<7(F7F9F;F8F<F:
7(F7F9F;F:F8F<7(F7F9F;F:F<F87(F7F9F;F<F8F:7(F7F9F;F<F:F87(F7F9F<F8F:F;
7(F7F9F<F8F;F:7(F7F9F<F:F8F;7(F7F9F<F:F;F87(F7F9F<F;F8F:7(F7F9F<F;F:F8
7(F7F:F8F9F;F<7(F7F:F8F9F<F;7(F7F:F8F;F9F<7(F7F:F8F;F<F97(F7F:F8F<F9F;
7(F7F:F8F<F;F97(F7F:F9F8F;F<7(F7F:F9F8F<F;7(F7F:F9F;F8F<7(F7F:F9F;F<F8
7(F7F:F9F<F8F;7(F7F:F9F<F;F87(F7F:F;F8F9F<7(F7F:F;F8F<F97(F7F:F;F9F8F<
7(F7F:F;F9F<F87(F7F:F;F<F8F97(F7F:F;F<F9F87(F7F:F<F8F9F;7(F7F:F<F8F;F9
7(F7F:F<F9F8F;7(F7F:F<F9F;F87(F7F:F<F;F8F97(F7F:F<F;F9F87(F7F;F8F9F:F<
7(F7F;F8F9F<F:7(F7F;F8F:F9F<7(F7F;F8F:F<F97(F7F;F8F<F9F:7(F7F;F8F<F:F9
7(F7F;F9F8F:F<7(F7F;F9F8F<F:7(F7F;F9F:F8F<7(F7F;F9F:F<F87(F7F;F9F<F8F:
7(F7F;F9F<F:F87(F7F;F:F8F9F<7(F7F;F:F8F<F97(F7F;F:F9F8F<7(F7F;F:F9F<F8
7(F7F;F:F<F8F97(F7F;F:F<F9F87(F7F;F<F8F9F:7(F7F;F<F8F:F97(F7F;F<F9F8F:
7(F7F;F<F9F:F87(F7F;F<F:F8F97(F7F;F<F:F9F87(F7F<F8F9F:F;7(F7F<F8F9F;F:
7(F7F<F8F:F9F;7(F7F<F8F:F;F97(F7F<F8F;F9F:7(F7F<F8F;F:F97(F7F<F9F8F:F;
7(F7F<F9F8F;F:7(F7F<F9F:F8F;7(F7F<F9F:F;F87(F7F<F9F;F8F:7(F7F<F9F;F:F8
7(F7F<F:F8F9F;7(F7F<F:F8F;F97(F7F<F:F9F8F;7(F7F<F:F9F;F87(F7F<F:F;F8F9
7(F7F<F:F;F9F87(F7F<F;F8F9F:7(F7F<F;F8F:F97(F7F<F;F9F8F:7(F7F<F;F9F:F8
7(F7F<F;F:F8F97(F7F<F;F:F9F87(F8F7F9F:F;F<7(F8F7F9F:F<F;7(F8F7F9F;F:F<
7(F8F7F9F;F<F:7(F8F7F9F<F:F;7(F8F7F9F<F;F:7(F8F7F:F9F;F<7(F8F7F:F9F<F;
7(F8F7F:F;F9F<7(F8F7F:F;F<F97(F8F7F:F<F9F;7(F8F7F:F<F;F97(F8F7F;F9F:F<
7(F8F7F;F9F<F:7(F8F7F;F:F9F<7(F8F7F;F:F<F97(F8F7F;F<F9F:7(F8F7F;F<F:F9
7(F8F7F<F9F:F;7(F8F7F<F9F;F:7(F8F7F<F:F9F;7(F8F7F<F:F;F97(F8F7F<F;F9F:
7(F8F7F<F;F:F97(F8F9F7F:F;F<7(F8F9F7F:F<F;7(F8F9F7F;F:F<7(F8F9F7F;F<F:
7(F8F9F7F<F:F;7(F8F9F7F<F;F:7(F8F9F:F7F;F<7(F8F9F:F7F<F;7(F8F9F:F;F7F<
7(F8F9F:F;F<F77(F8F9F:F<F7F;7(F8F9F:F<F;F77(F8F9F;F7F:F<7(F8F9F;F7F<F:
7(F8F9F;F:F7F<7(F8F9F;F:F<F77(F8F9F;F<F7F:7(F8F9F;F<F:F77(F8F9F<F7F:F;
7(F8F9F<F7F;F:7(F8F9F<F:F7F;7(F8F9F<F:F;F77(F8F9F<F;F7F:7(F8F9F<F;F:F7
7(F8F:F7F9F;F<7(F8F:F7F9F<F;7(F8F:F7F;F9F<7(F8F:F7F;F<F97(F8F:F7F<F9F;
7(F8F:F7F<F;F97(F8F:F9F7F;F<7(F8F:F9F7F<F;7(F8F:F9F;F7F<7(F8F:F9F;F<F7
7(F8F:F9F<F7F;7(F8F:F9F<F;F77(F8F:F;F7F9F<7(F8F:F;F7F<F97(F8F:F;F9F7F<
7(F8F:F;F9F<F77(F8F:F;F<F7F97(F8F:F;F<F9F77(F8F:F<F7F9F;7(F8F:F<F7F;F9
7(F8F:F<F9F7F;7(F8F:F<F9F;F77(F8F:F<F;F7F97(F8F:F<F;F9F77(F8F;F7F9F:F<
7(F8F;F7F9F<F:7(F8F;F7F:F9F<7(F8F;F7F:F<F97(F8F;F7F<F9F:7(F8F;F7F<F:F9
7(F8F;F9F7F:F<7(F8F;F9F7F<F:7(F8F;F9F:F7F<7(F8F;F9F:F<F77(F8F;F9F<F7F:
7(F8F;F9F<F:F77(F8F;F:F7F9F<7(F8F;F:F7F<F97(F8F;F:F9F7F<7(F8F;F:F9F<F7
7(F8F;F:F<F7F97(F8F;F:F<F9F77(F8F;F<F7F9F:7(F8F;F<F7F:F97(F8F;F<F9F7F:
7(F8F;F<F9F:F77(F8F;F<F:F7F97(F8F;F<F:F9F77(F8F<F7F9F:F;7(F8F<F7F9F;F:
7(F8F<F7F:F9F;7(F8F<F7F:F;F97(F8F<F7F;F9F:7(F8F<F7F;F:F97(F8F<F9F7F:F;
7(F8F<F9F7F;F:7(F8F<F9F:F7F;7(F8F<F9F:F;F77(F8F<F9F;F7F:7(F8F<F9F;F:F7
7(F8F<F:F7F9F;7(F8F<F:F7F;F97(F8F<F:F9F7F;7(F8F<F:F9F;F77(F8F<F:F;F7F9
7(F8F<F:F;F9F77(F8F<F;F7F9F:7(F8F<F;F7F:F97(F8F<F;F9F7F:7(F8F<F;F9F:F7
7(F8F<F;F:F7F97(F8F<F;F:F9F77(F9F7F8F:F;F<7(F9F7F8F:F<F;7(F9F7F8F;F:F<
7(F9F7F8F;F<F:7(F9F7F8F<F:F;7(F9F7F8F<F;F:7(F9F7F:F8F;F<7(F9F7F:F8F<F;
7(F9F7F:F;F8F<7(F9F7F:F;F<F87(F9F7F:F<F8F;7(F9F7F:F<F;F87(F9F7F;F8F:F<
7(F9F7F;F8F<F:7(F9F7F;F:F8F<7(F9F7F;F:F<F87(F9F7F;F<F8F:7(F9F7F;F<F:F8
7(F9F7F<F8F:F;7(F9F7F<F8F;F:7(F9F7F<F:F8F;7(F9F7F<F:F;F87(F9F7F<F;F8F:
7(F9F7F<F;F:F87(F9F8F7F:F;F<7(F9F8F7F:F<F;7(F9F8F7F;F:F<7(F9F8F7F;F<F:
7(F9F8F7F<F:F;7(F9F8F7F<F;F:7(F9F8F:F7F;F<7(F9F8F:F7F<F;7(F9F8F:F;F7F<
7(F9F8F:F;F<F77(F9F8F:F<F7F;7(F9F8F:F<F;F77(F9F8F;F7F:F<7(F9F8F;F7F<F:
7(F9F8F;F:F7F<7(F9F8F;F:F<F77(F9F8F;F<F7F:7(F9F8F;F<F:F77(F9F8F<F7F:F;
7(F9F8F<F7F;F:7(F9F8F<F:F7F;7(F9F8F<F:F;F77(F9F8F<F;F7F:7(F9F8F<F;F:F7
7(F9F:F7F8F;F<7(F9F:F7F8F<F;7(F9F:F7F;F8F<7(F9F:F7F;F<F87(F9F:F7F<F8F;
7(F9F:F7F<F;F87(F9F:F8F7F;F<7(F9F:F8F7F<F;7(F9F:F8F;F7F<7(F9F:F8F;F<F7
7(F9F:F8F<F7F;7(F9F:F8F<F;F77(F9F:F;F7F8F<7(F9F:F;F7F<F87(F9F:F;F8F7F<
7(F9F:F;F8F<F77(F9F:F;F<F7F87(F9F:F;F<F8F77(F9F:F<F7F8F;7(F9F:F<F7F;F8
7(F9F:F<F8F7F;7(F9F:F<F8F;F77(F9F:F<F;F7F87(F9F:F<F;F8F77(F9F;F7F8F:F<
7(F9F;F7F8F<F:7(F9F;F7F:F8F<7(F9F;F7F:F<F87(F9F;F7F<F8F:7(F9F;F7F<F:F8
7(F9F;F8F7F:F<7(F9F;F8F7F<F:7(F9F;F8F:F7F<7(F9F;F8F:F<F77(F9F;F8F<F7F:
7(F9F;F8F<F:F77(F9F;F:F7F8F<7(F9F;F:F7F<F87(F9F;F:F8F7F<7(F9F;F:F8F<F7
7(F9F;F:F<F7F87(F9F;F:F<F8F77(F9F;F<F7F8F:7(F9F;F<F7F:F87(F9F;F<F8F7F:
7(F9F;F<F8F:F77(F9F;F<F:F7F87(F9F;F<F:F8F77(F9F<F7F8F:F;7(F9F<F7F8F;F:
7(F9F<F7F:F8F;7(F9F<F7F:F;F87(F9F<F7F;F8F:7(F9F<F7F;F:F87(F9F<F8F7F:F;
7(F9F<F8F7F;F:7(F9F<F8F:F7F;7(F9F<F8F:F;F77(F9F<F8F;F7F:7(F9F<F8F;F:F7
7(F9F<F:F7F8F;7(F9F<F:F7F;F87(F9F<F:F8F7F;7(F9F<F:F8F;F77(F9F<F:F;F7F8
7(F9F<F:F;F8F77(F9F<F;F7F8F:7(F9F<F;F7F:F87(F9F<F;F8F7F:7(F9F<F;F8F:F7
7(F9F<F;F:F7F87(F9F<F;F:F8F77(F:F7F8F9F;F<7(F:F7F8F9F<F;7(F:F7F8F;F9F<
7(F:F7F8F;F<F97(F:F7F8F<F9F;7(F:F7F8F<F;F97(F:F7F9F8F;F<7(F:F7F9F8F<F;
7(F:F7F9F;F8F<7(F:F7F9F;F<F87(F:F7F9F<F8F;7(F:F7F9F<F;F87(F:F7F;F8F9F<
7(F:F7F;F8F<F97(F:F7F;F9F8F<7(F:F7F;F9F<F87(F:F7F;F<F8F97(F:F7F;F<F9F8
7(F:F7F<F8F9F;7(F:F7F<F8F;F97(F:F7F<F9F8F;7(F:F7F<F9F;F87(F:F7F<F;F8F9
7(F:F7F<F;F9F87(F:F8F7F9F;F<7(F:F8F7F9F<F;7(F:F8F7F;F9F<7(F:F8F7F;F<F9
7(F:F8F7F<F9F;7(F:F8F7F<F;F97(F:F8F9F7F;F<7(F:F8F9F7F<F;7(F:F8F9F;F7F<
7(F:F8F9F;F<F77(F:F8F9F<F7F;7(F:F8F9F<F;F77(F:F8F;F7F9F<7(F:F8F;F7F<F9
7(F:F8F;F9F7F<7(F:F8F;F9F<F77(F:F8F;F<F7F97(F:F8F;F<F9F77(F:F8F<F7F9F;
7(F:F8F<F7F;F97(F:F8F<F9F7F;7(F:F8F<F9F;F77(F:F8F<F;F7F97(F:F8F<F;F9F7
7(F:F9F7F8F;F<7(F:F9F7F8F<F;7(F:F9F7F;F8F<7(F:F9F7F;F<F87(F:F9F7F<F8F;
7(F:F9F7F<F;F87(F:F9F8F7F;F<7(F:F9F8F7F<F;7(F:F9F8F;F7F<7(F:F9F8F;F<F7
7(F:F9F8F<F7F;7(F:F9F8F<F;F77(F:F9F;F7F8F<7(F:F9F;F7F<F87(F:F9F;F8F7F<
7(F:F9F;F8F<F77(F:F9F;F<F7F87(F:F9F;F<F8F77(F:F9F<F7F8F;7(F:F9F<F7F;F8
7(F:F9F<F8F7F;7(F:F9F<F8F;F77(F:F9F<F;F7F87(F:F9F<F;F8F77(F:F;F7F8F9F<
7(F:F;F7F8F<F97(F:F;F7F9F8F<7(F:F;F7F9F<F87(F:F;F7F<F8F97(F:F;F7F<F9F8
7(F:F;F8F7F9F<7(F:F;F8F7F<F97(F:F;F8F9F7F<7(F:F;F8F9F<F77(F:F;F8F<F7F9
7(F:F;F8F<F9F77(F:F;F9F7F8F<7(F:F;F9F7F<F87(F:F;F9F8F7F<7(F:F;F9F8F<F7
7(F:F;F9F<F7F87(F:F;F9F<F8F77(F:F;F<F7F8F97(F:F;F<F7F9F87(F:F;F<F8F7F9
7(F:F;F<F8F9F77(F:F;F<F9F7F87(F:F;F<F9F8F77(F:F<F7F8F9F;7(F:F<F7F8F;F9
7(F:F<F7F9F8F;7(F:F<F7F9F;F87(F:F<F7F;F8F97(F:F<F7F;F9F87(F:F<F8F7F9F;
7(F:F<F8F7F;F97(F:F<F8F9F7F;7(F:F<F8F9F;F77(F:F<F8F;F7F97(F:F<F8F;F9F7
7(F:F<F9F7F8F;7(F:F<F9F7F;F87(F:F<F9F8F7F;7(F:F<F9F8F;F77(F:F<F9F;F7F8
7(F:F<F9F;F8F77(F:F<F;F7F8F97(F:F<F;F7F9F87(F:F<F;F8F7F97(F:F<F;F8F9F7
7(F:F<F;F9F7F87(F:F<F;F9F8F77(F;F7F8F9F:F<7(F;F7F8F9F<F:7(F;F7F8F:F9F<
7(F;F7F8F:F<F97(F;F7F8F<F9F:7(F;F7F8F<F:F97(F;F7F9F8F:F<7(F;F7F9F8F<F:
7(F;F7F9F:F8F<7(F;F7F9F:F<F87(F;F7F9F<F8F:7(F;F7F9F<F:F87(F;F7F:F8F9F<
7(F;F7F:F8F<F97(F;F7F:F9F8F<7(F;F7F:F9F<F87(F;F7F:F<F8F97(F;F7F:F<F9F8
7(F;F7F<F8F9F:7(F;F7F<F8F:F97(F;F7F<F9F8F:7(F;F7F<F9F:F87(F;F7F<F:F8F9
7(F;F7F<F:F9F87(F;F8F7F9F:F<7(F;F8F7F9F<F:7(F;F8F7F:F9F<7(F;F8F7F:F<F9
7(F;F8F7F<F9F:7(F;F8F7F<F:F97(F;F8F9F7F:F<7(F;F8F9F7F<F:7(F;F8F9F:F7F<
7(F;F8F9F:F<F77(F;F8F9F<F7F:7(F;F8F9F<F:F77(F;F8F:F7F9F<7(F;F8F:F7F<F9
7(F;F8F:F9F7F<7(F;F8F:F9F<F77(F;F8F:F<F7F97(F;F8F:F<F9F77(F;F8F<F7F9F:
7(F;F8F<F7F:F97(F;F8F<F9F7F:7(F;F8F<F9F:F77(F;F8F<F:F7F97(F;F8F<F:F9F7
7(F;F9F7F8F:F<7(F;F9F7F8F<F:7(F;F9F7F:F8F<7(F;F9F7F:F<F87(F;F9F7F<F8F:
7(F;F9F7F<F:F87(F;F9F8F7F:F<7(F;F9F8F7F<F:7(F;F9F8F:F7F<7(F;F9F8F:F<F7
7(F;F9F8F<F7F:7(F;F9F8F<F:F77(F;F9F:F7F8F<7(F;F9F:F7F<F87(F;F9F:F8F7F<
7(F;F9F:F8F<F77(F;F9F:F<F7F87(F;F9F:F<F8F77(F;F9F<F7F8F:7(F;F9F<F7F:F8
7(F;F9F<F8F7F:7(F;F9F<F8F:F77(F;F9F<F:F7F87(F;F9F<F:F8F77(F;F:F7F8F9F<
7(F;F:F7F8F<F97(F;F:F7F9F8F<7(F;F:F7F9F<F87(F;F:F7F<F8F97(F;F:F7F<F9F8
7(F;F:F8F7F9F<7(F;F:F8F7F<F97(F;F:F8F9F7F<7(F;F:F8F9F<F77(F;F:F8F<F7F9
7(F;F:F8F<F9F77(F;F:F9F7F8F<7(F;F:F9F7F<F87(F;F:F9F8F7F<7(F;F:F9F8F<F7
7(F;F:F9F<F7F87(F;F:F9F<F8F77(F;F:F<F7F8F97(F;F:F<F7F9F87(F;F:F<F8F7F9
7(F;F:F<F8F9F77(F;F:F<F9F7F87(F;F:F<F9F8F77(F;F<F7F8F9F:7(F;F<F7F8F:F9
7(F;F<F7F9F8F:7(F;F<F7F9F:F87(F;F<F7F:F8F97(F;F<F7F:F9F87(F;F<F8F7F9F:
7(F;F<F8F7F:F97(F;F<F8F9F7F:7(F;F<F8F9F:F77(F;F<F8F:F7F97(F;F<F8F:F9F7
7(F;F<F9F7F8F:7(F;F<F9F7F:F87(F;F<F9F8F7F:7(F;F<F9F8F:F77(F;F<F9F:F7F8
7(F;F<F9F:F8F77(F;F<F:F7F8F97(F;F<F:F7F9F87(F;F<F:F8F7F97(F;F<F:F8F9F7
7(F;F<F:F9F7F87(F;F<F:F9F8F77(F<F7F8F9F:F;7(F<F7F8F9F;F:7(F<F7F8F:F9F;
7(F<F7F8F:F;F97(F<F7F8F;F9F:7(F<F7F8F;F:F97(F<F7F9F8F:F;7(F<F7F9F8F;F:
7(F<F7F9F:F8F;7(F<F7F9F:F;F87(F<F7F9F;F8F:7(F<F7F9F;F:F87(F<F7F:F8F9F;
7(F<F7F:F8F;F97(F<F7F:F9F8F;7(F<F7F:F9F;F87(F<F7F:F;F8F97(F<F7F:F;F9F8
7(F<F7F;F8F9F:7(F<F7F;F8F:F97(F<F7F;F9F8F:7(F<F7F;F9F:F87(F<F7F;F:F8F9
7(F<F7F;F:F9F87(F<F8F7F9F:F;7(F<F8F7F9F;F:7(F<F8F7F:F9F;7(F<F8F7F:F;F9
7(F<F8F7F;F9F:7(F<F8F7F;F:F97(F<F8F9F7F:F;7(F<F8F9F7F;F:7(F<F8F9F:F7F;
7(F<F8F9F:F;F77(F<F8F9F;F7F:7(F<F8F9F;F:F77(F<F8F:F7F9F;7(F<F8F:F7F;F9
7(F<F8F:F9F7F;7(F<F8F:F9F;F77(F<F8F:F;F7F97(F<F8F:F;F9F77(F<F8F;F7F9F:
7(F<F8F;F7F:F97(F<F8F;F9F7F:7(F<F8F;F9F:F77(F<F8F;F:F7F97(F<F8F;F:F9F7
7(F<F9F7F8F:F;7(F<F9F7F8F;F:7(F<F9F7F:F8F;7(F<F9F7F:F;F87(F<F9F7F;F8F:
7(F<F9F7F;F:F87(F<F9F8F7F:F;7(F<F9F8F7F;F:7(F<F9F8F:F7F;7(F<F9F8F:F;F7
7(F<F9F8F;F7F:7(F<F9F8F;F:F77(F<F9F:F7F8F;7(F<F9F:F7F;F87(F<F9F:F8F7F;
7(F<F9F:F8F;F77(F<F9F:F;F7F87(F<F9F:F;F8F77(F<F9F;F7F8F:7(F<F9F;F7F:F8
7(F<F9F;F8F7F:7(F<F9F;F8F:F77(F<F9F;F:F7F87(F<F9F;F:F8F77(F<F:F7F8F9F;
7(F<F:F7F8F;F97(F<F:F7F9F8F;7(F<F:F7F9F;F87(F<F:F7F;F8F97(F<F:F7F;F9F8
7(F<F:F8F7F9F;7(F<F:F8F7F;F97(F<F:F8F9F7F;7(F<F:F8F9F;F77(F<F:F8F;F7F9
7(F<F:F8F;F9F77(F<F:F9F7F8F;7(F<F:F9F7F;F87(F<F:F9F8F7F;7(F<F:F9F8F;F7
7(F<F:F9F;F7F87(F<F:F9F;F8F77(F<F:F;F7F8F97(F<F:F;F7F9F87(F<F:F;F8F7F9
7(F<F:F;F8F9F77(F<F:F;F9F7F87(F<F:F;F9F8F77(F<F;F7F8F9F:7(F<F;F7F8F:F9
7(F<F;F7F9F8F:7(F<F;F7F9F:F87(F<F;F7F:F8F97(F<F;F7F:F9F87(F<F;F8F7F9F:
7(F<F;F8F7F:F97(F<F;F8F9F7F:7(F<F;F8F9F:F77(F<F;F8F:F7F97(F<F;F8F:F9F7
7(F<F;F9F7F8F:7(F<F;F9F7F:F87(F<F;F9F8F7F:7(F<F;F9F8F:F77(F<F;F9F:F7F8
7(F<F;F9F:F8F77(F<F;F:F7F8F97(F<F;F:F7F9F87(F<F;F:F8F7F97(F<F;F:F8F9F7
7(F<F;F:F9F7F87(F<F;F:F9F8F7I*PermIndexGF(" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 27 "#lina
lg[iszero](GD11.GD12);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 27 "#
linalg[iszero](GD10.GD11);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "
> " 0 "" {MPLTEXT 1 0 17 "OurSymmetryGroup " }{MPLTEXT 1 0 11 ":= proc
 ()\n" }{MPLTEXT 1 0 18 "local G, a, b, c;\n" }{MPLTEXT 1 0 7 "G:=[]:
\n" }{MPLTEXT 1 0 20 "for a in [+1,-1] do\n" }{MPLTEXT 1 0 21 " for b \+
in [+1,-1] do\n" }{MPLTEXT 1 0 22 "  for c in [+1,-1] do\n" }{MPLTEXT 
1 0 19 "   if a*b*c=1 then\n" }{MPLTEXT 1 0 30 "    G:=[op(G),[[1,2,3]
,a,b,c]," }{MPLTEXT 1 0 16 "[[2,3,1],a,b,c]," }{MPLTEXT 1 0 17 "[[3,1,
2],a,b,c]]:" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 8 "   else\n" }
{MPLTEXT 1 0 30 "    G:=[op(G),[[3,2,1],a,b,c]," }{MPLTEXT 1 0 33 "[[2
,1,3],a,b,c],[[1,3,2],a,b,c]]:" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 11 
"   end if;\n" }{MPLTEXT 1 0 6 "  od:\n" }{MPLTEXT 1 0 5 " od:\n" }
{MPLTEXT 1 0 3 "od:" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 3 "G;\n" }
{MPLTEXT 1 0 9 "end proc:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
22 "G:=OurSymmetryGroup();" }}{PARA 11 "" 1 "" {XPPMATH 20 "7:7&7%\"\"
\"\"\"#\"\"$F%F%F%7&7%F&F'F%F%F%F%7&7%F'F%F&F%F%F%7&7%F'F&F%F%F%!\"\"7
&7%F&F%F'F%F%F.7&7%F%F'F&F%F%F.7&F-F%F.F%7&F0F%F.F%7&F2F%F.F%7&F$F%F.F
.7&F)F%F.F.7&F+F%F.F.7&F-F.F%F%7&F0F.F%F%7&F2F.F%F%7&F$F.F%F.7&F)F.F%F
.7&F+F.F%F.7&F$F.F.F%7&F)F.F.F%7&F+F.F.F%7&F-F.F.F.7&F0F.F.F.7&F2F.F.F
." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> 
" 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "
ListLength := proc(L)\n" }{MPLTEXT 1 0 11 "local i,l:\n" }{MPLTEXT 1 
0 6 "i:=0:\n" }{MPLTEXT 1 0 14 "for l in L do\n" }{MPLTEXT 1 0 9 " i:=
i+1:\n" }{MPLTEXT 1 0 4 "od:\n" }{MPLTEXT 1 0 3 "i;\n" }{MPLTEXT 1 0 
9 "end proc:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 24 "PermMult := proc(P1,P2)\n" }{MPLTEXT 1 0 17 "local P,
i,k,len:\n" }{MPLTEXT 1 0 28 "P:=P1;\nlen:=ListLength(P2):\n" }
{MPLTEXT 1 0 23 "for i from 1 to len do\n" }{MPLTEXT 1 0 18 " P[i]:=P1
[P2[i]]:\n" }{MPLTEXT 1 0 4 "od:\n" }{MPLTEXT 1 0 3 "P;\n" }{MPLTEXT 
1 0 9 "end proc:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 38 "PermMul
t([2,1,3,4,5,6],[1,3,2,4,5,6]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "7(\"
\"#\"\"$\"\"\"\"\"%\"\"&\"\"'" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 
0 38 "PermMult([6,3,4,1,5,2],[4,2,3,1,5,6]);" }{MPLTEXT 1 0 0 "" }}
{PARA 11 "" 1 "" {XPPMATH 20 "7(\"\"\"\"\"$\"\"%\"\"'\"\"&\"\"#" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 23 "InversePerm := proc(P)\n" }{MPLTEXT 1 0 16 "local i,
p,InvP:\n" }{MPLTEXT 1 0 9 "InvP:=P:\n" }{MPLTEXT 1 0 6 "i:=1:\n" }
{MPLTEXT 1 0 15 "for p in P do:\n" }{MPLTEXT 1 0 14 "  InvP[p]:=i:\n" 
}{MPLTEXT 1 0 10 "  i:=i+1:\n" }{MPLTEXT 1 0 4 "od:\n" }{MPLTEXT 1 0 
6 "InvP:\n" }{MPLTEXT 1 0 9 "end proc:" }{MPLTEXT 1 0 0 "" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 36 "PermMult(InversePerm([3,2,1,5,4,6])
," }{MPLTEXT 1 0 13 "[3,2,1,5,4,6]" }{MPLTEXT 1 0 2 ");" }}{PARA 11 ""
 1 "" {XPPMATH 20 "7(\"\"\"\"\"#\"\"$\"\"%\"\"&\"\"'" }}}{EXCHG {PARA 
0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 
0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0
 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "
> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 
"" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> 
" 0 "" {MPLTEXT 1 0 37 "GroupElementToPermutation := proc(g)\n" }
{MPLTEXT 1 0 9 "local P;\n" }{MPLTEXT 1 0 18 "P:=[1,2,3,4,5,6];\n" }
{MPLTEXT 1 0 16 "if g[2]=-1 then\n" }{MPLTEXT 1 0 10 " P[1]:=4:\n" }
{MPLTEXT 1 0 10 " P[4]:=1:\n" }{MPLTEXT 1 0 8 "end if:\n" }{MPLTEXT 1 
0 16 "if g[3]=-1 then\n" }{MPLTEXT 1 0 10 " P[2]:=5:\n" }{MPLTEXT 1 0 
10 " P[5]:=2:\n" }{MPLTEXT 1 0 8 "end if:\n" }{MPLTEXT 1 0 16 "if g[4]
=-1 then\n" }{MPLTEXT 1 0 10 " P[3]:=6:\n" }{MPLTEXT 1 0 10 " P[6]:=3:
\n" }{MPLTEXT 1 0 8 "end if:\n" }{MPLTEXT 1 0 65 "P:=PermMult([g[1,1],
g[1,2],g[1,3],g[1,1]+3,g[1,2]+3,g[1,3]+3],P):" }{MPLTEXT 1 0 48 "\nP; \+
#Wir muessen von links multiplizieren!!!!!!\n" }{MPLTEXT 1 0 9 "end pr
oc:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "
> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
38 "GroupToPermutationSubgroup := proc(G)\n" }{MPLTEXT 1 0 21 "local i
, g, GAsPerm;\n" }{MPLTEXT 1 0 13 "GAsPerm:=[]:\n" }{MPLTEXT 1 0 14 "f
or g in G do\n" }{MPLTEXT 1 0 55 "  GAsPerm:=[op(GAsPerm),GroupElement
ToPermutation(g)]:\n" }{MPLTEXT 1 0 4 "od:\n" }{MPLTEXT 1 0 9 "GAsPerm
;\n" }{MPLTEXT 1 0 9 "end proc:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 
1 0 39 "GAsPerm:=GroupToPermutationSubgroup(G);" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "7:7(\"\"\"\"\"#\"\"$\"\"%\"\"&\"\"'7(F%F&F$F(F)F'7(F&F$F%
F)F'F(7(F&F%F'F)F(F$7(F%F$F)F(F'F&7(F$F&F(F'F)F%7(F&F(F$F)F%F'7(F%F'F&
F(F$F)7(F$F)F%F'F&F(7(F$F(F)F'F%F&7(F%F)F'F(F&F$7(F&F'F(F)F$F%7(F)F%F$
F&F(F'7(F(F$F&F%F'F)7(F'F&F%F$F)F(7(F'F%F)F$F(F&7(F(F&F'F%F)F$7(F)F$F(
F&F'F%7(F'F(F&F$F%F)7(F(F)F$F%F&F'7(F)F'F%F&F$F(7(F)F(F'F&F%F$7(F(F'F)
F%F$F&7(F'F)F(F$F&F%" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "map
(x->x+1,[1,2,3]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "7%\"\"#\"\"$\"\"%" 
}}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0
 "" {MPLTEXT 1 0 89 "# Jetzt bestimmen wir die Ueberlagerung der beide
n zu ueberpruefenden Koketten Z1 und Z4:" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 14 "ZBasis:
=Z3red;" }}{PARA 11 "" 1 "" {XPPMATH 20 "7f_l\"\"!F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#\"\"\"F#F#!\"\"F
#F#F#F#F#F#F#F#F%F#F#F#F#F#F$F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F$F%F$F#F%F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F%F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F%F#F%F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F$F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F$" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 96 "#ZBasis:
=map(x->1,ZBasis); #Das hier nur zum Test, ob unsere Representaten wir
klich welche sind." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "ZUL:=
Array(1..330*24):" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 23 "for i from 1
 to 330 do\n" }{MPLTEXT 1 0 22 " if ZBasis[i]<>0 then\n" }{MPLTEXT 1 
0 29 "  P:=perm[((i-1) mod 30)+1]:\n" }{MPLTEXT 1 0 10 "  off:=i-(" }
{MPLTEXT 1 0 19 "((i-1) mod 30)+1);\n" }{MPLTEXT 1 0 23 "  for gp in G
AsPerm do\n" }{MPLTEXT 1 0 37 "   up:=PermMult(gp,P): #Von links!!!\n"
 }{MPLTEXT 1 0 42 "   ZUL[off*24+GpermIndex[up]]:=ZBasis[i]:\n" }
{MPLTEXT 1 0 6 "  od: " }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 9 " end if:
\n" }{MPLTEXT 1 0 4 "od:\n" }{MPLTEXT 1 0 5 "ZUL;\n" }{MPLTEXT 1 0 28 
"convert(ZUL,'list')[1..100];" }}{PARA 11 "" 1 "" {XPPMATH 20 "-I&Arra
yG%*protectedG6#/I$%idG6\"\"*OitN\"" }}{PARA 11 "" 1 "" {XPPMATH 20 "7
`q\"\"!F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F
#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "GpermIndex[Gperm[25]];" }}
{PARA 11 "" 1 "" {XPPMATH 20 "\"#D" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 6 "Gperm:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 27 "c
onvert(GpermIndex,'list');" }}{PARA 11 "" 1 "" {XPPMATH 20 "7\\hm\"$u
\"\"$R#\"$s#\"$)o\"$p'\"#5\"#k\"$L#\"$a'\"$/(\"$f\"\"$p\"\"$]$\"$p&\"#
L\"$N$\"$z%\"$1&\"$_&\"#b\"$)=\"$t$\"$o%\"$\"R\"$#e\"#&*\"$#R\"$j&\"$
\"e\"#Q\"#c\"$O$\"$![\"$*\\\"#@\"$q&\"$-\"\"$M#\"$H\"\"$o'\"$D\"\"$r#
\"$*o\"$'G\"$P'\"$(o\"\"\"\"$)G\"#^\"$=#\"$`'\"$(=\"$(>\"$4&\"$q'\"$M$
\"$,&\"$`&\"$D'\"$^$\"$o&\"$+\"\"$<#\"$!R\"$_%\"$`\"\"$u$\"$&Q\"$G\"\"
$T#\"$v$\"$$Q\"$m%\"$.(\"$2#\"#<\"#?\"$N\"\"$5#\"$_$\"$Q%\"$[\"\"$<%\"
$V%\"$k%\"$a&\"$V\"\"$e\"\"$_'\"#\")\"$s\"\"$(G\"$1#\"$r'\"#*)\"$J#\"$
;&\"$c'\"$w\"\"$u#\"$'o\"$r$\"$F'\"$2(\"$q$\"$*Q\"$Z%\"$%e\"#x\"$[$\"$
n&\"$L$\"$]%\"$-&\"$]&\"$!G\"$*G\"$\\&\"$>(\"$Z$\"$\\%\"$[%\"#R\"#]\"$
l%\"$C&\"$Q&\"$H#\"$l$\"$d'\"$0#\"#\\\"$b'\"$s'\"#l\"$>\"\"$&o\"$$>\"$
!H\"$?(\"#A\"$I\"\"$)Q\"$&e\"$p#\"$s$\"$4%\"$1(\"$K$\"$^&\"#(*\"$\\$\"
$m&\"#d\"$\">\"$t#\"$+&\"$l&\"$v\"\"$4#\"$J$\"$/&\"$K#\"$:&\"$0(\"#E\"
$(Q\"$A%\"$'e\"$X\"\"$.#\"$%o\"$/#\"$b#\"$[#\"$l#\"$x$\"$z$\"$[&\"$C'
\"$=(\"$s%\"$&R\"$y&\"#;\"#()\"$y\"\"$$H\"#a\"$&>\"$E'\"#J\"$j#\"$,$\"
$=&\"$$e\"$3(\"$5\"\"$<&\"$,'\"$Z'\"#K\"#O\"$k#\"$T\"\"#')\"$x\"\"$H$
\"$e$\"$'R\"$x&\"$v'\"$r%\"$w%\"$B'\"$<(\"#B\"$Z\"\"$d$\"$u&\"$'f\"$#o
\"#y\"$I$\"$u%\"$b$\"$g$\"$r&\"$t%\"#8\"$?%\"$d&\"$(f\"$$o\"$z\"\"$G#
\"$>&\"$\\'\"$4(\"#I\"$8#\"$i#\"$0$\"$X%\"$u'\"$9#\"#_\"$o$\"$['\"$5(
\"#&)\"$\"H\"$Z&\"$>%\"$B\"\"$6&\"#o\"$f$\"$(R\"$w&\"$c$\"$B&\"$v&\"$;
(\"$m#\"$P%\"$6(\"$$R\"$!e\"$n#\"$/$\"$\"[\"$*f\"$Y&\"#H\"$h#\"#W\"#[
\"$F#\"$.$\"$!=\"$&H\"$?&\"#9\"$B%\"#**\"$a$\"$%R\"$z'\"#$)\"$'H\"#V\"
$M\"\"#`\"$y'\"$E$\"$y%\"$F&\"$X&\"$:(\"$)f\"$Y%\"$7#\"$m$\"$p%\"$]'\"
#M\"#%*\"$P\"\"$G$\"$2&\"$8(\"$`$\"$v%\"$+'\"#=\"#T\"#X\"$E#\"$q%\"$^'
\"#G\"$g#\"$w'\"#:\"#e\"$A\"\"$'>\"$\"o\"#t\"#)*\"$\"=\"$%H\"$x%\"$#=
\"$3#\"##)\"$s&\"$!o\"#F\"$f#\"$z&\"$x'\"$D#\"$7(\"#))\"$*>\"$F$\"$k$
\"$3&\"$W&\"$G'\"$9(\"$_\"\"$&=\"#D\"$-#\"$e#\"$2$\"$*H\"$\"\\\"$R&\"#
C\"$@\"\"$P$\"#r\"$&[\"$;\"\"$a\"\"$.&\"$g'\"$2\"\"$&f\"$(p\"$l\"\"$A'
\"$Y\"\"$m\"\"$o#\"$A$\"$R\"\"$c&\"$%f\"$'p\"$;#\"$V#\"$+%\"$h'\"$-'\"
$Y'\"$&G\"#s\"$W#\"$+$\"$#\\\"$c\"\"$3$\"$\"Q\"##*\"$g\"\"$q\"\"$*R\"$
#Q\"$%Q\"$D&\"#m\"$:#\"$t'\"$#>\"$$G\"$b&\"$8'\"$@$\"$E%\"$n%\"$%[\"$/
'\"$W'\"$k\"\"\"*\"$S#\"$Q$\"$&p\"$6#\"$S&\"$$[\"$.'\"$X'\"$i'\"$@#\"$
$\\\"$t&\"$@'\"$3\"\"$%G\"$:\"\"$)R\"$U#\"$4$\"$i$\"$E&\"#%)\"$(H\"$y$
\"$a%\"$*[\"$T&\"\")\"$%>\"$O#\"$R$\"$W%\"#N\"$S\"\"$S%\"$b\"\"#n\"$#H
\"$d%\"$*p\"$j\"\"$?'\"$,#\"$([\"$9\"\"$e'\"$8\"\"$)[\"#p\"#z\"$,%\"$>
'\"$#G\"$1$\"$9&\"$-%\"$0'\"$V'\"$Q\"\"$R%\"$#f\"\"(\"#P\"$q#\"$S$\"$9
%\"$f&\"$D$\"$U&\"$!>\"$\"G\"$;%\"$B$\"$O\"\"$'Q\"$c%\"$p$\"$T%\"$i\"
\"#'*\"$(\\\"$@&\"$Z#\"$L\"\"$1'\"$U'\"$7\"\"$7%\"$6\"\"#q\"#!*\"$h\"
\"$c#\"$!\\\"$='\"$I'\"$n$\"$$f\"$f'\"$t\"\"$)H\"$C$\"$V&\"\"'\"$*=\"$
T$\"$6%\"$:%\"$e&\"$)p\"$9$\"$4'\"$R'\"$?\"\"$U\"\"$+#\"\"$\"#$*\"$.\"
\"$W$\"$)\\\"$I#\"$/%\"$n'\"$4\"\"#7\"$;$\"$N&\"$:'\"$L'\"$!Q\"$H%\"$!
p\"#u\"$@%\"$a#\"$:$\"$j%\"$;'\"$K'\"$J&\"$.%\"$L%\"$>#\"\"%\"$F\"\"$V
$\"$8%\"$g&\"$Y#\"$D%\"$\"f\"$+(\"$\\#\"$*e\"#g\"$w$\"$^%\"$f%\"$K&\"$
3'\"$S'\"$-(\"$0&\"$?#\"$i&\"$A&\"$0%\"$J%\"$z#\"$<$\"$M&\"$L&\"$<'\"$
J'\"$K%\"$C\"\"$8$\"\"&\"$,\"\"$W\"\"$'=\"$U$\"$I%\"$h&\"$\"p\"$r\"\"$
h$\"$j$\"$E\"\"$g%\"$2'\"$T'\"$,(\"$!f\"$m'\"$0\"\"$Y$\"#w\"$n\"\"$'
\\\"$H'\"#S\"#f\"#h\"$7$\"$6'\"#Y\"$=\"\"#U\"$=$\"$P&\"$N'\"#!)\"$P#\"
$w#\"$#p\"$1%\"$O%\"$l'\"$h%\"$C%\"$B#\"$N%\"$e%\"$'[\"$)e\"$k'\"$d\"
\"$%=\"$Q#\"$v#\"$5%\"$7&\"$$p\"#\"*\"$b%\"#Z\"$<\"\"$\\\"\"$X#\"$`#\"
$6$\"$U%\"$G&\"$7'\"$O'\"$=%\"$&\\\"$1\"\"#v\"$)>\"$/\"\"$K\"\"$$=\"$y
#\"$F%\"$k&\"$C#\"$^#\"$d#\"$O&\"$(e\"#i\"$]\"\"$#[\"$I&\"$5'\"$Q'\"#>
\"$x#\"$5&\"$>$\"$A#\"$8&\"$2%\"$3%\"$M%\"$`%\"$j'\"$o\"\"$-$\"$?$\"\"
#\"$X$\"$%p\"#j\"$J\"\"$5$\"$i%\"$H&\"$_#\"$^\"\"$N#\"$]#\"$G%\"#6\"$%
\\\"$9'\"$M'" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 44 "ZellenIndexMalElementVonGperm := proc(i,gp)\n" }
{MPLTEXT 1 0 14 "local off, P;\n" }{MPLTEXT 1 0 32 "P:=Gperm[((i-1) mo
d (30*24))+1]:" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 8 "off:=i-(" }
{MPLTEXT 1 0 24 "((i-1) mod (30*24))+1):\n" }{MPLTEXT 1 0 33 "P:=PermM
ult(gp,P): #von links!!!\n" }{MPLTEXT 1 0 18 "off+GpermIndex[P];" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 9 "end proc:" }}}{EXCHG {PARA 0 "> "
 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 47 "Z
ellenIndexMalElementVonGperm(9,[2,3,1,5,6,4]);" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "\"$h\"" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 24 "KanZellenIndices12:=[]:\n" }{MPLTEXT 1 0 24 "KanZell
enIndices11:=[]:\n" }{MPLTEXT 1 0 24 "KanZellenIndices10:=[]:\n" }
{MPLTEXT 1 0 22 "for k from 1 to 30 do\n" }{MPLTEXT 1 0 1 " " }
{MPLTEXT 1 0 21 "for j from 1 to 1 do\n" }{MPLTEXT 1 0 62 "  KanZellen
Indices12 := [op(KanZellenIndices12),(j-1)*30*24 + " }{MPLTEXT 1 0 22 
"GpermIndex[perm[k]]]:\n" }{MPLTEXT 1 0 5 " od:\n" }{MPLTEXT 1 0 1 " "
 }{MPLTEXT 1 0 21 "for j from 1 to 5 do\n" }{MPLTEXT 1 0 62 "  KanZell
enIndices11 := [op(KanZellenIndices11),(j-1)*30*24 + " }{MPLTEXT 1 0 
22 "GpermIndex[perm[k]]]:\n" }{MPLTEXT 1 0 5 " od:\n" }{MPLTEXT 1 0 1 
" " }{MPLTEXT 1 0 22 "for j from 1 to 11 do\n" }{MPLTEXT 1 0 62 "  Kan
ZellenIndices10 := [op(KanZellenIndices10),(j-1)*30*24 + " }{MPLTEXT 
1 0 22 "GpermIndex[perm[k]]]:\n" }{MPLTEXT 1 0 5 " od:\n" }{MPLTEXT 1 
0 3 "od:" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 19 "KanZellenIndices12," }
{MPLTEXT 1 0 19 "KanZellenIndices11," }{MPLTEXT 1 0 18 "KanZellenIndic
es10" }{MPLTEXT 1 0 1 ";" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6%7@\"\"\"\"\"#\"\"$\"\"%\"\"&\"\"'\"\"(\"\")\"\"*\"#8\"#
9\"#:\"#D\"#E\"#F\"#G\"#H\"#I\"#J\"#K\"#N\"#V\"#W\"#X\"#\\\"#]\"#^\"#b
\"#c\"#f7btF$\"$@(\"%T9\"%h@\"%\")GF%\"$A(\"%U9\"%i@\"%#)GF&\"$B(\"%V9
\"%j@\"%$)GF'\"$C(\"%W9\"%k@\"%%)GF(\"$D(\"%X9\"%l@\"%&)GF)\"$E(\"%Y9
\"%m@\"%')GF*\"$F(\"%Z9\"%n@\"%()GF+\"$G(\"%[9\"%o@\"%))GF,\"$H(\"%\\9
\"%p@\"%*)GF-\"$L(\"%`9\"%t@\"%$*GF.\"$M(\"%a9\"%u@\"%%*GF/\"$N(\"%b9
\"%v@\"%&*GF0\"$X(\"%l9\"%&=#\"%0HF1\"$Y(\"%m9\"%'=#\"%1HF2\"$Z(\"%n9
\"%(=#\"%2HF3\"$[(\"%o9\"%)=#\"%3HF4\"$\\(\"%p9\"%*=#\"%4HF5\"$](\"%q9
\"%!>#\"%5HF6\"$^(\"%r9\"%\">#\"%6HF7\"$_(\"%s9\"%#>#\"%7HF8\"$b(\"%v9
\"%&>#\"%:HF9\"$j(\"%$[\"\"%.A\"%BHF:\"$k(\"%%[\"\"%/A\"%CHF;\"$l(\"%&
[\"\"%0A\"%DHF<\"$p(\"%*[\"\"%4A\"%HHF=\"$q(\"%!\\\"\"%5A\"%IHF>\"$r(
\"%\"\\\"\"%6A\"%JHF?\"$v(\"%&\\\"\"%:A\"%NHF@\"$w(\"%'\\\"\"%;A\"%OHF
A\"$z(\"%*\\\"\"%>A\"%RH7f_lF$FCFDFEFF\"%,O\"%@V\"%T]\"%hd\"%\"['\"%,s
F%FGFHFIFJ\"%-O\"%AV\"%U]\"%id\"%#['\"%-sF&FKFLFMFN\"%.O\"%BV\"%V]\"%j
d\"%$['\"%.sF'FOFPFQFR\"%/O\"%CV\"%W]\"%kd\"%%['\"%/sF(FSFTFUFV\"%0O\"
%DV\"%X]\"%ld\"%&['\"%0sF)FWFXFYFZ\"%1O\"%EV\"%Y]\"%md\"%'['\"%1sF*Fen
FfnFgnFhn\"%2O\"%FV\"%Z]\"%nd\"%(['\"%2sF+FinFjnF[oF\\o\"%3O\"%GV\"%[]
\"%od\"%)['\"%3sF,F]oF^oF_oF`o\"%4O\"%HV\"%\\]\"%pd\"%*['\"%4sF-FaoFbo
FcoFdo\"%8O\"%LV\"%`]\"%td\"%$\\'\"%8sF.FeoFfoFgoFho\"%9O\"%MV\"%a]\"%
ud\"%%\\'\"%9sF/FioFjoF[pF\\p\"%:O\"%NV\"%b]\"%vd\"%&\\'\"%:sF0F]pF^pF
_pF`p\"%DO\"%XV\"%l]\"%&y&\"%0l\"%DsF1FapFbpFcpFdp\"%EO\"%YV\"%m]\"%'y
&\"%1l\"%EsF2FepFfpFgpFhp\"%FO\"%ZV\"%n]\"%(y&\"%2l\"%FsF3FipFjpF[qF
\\q\"%GO\"%[V\"%o]\"%)y&\"%3l\"%GsF4F]qF^qF_qF`q\"%HO\"%\\V\"%p]\"%*y&
\"%4l\"%HsF5FaqFbqFcqFdq\"%IO\"%]V\"%q]\"%!z&\"%5l\"%IsF6FeqFfqFgqFhq
\"%JO\"%^V\"%r]\"%\"z&\"%6l\"%JsF7FiqFjqF[rF\\r\"%KO\"%_V\"%s]\"%#z&\"
%7l\"%KsF8F]rF^rF_rF`r\"%NO\"%bV\"%v]\"%&z&\"%:l\"%NsF9FarFbrFcrFdr\"%
VO\"%jV\"%$3&\"%.e\"%Bl\"%VsF:FerFfrFgrFhr\"%WO\"%kV\"%%3&\"%/e\"%Cl\"
%WsF;FirFjrF[sF\\s\"%XO\"%lV\"%&3&\"%0e\"%Dl\"%XsF<F]sF^sF_sF`s\"%\\O
\"%pV\"%*3&\"%4e\"%Hl\"%\\sF=FasFbsFcsFds\"%]O\"%qV\"%!4&\"%5e\"%Il\"%
]sF>FesFfsFgsFhs\"%^O\"%rV\"%\"4&\"%6e\"%Jl\"%^sF?FisFjsF[tF\\t\"%bO\"
%vV\"%&4&\"%:e\"%Nl\"%bsF@F]tF^tF_tF`t\"%cO\"%wV\"%'4&\"%;e\"%Ol\"%csF
AFatFbtFctFdt\"%fO\"%zV\"%*4&\"%>e\"%Rl\"%fs" }}}{EXCHG {PARA 0 "> " 0
 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}
}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 203 "# Jetzt waehlen wir fuer je
den 11-Zellen-Orbit ein \"+\" - \"-\" - Matching der gegebenen 10-Zell
en, die im Rand der den Orbit repraesentierenden 11-Zelle liegen und s
etzen dieses Matching aequivariant fort." }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "zzmatch
ing:=[]:\n" }{MPLTEXT 1 0 16 "occ11Cells:=\{\}:\n" }{MPLTEXT 1 0 12 "f
or kr11 in " }{MPLTEXT 1 0 21 "KanZellenIndices11 do" }{MPLTEXT 1 0 1 
"\n" }{MPLTEXT 1 0 19 "  pos10Zellen:=[]:\n" }{MPLTEXT 1 0 19 "  neg10
Zellen:=[]:\n" }{MPLTEXT 1 0 59 "  for i from 1 to 330*24 do #Schleife
 ueber alle 10-Zellen\n" }{MPLTEXT 1 0 33 "   if GD11[i,kr11]*ZUL[i]>0
 then\n" }{MPLTEXT 1 0 38 "    pos10Zellen:=[op(pos10Zellen),i]:\n" }
{MPLTEXT 1 0 35 "   elif GD11[i,kr11]*ZUL[i]<0 then\n" }{MPLTEXT 1 0 
38 "    neg10Zellen:=[op(neg10Zellen),i]:\n" }{MPLTEXT 1 0 11 "   end \+
if:\n" }{MPLTEXT 1 0 6 "  od:\n" }{MPLTEXT 1 0 40 "  #print(kr11,pos10
Zellen,neg10Zellen);\n" }{MPLTEXT 1 0 26 "  if pos10Zellen<>[] then\n"
 }{MPLTEXT 1 0 40 "   occ11Cells:=occ11Cells union \{kr11\}:\n" }
{MPLTEXT 1 0 28 "   while pos10Zellen<>[] do\n" }{MPLTEXT 1 0 25 "    \+
for gp in GAsPerm do\n" }{MPLTEXT 1 0 74 "     zzmatching:=[op(zzmatch
ing),[ZellenIndexMalElementVonGperm(kr11,gp),#" }{MPLTEXT 1 0 18 "pos1
0Zellen[1],neg" }{MPLTEXT 1 0 13 "10Zellen[1],\n" }{MPLTEXT 1 0 34 "  \+
                                " }{MPLTEXT 1 0 103 "[ZellenIndexMalEl
ementVonGperm(pos10Zellen[1],gp),ZellenIndexMalElementVonGperm(neg10Ze
llen[1],gp)]]]:\n" }{MPLTEXT 1 0 8 "    od:\n" }{MPLTEXT 1 0 17 "    p
os10Zellen:=" }{MPLTEXT 1 0 28 "subsop(1=NULL,pos10Zellen):\n" }
{MPLTEXT 1 0 44 "    neg10Zellen:=subsop(1=NULL,neg10Zellen):" }
{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 7 "   od:\n" }{MPLTEXT 1 0 10 "  end
 if;\n" }{MPLTEXT 1 0 4 "od:\n" }{MPLTEXT 1 0 29 "zzmatching[1..49],oc
c11Cells;" }}{PARA 11 "" 1 "" {XPPMATH 20 "6$7S7$\"\"*7$\"$H(\"$r(7$\"
$h\"7$\"$\"))\"$B*7$\"$h#7$\"$\")*\"%f57$\"$)G7$\"%35\"%o57$\"$O\"7$\"
$c)\"$;*7$\"#O7$\"$c(\"$!y7$\"$L$7$\"%`5\"%x57$\"$\"=7$\"$,*\"$D*7$\"$
6\"7$\"$J)\"$*y7$\"#')7$\"$1)\"$#y7$\"$Q#7$\"$e*\"$M*7$\"$3$7$\"%G5\"%
q57$\"$N'7$\"%b8\"%z87$\"$$[7$\"%.7\"%F77$\"$8%7$\"%L6\"%\"4\"7$\"$)Q7
$\"%36\"%%3\"7$\"$S&7$\"%g7\"%O77$\"$5'7$\"%I8\"%s87$\"$L%7$\"%`6\"%$4
\"7$\"$&e7$\"%08\"%X77$\"$&o7$\"%09\"%\"Q\"7$\"$7(7$\"%K9\"%!R\"7$\"$g
&7$\"%!G\"\"%Q77$\"$g%7$\"%!=\"\"%-67$F'7$\"$\"*)F'7$F,7$\"%V5F,7$F17$
\"$D)F17$F67$\"$[*F67$F;7$\"$'zF;7$F@7$\"%95F@7$FE7$\"%68FE7$FJ7$\"%f6
FJ7$FO7$\"%&R\"FO7$FT7$\"%u7FT7$FY7$\"%E9FY7$Fhn7$\"%!>\"Fhn7$F]o7$\"$
())F]o7$Fbo7$\"$N(Fbo7$Fgo7$\"$r*Fgo7$F\\p7$\"$])F\\p7$Fap7$\"%-5Fap7$
Ffp7$\"$m(Ffp7$F[q7$\"%87F[q7$F`q7$\"%l8F`q7$Feq7$\"%Z6Feq7$Fjq7$\"%q7
Fjq7$F_r7$\"%=6F_r7$Fdr7$\"%O8Fdr7$\"#:7$FboF_u<>F%F_w\"#N\"#X\"#]\"#^
\"#b\"#fF'F_u\"$b(\"$l(F(\"$z(\"%*[\"\"%!\\\"\"%\"\\\"\"%&\\\"\"%'\\\"
\"%*\\\"\"%4A\"%5A\"%6A\"%:A\"%;A\"%>A\"%JH\"%RH" }}}{EXCHG {PARA 0 ">
 " 0 "" {MPLTEXT 1 0 12 "#zzmatching;" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 50 "ZellenI
ndexMalElementVonGperm(1083,[1,2,3,4,5,6]);" }{MPLTEXT 1 0 0 "" }}
{PARA 11 "" 1 "" {XPPMATH 20 "\"%$3\"" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 22 "#for gp in GAsPerm do\n" }{MPLTEXT 1 0 12 "#  print(g
p," }{MPLTEXT 1 0 76 "[ZellenIndexMalElementVonGperm(771,gp),ZellenInd
exMalElementVonGperm(64,gp)]" }{MPLTEXT 1 0 3 ");\n" }{MPLTEXT 1 0 4 "
#od:" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 439 "# Fu
er jede 12-Zelle des Repraesentantensystems schauen wir uns jetzt an, \+
wie sich die Kanten im Matching, die im Rand der 12-Zelle liegen, zu S
chlaufen zusammensetzen. Jede solche Schlaufe bildet genau den Rand ei
ner 2-Zelle in unserem gesuchten Poincaredualen 2-Zykel zur gegebenen \+
10-Kokette ZUL. Alle anderen Schlaufen (die zu den anderen 12-Zellen g
ehoeren) bekommen wir durch Rechtstranslation mittels G, aber die brau
chen wir nicht." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "SchlaufenRep:=[]:\n" }
{MPLTEXT 1 0 50 "#Gehe durch alle 12-Zellen-Orbits-Repraesentaten:\n" 
}{MPLTEXT 1 0 22 "for k from 1 to 30 do\n" }{MPLTEXT 1 0 90 " kr12:=Gp
ermIndex[perm[k]]: #kr12 ist der Index des kan. Repr. des k-ten 12-Zel
len-Orbits\n" }{MPLTEXT 1 0 87 " #Ermitlle alle Kanten des Matchings z
zmatching, die im Rand der 12-Zelle kr12 liegen:\n" }{MPLTEXT 1 0 19 "
 KantenImRand:=[]:\n" }{MPLTEXT 1 0 30 " for KanteEx in zzmatching do
\n" }{MPLTEXT 1 0 20 "   e11:=KanteEx[1]:\n" }{MPLTEXT 1 0 28 "   if G
D12[e11,kr12]>0 then\n" }{MPLTEXT 1 0 177 "     KantenImRand:=[op(Kant
enImRand),KanteEx[2]]: #muessen hier Kanten unbedingt mit ihrer Vielfa
chheit aufnehmen! (Es kann ja passieren, dass sie in mehreren 11-Zelle
n liegen)\n" }{MPLTEXT 1 0 8 "   elif " }{MPLTEXT 1 0 21 "GD12[e11,kr1
2]<0 then" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 114 "     KantenImRand:=
[op(KantenImRand),[KanteEx[2,2],KanteEx[2,1]]]: #muessen ausserdem auf
 die Orientierung achten\n" }{MPLTEXT 1 0 11 "   end if:\n" }{MPLTEXT 
1 0 5 " od:\n" }{MPLTEXT 1 0 25 "# print(k,KantenImRand);\n" }{MPLTEXT
 1 0 1 "\n" }{MPLTEXT 1 0 43 " #Zerlege diese KantenImRand in Schlaufe
n:\n" }{MPLTEXT 1 0 27 " while KantenImRand<>[] do\n" }{MPLTEXT 1 0 2 
"  " }{MPLTEXT 1 0 61 " KantenDerSchlaufe:=[[KantenImRand[1,1],KantenI
mRand[1,2]]]:\n" }{MPLTEXT 1 0 17 "   KantenImRand:=" }{MPLTEXT 1 0 
14 "subsop(1=NULL," }{MPLTEXT 1 0 15 "KantenImRand):\n" }{MPLTEXT 1 0 
41 "   AnfangsPunkt:=KantenDerSchlaufe[1,1]:\n" }{MPLTEXT 1 0 37 "   E
ndPunkt:=KantenDerSchlaufe[1,2]:\n" }{MPLTEXT 1 0 35 "   while Anfangs
Punkt<>EndPunkt do\n" }{MPLTEXT 1 0 20 "     NeueKante:=[]:\n" }
{MPLTEXT 1 0 32 "     ZuLoeschendeKanteIndex:=0:\n" }{MPLTEXT 1 0 53 "
     for Kante in KantenImRand while NeueKante=[] do\n" }{MPLTEXT 1 0 
33 "       ZuLoeschendeKante:=Kante:\n" }{MPLTEXT 1 0 57 "       ZuLoe
schendeKanteIndex:=ZuLoeschendeKanteIndex+1:\n" }{MPLTEXT 1 0 33 "    \+
   if Kante[1]=EndPunkt then\n" }{MPLTEXT 1 0 27 "         NeueKante:=
Kante:\n" }{MPLTEXT 1 0 170 "     #  elif Kante[2]=EndPunkt then      \+
     #das hier wird auskommentiert, da wir Orientierungswechsel nicht \+
haben moechten (koennte ggf. bei Verzweigungen auftreten).\n" }
{MPLTEXT 1 0 42 "     #    NeueKante:=[Kante[2],Kante[1]]:\n" }
{MPLTEXT 1 0 15 "       end if:\n" }{MPLTEXT 1 0 9 "     od:\n" }
{MPLTEXT 1 0 26 "     if NeueKante=[] then\n" }{MPLTEXT 1 0 130 "     \+
  print(\"Fehler: Kantenzug schliesst sich nicht! Kanten der Kantenzug
s soweit:\", KantenDerSchlaufe, AnfangsPunkt, EndPunkt):\n" }{MPLTEXT 
1 0 14 "       break:\n" }{MPLTEXT 1 0 13 "     end if:\n" }{MPLTEXT 
1 0 110 "     KantenImRand:=subsop(ZuLoeschendeKanteIndex=NULL,KantenI
mRand): #KantenImRand minus \{ZuLoeschendeKante\}:\n" }{MPLTEXT 1 0 
59 "     KantenDerSchlaufe:=[op(KantenDerSchlaufe),NeueKante]:\n" }
{MPLTEXT 1 0 28 "     EndPunkt:=NeueKante[2]:" }{MPLTEXT 1 0 1 "\n" }
{MPLTEXT 1 0 7 "   od:\n" }{MPLTEXT 1 0 60 "#   print(\"Aktuell gefund
ene Schlaufe:\",KantenDerSchlaufe);\n" }{MPLTEXT 1 0 62 "   SchlaufenR
ep:=[op(SchlaufenRep),[kr12,KantenDerSchlaufe]]:\n" }{MPLTEXT 1 0 5 " \+
od:\n" }{MPLTEXT 1 0 4 "od:\n" }{MPLTEXT 1 0 13 "SchlaufenRep;" }}
{PARA 11 "" 1 "" {XPPMATH 20 "777$\"\"*7&7$\"$r(\"$H(7$F(\"$\"*)7$F*\"
%267$F,F'7$\"#:7&7$\"$N(\"%.77$F3\"%F77$F5\"$b)7$F7F27$\"#N7&7$\"%L6\"
$r*7$F>\"$b(7$F@\"%\"4\"7$FBF=7$\"#X7$7$\"$\")*\"%f57$FIFH7$FE7$7$\"$D
)\"%H87$FOFN7$\"#\\7$7$\"%@A\"%6A7$FVFU7$FR7$7$\"%<A\"%:A7$FfnFen7$\"#
]7&7$\"%qV\"%tV7$F]o\"%&o%7$F_o\"%#o%7$FaoF\\o7$Fin7&7$\"%8A\"%5A7$Fgo
\"%>A7$Fio\"%HA7$F[pFfo7$\"#^7&7$F*F(7$F(F'7$F'F,7$F,F*7$F^p7&Fgn7$Fen
FUFT7$FVFfn7$F^p7(7$\"%^O\"%\"4&7$F\\q\"%hs7$F^q\"%tR7$F`q\"%/a7$Fbq\"
%_s7$FdqF[q7$\"#b7&FW7$FUFenFZ7$FfnFV7$Fgq7&7$\"%*o%\"%(o%7$F_r\"%vV7$
Far\"%xV7$FcrF^r7$\"#c7$7$FgoFfoFeo7$Ffr7$7$F[pFioFjo7$\"#f7$7$F@F>F?7
$F]s7$FC7$F=FB7$F]s7%7$\"%6a\"%rR7$Fgs\"%fs7$FisFfs7$F]s7&7$FfoF[pF[s7
$FioFgoFhr7$F]s7%7$\"%pO\"%qs7$Fct\"%+^7$FetFbt" }}}{EXCHG {PARA 0 "> 
" 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 ""
 }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 
0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }
}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 415 "# Auf den Kanten legen wi
r jetzt G-Schnitte in den jeweils beiden G-Buendeln fest. Fuer W_\{2++
+\} brauchen wir lediglich die Werte auf den Punkten zw. den Kanten, d
a wir die Kanten dann einfach als kuerzeste Verbindungsstrecke nehmen.
 Auf den Punkten waehlen wir aequivarianterweise jeweils einen der dre
i Einheitsvektoren e1, e2, e3, wobei wir jedoch hier diese einfachheit
shalber mit deren Indices 1, 2, 3 angeben:" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 44 "Punkt
e:=\{\}: #Die Punkte zwischen den Kanten\n" }{MPLTEXT 1 0 27 "for Kant
e in zzmatching do\n" }{MPLTEXT 1 0 48 "  Punkte:=Punkte union \{Kante
[2,1],Kante[2,2]\}:\n" }{MPLTEXT 1 0 4 "od:\n" }{MPLTEXT 1 0 7 "Punkte
;" }}{PARA 11 "" 1 "" {XPPMATH 20 "<d^l\"$H(\"$I(\"$N(\"$b(\"$c(\"$m(
\"$r(\"$!y\"$#y\"$*y\"$'z\"$0)\"$1)\"$D)\"$J)\"$K)\"$])\"$b)\"$c)\"$\"
))\"$#))\"$())\"$\"*)\"$,*\"$-*\"$;*\"$B*\"$D*\"$M*\"$[*\"$d*\"$e*\"$r
*\"$\")*\"$#)*\"%-5\"%25\"%35\"%95\"%F5\"%G5\"%V5\"%`5\"%a5\"%f5\"%o5
\"%q5\"%x5\"%%3\"\"%\"4\"\"%$4\"\"%-6\"%26\"%36\"%=6\"%L6\"%M6\"%Z6\"%
`6\"%a6\"%f6\"%z6\"%!=\"\"%!>\"\"%.7\"%/7\"%87\"%F7\"%O7\"%Q7\"%X7\"%f
7\"%g7\"%q7\"%u7\"%z7\"%!G\"\"%08\"%18\"%68\"%H8\"%I8\"%O8\"%b8\"%c8\"
%l8\"%s8\"%z8\"%\"Q\"\"%!R\"\"%&R\"\"%09\"%19\"%E9\"%J9\"%K9\"%5A\"%6A
\"%7A\"%8A\"%:A\"%<A\"%>A\"%?A\"%@A\"%AA\"%CA\"%EA\"%GA\"%HA\"%IA\"%JA
\"%aB\"%bB\"%cB\"%dB\"%fB\"%hB\"%jB\"%kB\"%lB\"%mB\"%oB\"%qB\"%sB\"%tB
\"%uB\"%vB\"%)\\#\"%*\\#\"%+D\"%,D\"%.D\"%0D\"%2D\"%3D\"%4D\"%5D\"%7D
\"%9D\"%;D\"%<D\"%=D\"%>D\"%AD\"%BD\"%CD\"%DD\"%FD\"%HD\"%JD\"%KD\"%LD
\"%MD\"%OD\"%QD\"%SD\"%TD\"%UD\"%VD\"%mE\"%nE\"%oE\"%pE\"%rE\"%tE\"%vE
\"%wE\"%xE\"%yE\"%!o#\"%#o#\"%%o#\"%&o#\"%'o#\"%(o#\"%5G\"%6G\"%7G\"%8
G\"%:G\"%<G\"%>G\"%?G\"%@G\"%AG\"%CG\"%EG\"%GG\"%HG\"%IG\"%JG\"%^O\"%g
O\"%iO\"%pO\"%'z$\"%.Q\"%0Q\"%9Q\"%RR\"%[R\"%]R\"%dR\"%kR\"%rR\"%tR\"%
#)R\"%2T\"%;T\"%=T\"%DT\"%_U\"%fU\"%hU\"%qU\"%qV\"%tV\"%vV\"%xV\"%%Q%
\"%'Q%\"%)Q%\"%\"R%\"%9X\"%<X\"%>X\"%@X\"%GX\"%IX\"%KX\"%NX\"%eY\"%hY
\"%jY\"%lY\"%sY\"%uY\"%wY\"%zY\"%#o%\"%&o%\"%(o%\"%*o%\"%'p%\"%)p%\"%+
Z\"%.Z\"%E[\"%H[\"%J[\"%L[\"%S[\"%U[\"%W[\"%Z[\"%q\\\"%t\\\"%v\\\"%x
\\\"%%)\\\"%')\\\"%))\\\"%\"*\\\"%\"4&\"%+^\"%-^\"%4^\"%O_\"%V_\"%X_\"
%a_\"%z`\"%)Q&\"%!R&\"%(R&\"%/a\"%6a\"%8a\"%Aa\"%Zb\"%cb\"%eb\"%lb\"%#
p&\"%*p&\"%,d\"%5d\"%_s\"%fs\"%hs\"%qs\"%&R(\"%/u\"%1u\"%8u\"%Sv\"%Zv
\"%\\v\"%ev\"%jv\"%sv\"%uv\"%\"e(\"%3x\"%:x\"%<x\"%Ex\"%^y\"%gy\"%iy\"
%py" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "
> " 0 "" {MPLTEXT 1 0 1 "E" }{MPLTEXT 1 0 37 "lementVonGMalVektorInED \+
:= proc(g,e)\n" }{MPLTEXT 1 0 70 "local tmp,res,i:\nres:=e:\nfor i fro
m 1 to 2 do\n if abs(res[i])<>1 then\n" }{MPLTEXT 1 0 23 "  res[i]:=g[
2]*res[i]:\n" }{MPLTEXT 1 0 9 " end if:\n" }{MPLTEXT 1 0 24 " if abs(r
es[i])<>2 then\n" }{MPLTEXT 1 0 23 "  res[i]:=g[3]*res[i]:\n" }
{MPLTEXT 1 0 9 " end if:\n" }{MPLTEXT 1 0 24 " if abs(res[i])<>3 then
\n" }{MPLTEXT 1 0 23 "  res[i]:=g[4]*res[i]:\n" }{MPLTEXT 1 0 50 " end
 if:\n res[i]:=signum(res[i])*g[1,abs(res[i])]:" }{MPLTEXT 1 0 10 "\no
d:\nres;\n" }{MPLTEXT 1 0 9 "end proc:" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 37 "ElementVonGMalVektorInED(G[3],[1,2]);" }}{PARA 11 "" 
1 "" {XPPMATH 20 "7$\"\"$\"\"\"" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 
1 0 5 "G[3];" }}{PARA 11 "" 1 "" {XPPMATH 20 "7&7%\"\"$\"\"\"\"\"#F%F%
F%" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 ">
 " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> "
 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" 
}}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0
 "" {MPLTEXT 1 0 12 "W:=table():\n" }{MPLTEXT 1 0 19 "EDpoints:=table(
):\n" }{MPLTEXT 1 0 34 "for kz10 in KanZellenIndices10 do\n" }{MPLTEXT
 1 0 30 " if eval(kz10 in Punkte) then\n" }{MPLTEXT 1 0 18 "  for g in
 G do  \n" }{MPLTEXT 1 0 37 "   gp:=GroupElementToPermutation(g):\n" }
{MPLTEXT 1 0 5 "   W[" }{MPLTEXT 1 0 48 "ZellenIndexMalElementVonGperm
(kz10,gp)]:=g[1,1]:" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 47 "   #W[Zell
enIndexMalElementVonGperm(kz10,gp)]:=" }{MPLTEXT 1 0 9 "Search(1," }
{MPLTEXT 1 0 69 "g[1]): #das ist g[1]^(-1) (1), wir multiplizieren hie
r ja von rechts!" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 53 "   EDpoints[Z
ellenIndexMalElementVonGperm(kz10,gp)]:=" }{MPLTEXT 1 0 14 "ElementVon
GMal" }{MPLTEXT 1 0 21 "VektorInED(g,[1,2]):\n" }{MPLTEXT 1 0 6 "  od:
\n" }{MPLTEXT 1 0 9 " end if:\n" }{MPLTEXT 1 0 12 "od:\nentries(" }
{MPLTEXT 1 0 1 "W" }{MPLTEXT 1 0 9 ",'nolist'" }{MPLTEXT 1 0 19 ");\ni
ndices(EDpoints" }{MPLTEXT 1 0 9 ",'nolist'" }{MPLTEXT 1 0 19 ");\nent
ries(EDpoints" }{MPLTEXT 1 0 9 ",'nolist'" }{MPLTEXT 1 0 2 ");" }}
{PARA 11 "" 1 "" {XPPMATH 20 "6d^l\"\"$\"\"\"F#\"\"#F#F$F$F#F#F%F$F$F$
F%F$F#F$F#F#F#F#F$F$F$F%F$F#F$F$F%F%F%F%F$F#F%F#F$F%F$F$F%F%F$F#F%F$F$
F$F#F#F%F$F$F#F$F#F%F$F$F$F#F%F$F$F$F$F%F$F#F#F#F#F#F$F#F$F#F#F#F#F#F$
F#F#F#F%F#F#F%F$F#F#F%F#F$F#F#F%F$F#F%F$F$F%F$F%F#F%F#F#F#F#F$F#F#F#F#
F#F#F#F#F#F#F#F#F#F#F#F#F#F$F#F#F#F$F#F#F#F#F%F#F%F$F$F%F$F#F$F#F$F#F#
F#F%F%F#F#F#F$F#F$F#F$F#F%F$F$F%F#F$F%F$F#F$F%F$F#F#F$F%F$F#F$F%F$F#F#
F%F$F#F#F$F%F%F#F$F%F%F%F$F$F#F%F$F#F%F#F$F#F%F%F%F%F$F%F%F%F%F%F%F%F$
F$F%F$F%F$F$F#F%F$F%F%F$F$F%F%F%F%F%F%F%F$F%F%F%F$F$F%F$F%F%F#F$F%F$F%
F$F%F%F$F%F%F%F%F$F$F%F$F$F%F$F%F$F$F$F%F$F$F%F%F%F%F$F#F%F$F%F%F$F%F#
F$F#F%F$F%F%F%F%F%F%F%F$F%F#F#F%F#F%F$" }}{PARA 11 "" 1 "" {XPPMATH 20
 "6d^l\"%l8\"%>A\"%^y\"$b)\"%F5\"%<A\"%AA\"%qU\"%G5\"$])\"%@A\"%?A\"%4
^\"%2T\"%5A\"%95\"%6A\"%fU\"%s8\"%35\"%hU\"%8A\"%7A\"%:A\"$c)\"%!>\"\"
%-5\"%QD\"$K)\"%oB\"%;T\"%qB\"%87\"%OD\"%py\"%=T\"%25\"%VD\"%tB\"%UD\"
%-^\"%sB\"%vB\"%TD\"%V5\"%uB\"%+^\"%SD\"%HA\"%b8\"%a5\"%/7\"%GA\"%HD\"
%gy\"%JA\"%`5\"%DT\"%JD\"%\"4&\"%IA\"%iy\"%3x\"%LD\"%CA\"%KD\"%EA\"%.7
\"%MD\"%c8\"%\"*\\\"$\")*\"%<D\"%19\"%`6\"%;D\"%a6\"%>D\"%09\"%\\v\"$#
)*\"%=D\"%kR\"%))\\\"%')\\\"%7D\"$\"*)\"%q5\"%Zv\"%Ex\"%f6\"%9D\"%%)
\\\"%a_\"%o5\"%FD\"%dR\"%Sv\"$())\"%DD\"%f5\"%:x\"%CD\"%AD\"%<x\"%BD\"
$\"))\"%x\\\"$#))\"%&R\"\"%q\\\"%)\\#\"%*\\#\"%%3\"\"%#p&\"%v\\\"%,D\"
%!R\"\"%]R\"%+D\"%.D\"%t\\\"%lY\"%[R\"%x5\"%hY\"$r*\"%2D\"%jY\"%z8\"%R
R\"%!=\"\"%0D\"%_U\"%\"Q\"\"%z6\"%5D\"%eY\"%4D\"%3D\"%z7\"%:G\"%!G\"\"
%pO\"$m(\"%Zb\"%36\"%<G\"%_s\"%8G\"$r(\"%>G\"%z`\"%7G\"%@X\"%u7\"%5G\"
%@G\"%6G\"%*o%\"%?G\"%26\"%AG\"%.Z\"%EG\"%8u\"%=6\"$c(\"%9X\"%CG\"%hs
\"%q7\"%+Z\"%JG\"%)p%\"%<X\"$#y\"%IG\"%!R&\"%fs\"%>X\"%'p%\"%HG\"$b(\"
$M*\"$!y\"%)Q&\"%GG\"%U[\"$*y\"%(R&\"%sY\"%tV\"$e*\"%f7\"%uY\"%vV\"$d*
\"%lb\"%S[\"%\"4\"\"%^O\"%*p&\"%Z[\"%$4\"\"%,d\"%1u\"%wY\"%qV\"%zY\"%g
7\"%W[\"%/u\"%68\"%#o%\"$[*\"%L[\"%cb\"%KX\"%NX\"%eb\"%&R(\"$'z\"%/a\"
%18\"%(o%\"%GX\"%-6\"%iO\"%5d\"%IX\"%&o%\"%9Q\"%08\"%xV\"%gO\"%(o#\"%'
o#\"%O7\"%'z$\"%&o#\"%X_\"%Q7\"%rR\"%%o#\"%#o#\"$,*\"%tR\"%Z6\"%V_\"%A
a\"%!o#\"$-*\"%ev\"$N(\"%J[\"%%Q%\"%xE\"%jv\"%wE\"%O_\"%'Q%\"%X7\"%0Q
\"%H[\"%yE\"%6a\"$I(\"%E[\"$0)\"%8a\"%.Q\"%#)R\"%tE\"%)Q%\"%\"R%\"$1)
\"%vE\"$H(\"$J)\"%mE\"%nE\"%mB\"$;*\"%sv\"%J9\"%lB\"%uv\"%kB\"%rE\"%M6
\"%jB\"%E9\"%L6\"%O8\"%pE\"$D)\"%hB\"%oE\"%dB\"%F7\"%cB\"%fB\"$D*\"%\"
e(\"$B*\"%H8\"%I8\"%aB\"%K9\"%bB\"%qs" }}{PARA 11 "" 1 "" {XPPMATH 20 
"6d^l7$\"\"$!\"#7$\"\"\"\"\"#F#7$F(F$7$!\"$F%7$!\"\"F+7$F'F%7$F$F(7$F$
F-7$F%F-F,F,7$F-F$7$F(F-F&F0F&F#7$F+F'F*7$F+F-F2F2F&F17$F'F$F*F6F.7$F%
F'7$F%F$7$F(F+F37$F-F%F47$F(F'7$F$F'F6F1F6F.F1F97$F-F(7$F+F(F9F,F=F2F#
F07$F%F+F2F:F5F.F>F?7$F'F+F&F.F/F?F:F,F:F.F3F6F5F/F<F>F/F:F>F6F0F5F*F>
F0F=F4F/F*F7F0F<F;F:F0F5F9F*F@F>F>F)F=F<F3F=F@F8F@F)F5F7F5F#F<F<F=F4F#
F>F/F0F>F<F4F*F*F>F>F<F<F<F#F<F6F*F4F5F=F0F<F*F*F8F#F;F2F,F3F=F5F2F4F&
F#F<F4F7F;F#F5F#F:F5F@F/F6F/F1F=F,F)F5F,F8F=F/F6F1F.F/F0F&F)F:F4F&F9F,
F*F4F;F2F>F*F2F9F3F0F&F1F?F8F@F&F#F;F:F5F9F>F&F0F8F?F7F?F@F9F8F8F1F9F;
F)F.F=F;F@F7F6F.F/F9F=F9F?F,F,F;F;F8F1F?F7F;F@F?F;F7F:F@F)F6F8F9F0F&F3
F,F8F@F8F1F.F?F7F?F;F@F2F3F,F:F)F6F8F2F.F.F3F&F2F3F3F9F1F:F4F7F6F7F3F:
F)F/F@F4F?F2F7F?F1F3F1F)F7F=F)F#F4F)F/F)F." }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 5 "G[3];"
 }}{PARA 11 "" 1 "" {XPPMATH 20 "7&7%\"\"$\"\"\"\"\"#F%F%F%" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 248 "# Mit der Konstruktion von \+
W aka W_\{2+++\} auf dem 1-Skelett vom Poincaredualen von ZBasis bzw. \+
ZUL sind wir fertig. Bei ED muessen wir noch genau festlegen, wie wir \+
den jetzt auf den Punkten gegebenen Schnitt aequivariant auf die Kante
n fortsetzen:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 97 "reverseList := proc(L)\nloca
l e, Res:\nRes:=[]:\nfor e in L do\n Res:=[e,op(Res)]:\nod:\nRes;\nend
 proc:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 27 "reverseList([2,6,
3,5,4,2]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "7(\"\"#\"\"%\"\"&\"\"$\"\"
'F#" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 1 "E" }{MPLTEXT 1 0 98 "
lementVonGMalWegInED := proc(g,Weg)\nlocal gWeg,Punkt:\ngWeg:=[]:\nfor
 Punkt in Weg do\n# print(Punkt," }{MPLTEXT 1 0 33 "ElementVonGMalVekt
orInED(g,Punkt)" }{MPLTEXT 1 0 20 ");\n gWeg:=[op(gWeg)," }{MPLTEXT 1 
0 1 "E" }{MPLTEXT 1 0 32 "lementVonGMalVektorInED(g,Punkt)" }{MPLTEXT 
1 0 2 "]:" }{MPLTEXT 1 0 20 "\nod:\ngWeg;\nend proc:" }{MPLTEXT 1 0 0 
"" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "ElementVonGMalWegInED(
" }{MPLTEXT 1 0 5 "G[3]," }{MPLTEXT 1 0 44 "[[-2, 1], [3, 1], [2, 1], \+
[2, 3], [2, -1]]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "7'7$!\"\"\"\"$7$\"
\"#F%7$\"\"\"F%7$F)F'7$F)!\"$" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 
0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0
 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
64 "ED:=table():\nfor KanteEx in zzmatching do\n if member(KanteEx[1],
" }{MPLTEXT 1 0 69 "KanZellenIndices11) then\n  Kante:=KanteEx[2]:\n  \+
if not member(Kante,[" }{MPLTEXT 1 0 10 "indices(ED" }{MPLTEXT 1 0 9 "
,'nolist'" }{MPLTEXT 1 0 150 ")]) then\n   #Muessen jetzt ED[Kante] un
d andersherum ED[[Kante[2],Kante[1]]] definieren (und ED auf den beide
n ganzen Orbits aequivariant fortsetzen)." }{MPLTEXT 1 0 291 "\n   #De
r Eintrag wird eine Liste mit den Deformationen von EDpoints[Kante[1]]
 nach EDpoints[Kante[2]].\n   \n   Weg:=[EDpoints[Kante[1]]]: #Weg spe
ichert die Punkte \n   #Erst den ersten Vektor in die richtige Stellun
g bringen:\n   if Weg[1][1]<>EDpoints[Kante[2]][1] then\n    freieAchs
e:=6-abs(" }{MPLTEXT 1 0 34 "Weg[1][1])-abs(Weg[1][2]):\n    if " }
{MPLTEXT 1 0 38 "Weg[1][1]=-EDpoints[Kante[2]][1] then\n" }{MPLTEXT 1 
0 44 "     Weg:=[op(Weg),[freieAchse,Weg[1][2]]]:\n" }{MPLTEXT 1 0 53 
"     Weg:=[op(Weg),[-Weg[1][1],Weg[1][2]]]:\n    elif " }{MPLTEXT 1 
0 2 "ED" }{MPLTEXT 1 0 6 "points" }{MPLTEXT 1 0 13 "[Kante[2]][1]" }
{MPLTEXT 1 0 22 "=freieAchse then\n     " }{MPLTEXT 1 0 48 "Weg:=[op(W
eg),[freieAchse,Weg[1][2]]]:\n    elif " }{MPLTEXT 1 0 2 "ED" }
{MPLTEXT 1 0 6 "points" }{MPLTEXT 1 0 13 "[Kante[2]][1]" }{MPLTEXT 1 
0 18 "=-freieAchse then\n" }{MPLTEXT 1 0 44 "     Weg:=[op(Weg),[-frei
eAchse,Weg[1][2]]]:" }{MPLTEXT 1 0 10 "\n    else\n" }{MPLTEXT 1 0 5 "
     " }{MPLTEXT 1 0 39 "Weg:=[op(Weg),[freieAchse,Weg[1][2]]]:\n" }
{MPLTEXT 1 0 44 "     Weg:=[op(Weg),[freieAchse,Weg[1][1]]]:\n" }
{MPLTEXT 1 0 22 "     Weg:=[op(Weg),[ED" }{MPLTEXT 1 0 6 "points" }
{MPLTEXT 1 0 26 "[Kante[2]][1],Weg[1][1]]]:" }{MPLTEXT 1 0 87 "\n    e
nd if:\n   end if:\n\n   #Dann den zweiten Vektor in die richtige Stel
lung bringen:\n" }{MPLTEXT 1 0 60 "   freieAchse:=6-abs(Weg[-1][1])-ab
s(Weg[-1][2]):\n   if abs(" }{MPLTEXT 1 0 2 "ED" }{MPLTEXT 1 0 6 "poin
ts" }{MPLTEXT 1 0 31 "[Kante[2]][2])=freieAchse then\n" }{MPLTEXT 1 0 
18 "    Weg:=[op(Weg)," }{MPLTEXT 1 0 2 "ED" }{MPLTEXT 1 0 6 "points" 
}{MPLTEXT 1 0 10 "[Kante[2]]" }{MPLTEXT 1 0 3 "]:\n" }{MPLTEXT 1 0 8 "
   elif " }{MPLTEXT 1 0 2 "ED" }{MPLTEXT 1 0 6 "points" }{MPLTEXT 1 0 
15 "[Kante[2]][2]=-" }{MPLTEXT 1 0 16 "Weg[-1][2] then\n" }{MPLTEXT 1 
0 4 "    " }{MPLTEXT 1 0 41 "Weg:=[op(Weg),[Weg[-1][1],freieAchse]]: \+
\n" }{MPLTEXT 1 0 4 "    " }{MPLTEXT 1 0 14 "Weg:=[op(Weg)," }{MPLTEXT
 1 0 2 "ED" }{MPLTEXT 1 0 6 "points" }{MPLTEXT 1 0 10 "[Kante[2]]" }
{MPLTEXT 1 0 14 "]: \n   end if:" }{MPLTEXT 1 0 23 "\n\n   #Jetzt den \+
Weg in " }{MPLTEXT 1 0 118 "ED[Kante] und andersherum in ED[[Kante[2],
Kante[1]]] speichern, und aequivariant fortsetzen:\n   for g in G do\n
    gp:=" }{MPLTEXT 1 0 29 "GroupElementToPermutation(g):" }{MPLTEXT 
1 0 13 "\n    gKante:=" }{MPLTEXT 1 0 1 "[" }{MPLTEXT 1 0 73 "ZellenIn
dexMalElementVonGperm(Kante[1],gp),ZellenIndexMalElementVonGperm(" }
{MPLTEXT 1 0 25 "Kante[2],gp)]:\n    gWeg:=" }{MPLTEXT 1 0 1 "E" }
{MPLTEXT 1 0 28 "lementVonGMalWegInED(g,Weg):" }{MPLTEXT 1 0 1 "\n" }
{MPLTEXT 1 0 28 "    ED[gKante]:=gWeg:\n    ED" }{MPLTEXT 1 0 51 "[[gK
ante[2],gKante[1]]]:=reverseList(gWeg);\n   od:\n" }{MPLTEXT 1 0 23 "
\n  end if:\n end if:\nod:" }{MPLTEXT 1 0 2 "\n[" }{MPLTEXT 1 0 10 "in
dices(ED" }{MPLTEXT 1 0 21 ",'nolist')][1..10];\n[" }{MPLTEXT 1 0 29 "
entries(ED,'nolist')][1..10];" }{MPLTEXT 1 0 2 "  " }}{PARA 11 "" 1 ""
 {XPPMATH 20 "7,7$\"$H(\"$r(7$\"%09\"%\"Q\"7$\"%!G\"\"%Q77$\"%V5\"%f77
$\"%6a\"%rR7$\"%%o#\"%(o#7$\"%9X\"%<X7$\"%6A\"%:A7$\"%_s\"%^O7$\"%/u\"
%;T" }}{PARA 11 "" 1 "" {XPPMATH 20 "7,7#7$\"\"\"\"\"#7#7$!\"$!\"\"7#7
$F&F%7'7$F)F&7$F*F&7$F*F)7$F&F)7$F&F*7#7$F%F)7&7$!\"#F)7$F7F%7$\"\"$F%
F,7&7$F&F:7$F*F:7$F7F:7$F7F*F#7&F=F/7$F:F&F$7$F8F>" }}}{EXCHG {PARA 0 
"> " 0 "" {MPLTEXT 1 0 18 "ED[[4260, 5699]]; " }{MPLTEXT 1 0 35 "#funk
tioniert nur fuer ZBasis=Z1red" }}{PARA 11 "" 1 "" {XPPMATH 20 "&I#EDG
6\"6#7$\"%gU\"%*p&" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "ED[[5
699, 4260]]; " }{MPLTEXT 1 0 35 "#funktioniert nur fuer ZBasis=Z1red" 
}{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "&I#EDG6\"6#7$\"%*p&
\"%gU" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 53 "ED[[3996, 3780]]; \+
#funktioniert nur fuer ZBasis=Z4red" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 
1 "" {XPPMATH 20 "&I#EDG6\"6#7$\"%'*R\"%!y$" }}}{EXCHG {PARA 0 "> " 0 
"" {MPLTEXT 1 0 51 "EDpoints[3996]; #funktioniert nur fuer ZBasis=Z4re
d" }}{PARA 11 "" 1 "" {XPPMATH 20 "&I)EDpointsG6\"6#\"%'*R" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "(-1)*[2,3,4];" }}{PARA 11 ""
 1 "" {XPPMATH 20 "7%!\"#!\"$!\"%" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 7 "tmp:=2;" }}{PARA 11 "" 1 "" {XPPMATH 20 "\"\"#" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "member(tmp,[1,2,3]);" }}
{PARA 11 "" 1 "" {XPPMATH 20 "I%trueG%*protectedG" }}}{EXCHG {PARA 0 "
> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 
"" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 109 "# Wollen jetzt von Sc
hlaufen in der SO(3)=V_\{3,2\} wissen, welches Element sie in pi_1(SO(
3)) repraesentieren." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}
}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 0 "" }}}{SECT 1 {PARA 3 "" 0 "" {TEXT 212 29 "Homology \+
and Cohomology mod 2" }}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "igcd
exMod2 :=proc(" }{MPLTEXT 1 35 1 "a" }{MPLTEXT 1 0 2 ", " }{MPLTEXT 1 
35 1 "b" }{MPLTEXT 1 0 2 ", " }{MPLTEXT 1 35 1 "s" }{MPLTEXT 1 0 2 ", 
" }{MPLTEXT 1 35 1 "t" }{MPLTEXT 1 0 1 ")" }{MPLTEXT 1 0 164 "\nlocal \+
res:\nif a mod 2=0 and b mod 2=0 then\n res:=0:\n s:=0:\n t:=0:\nelse
\n res:=1:\n if a=1 then\n  s:=1:\n  t:=0:\n else\n  s:=0:\n  t:=1:\n \+
end if:\nend if:\nres;\nend proc: " }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 44 "PlusMod2 := proc(a,b)\n(a+b) mod 2;\nend proc:" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "MinusMod2 := proc(a,b)\n" }
{MPLTEXT 1 0 13 "(a-b) mod 2;\n" }{MPLTEXT 1 0 9 "end proc:" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "MultMod2 := proc(a,b)\n" }
{MPLTEXT 1 0 13 "(a*b) mod 2;\n" }{MPLTEXT 1 0 9 "end proc:" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 29 "EqualMod2 := proc(a,b)\neval
b(" }{MPLTEXT 1 0 16 "(a-b) mod 2=0);\n" }{MPLTEXT 1 0 9 "end proc:" }
}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 
"" {MPLTEXT 1 0 31 "HomologyMod2 := proc (D3, D2) \n" }{MPLTEXT 1 0 
86 "local i, j, k, ZZ, S2, U2, V2, n3, n2, n1, r, Z, B, S3, U3, V3, b,
 Znett, D3n, D2n; \n#" }{MPLTEXT 1 0 32 "with(LinearAlgebra[Generic]);
 \n#" }{MPLTEXT 1 0 22 "with(LinearAlgebra); \n" }{MPLTEXT 1 0 29 "wit
h(LinearAlgebra[Modular]);" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 18 "D3n
:=modp(D3,2); \n" }{MPLTEXT 1 0 18 "D2n:=modp(D2,2); \n" }{MPLTEXT 1 
0 62 "ZZ[`0`], ZZ[`1`], ZZ[`+`], ZZ[`-`], ZZ[`*`], ZZ[`=`] := 0, 1, " 
}{MPLTEXT 1 0 9 "`+` mod 2" }{MPLTEXT 1 0 35 ", MinusMod2, MultMod2, E
qualMod2; \n" }{MPLTEXT 1 0 13 "ZZ[Gcdex] := " }{MPLTEXT 1 0 10 "igcde
xMod2" }{MPLTEXT 1 0 3 "; \n" }{MPLTEXT 1 0 33 "ZZ[Quo], ZZ[Rem] := iq
uo, irem; \n" }{MPLTEXT 1 0 47 "ZZ[UnitPart], ZZ[EuclideanNorm] := sig
n, abs; \n" }{MPLTEXT 1 0 29 "n3 := ColumnDimension(D3n); \n" }
{MPLTEXT 1 0 26 "n2 := RowDimension(D3n); \n" }{MPLTEXT 1 0 36 "if n2 \+
<> ColumnDimension(D2n) then \n" }{MPLTEXT 1 0 79 "  printf(\"Error: #
rows of D3=%d <> #cols of D2=%d!\",n2,ColumnDimension(D2n)); \n" }
{MPLTEXT 1 0 9 "end if; \n" }{MPLTEXT 1 0 33 "n1 := RowDimension(D3n);
 \nif 0 < " }{MPLTEXT 1 0 1 " " }{MPLTEXT 1 0 23 "LinearAlgebra[Modula
r][" }{MPLTEXT 1 0 5 "Rank]" }{MPLTEXT 1 0 3 "(2," }{MPLTEXT 1 0 31 "L
inearAlgebra[Modular][Multiply" }{MPLTEXT 1 0 1 "]" }{MPLTEXT 1 0 20 "
(2,D2n, D3n)) then \n" }{MPLTEXT 1 0 29 "  printf(\"Error: D2.D3<>0\")
 \n" }{MPLTEXT 1 0 9 "end if; \n" }{MPLTEXT 1 0 14 "S2, U2, V2 := " }
{MPLTEXT 1 0 33 "LinearAlgebra[Generic][SmithForm]" }{MPLTEXT 1 0 4 "[
ZZ]" }{MPLTEXT 1 0 34 "(D2n, output = ['S', 'U', 'V']); \n" }{MPLTEXT 
1 0 5 "r := " }{MPLTEXT 1 0 23 "LinearAlgebra[Modular][" }{MPLTEXT 1 
0 14 "Rank](2,S2); \n" }{MPLTEXT 1 0 12 "k := n2-r; \n" }{MPLTEXT 1 0 
15 "if k = 0 then \n" }{MPLTEXT 1 0 34 "  printf(\"There are no cycles
!\") \n" }{MPLTEXT 1 0 9 "end if; \n" }{MPLTEXT 1 0 29 "Z := V2[1 .. -
1, -k .. -1]; \n" }{MPLTEXT 1 0 6 "B := (" }{MPLTEXT 1 0 32 "LinearAlg
ebra[Modular][Multiply]" }{MPLTEXT 1 0 3 "(2," }{MPLTEXT 1 0 23 "Linea
rAlgebra[Modular][" }{MPLTEXT 1 0 71 "Inverse](2,V2), D3n));\n#print(
\"Debug:\",B,k);\nB:=B[-k .. -1, 1 .. -1]; \n" }{MPLTEXT 1 0 15 "B:=mo
dp(B,2);\n#" }{MPLTEXT 1 0 21 "print(\"Debug:\",B,k);\n" }{MPLTEXT 1 
0 2 "\n\n" }{MPLTEXT 1 0 62 "ZZ[`0`], ZZ[`1`], ZZ[`+`], ZZ[`-`], ZZ[`*
`], ZZ[`=`] := 0, 1, " }{MPLTEXT 1 0 9 "`+` mod 2" }{MPLTEXT 1 0 35 ",
 MinusMod2, MultMod2, EqualMod2; \n" }{MPLTEXT 1 0 26 "ZZ[Gcdex] := ig
cdexMod2; \n" }{MPLTEXT 1 0 33 "ZZ[Quo], ZZ[Rem] := iquo, irem; \n" }
{MPLTEXT 1 0 47 "ZZ[UnitPart], ZZ[EuclideanNorm] := sign, abs; \n" }
{MPLTEXT 1 0 14 "S3, U3, V3 := " }{MPLTEXT 1 0 33 "LinearAlgebra[Gener
ic][SmithForm]" }{MPLTEXT 1 0 64 "[ZZ](B, output = ['S', 'U', 'V']); \+
\n#print(\"Debug: Geschafft!\");" }{MPLTEXT 1 0 10 "\n#return;\n" }
{MPLTEXT 1 0 10 "\nZnett := " }{MPLTEXT 1 0 32 "LinearAlgebra[Modular]
[Multiply]" }{MPLTEXT 1 0 6 "(2,Z, " }{MPLTEXT 1 0 31 "LinearAlgebra[M
odular][Inverse]" }{MPLTEXT 1 0 10 "(2,U3)); \n" }{MPLTEXT 1 0 21 "b :
= Array(1 .. k); \n" }{MPLTEXT 1 0 48 "for i from 1 to min(k, ColumnDi
mension(S3)) do \n" }{MPLTEXT 1 0 20 "  b[i] := S3[i, i] \n" }{MPLTEXT
 1 0 9 "end do; \n" }{MPLTEXT 1 0 58 "#while ArrayNumElems(b)>0 and (b
[1] = 1 or b[1] = -1) do \n" }{MPLTEXT 1 0 35 "#  b := b[2 .. ArrayNum
Elems(b)]; \n" }{MPLTEXT 1 0 32 "#  Znett := DeleteColumn(Z, 1) \n" }
{MPLTEXT 1 0 10 "#end do; \n" }{MPLTEXT 1 0 10 "b, Znett \n" }{MPLTEXT
 1 0 9 "end proc:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 48 "CohomologyMod2 := proc (D3, \+
D2)\nlocal D3n, D2n;\n" }{MPLTEXT 1 0 21 "with(LinearAlgebra);\n" }
{MPLTEXT 1 0 18 "D3n:=modp(D3,2); \n" }{MPLTEXT 1 0 18 "D2n:=modp(D2,2
); \n" }{MPLTEXT 1 0 13 "HomologyMod2(" }{MPLTEXT 1 0 23 "LinearAlgebr
a[Modular][" }{MPLTEXT 1 0 18 "Transpose](2,D2n)," }{MPLTEXT 1 0 23 "L
inearAlgebra[Modular][" }{MPLTEXT 1 0 20 "Transpose](2,D3n)) \n" }
{MPLTEXT 1 0 9 "end proc:" }{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0
 "" {MPLTEXT 1 0 26 "# Beispiel: H^1(RP^3,Z_2):" }}}{EXCHG {PARA 0 "> 
" 0 "" {MPLTEXT 1 0 11 "RPD2,RPD1:=" }{MPLTEXT 1 0 30 " Matrix([[2]]),
 Matrix([[0]]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6$-I'MatrixG6$%*prote
ctedGI(_syslibG6\"6#/I$%idGF(\"*!G\"za\"-F$6#/F+\"*)Q1_:" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 26 "CohomologyMod2(RPD2,RPD1);" }}
{PARA 11 "" 1 "" {XPPMATH 20 "6$-I&ArrayG%*protectedG6#/I$%idG6\"\"*k)
R99-I'MatrixG6$F%I(_syslibGF)6#/F(\"*+bOP\"" }}}{EXCHG {PARA 0 "> " 0 
"" {MPLTEXT 1 0 22 "Cohomology(RPD2,RPD1);" }{MPLTEXT 1 0 0 "" }}
{PARA 6 "" 1 "" {TEXT 216 20 "There are no cycles!" }}{PARA 8 "" 1 "" 
{TEXT 214 46 "Error, (in Homology) Matrix index out of range" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 24 "HomologyMod2(RPD2,RPD1);" }
{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "6$-I&ArrayG%*protect
edG6#/I$%idG6\"\"*[ljQ\"-I'MatrixG6$F%I(_syslibGF)6#/F(\"*3x2P\"" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "Homology(RPD2,RPD1);" }
{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" {XPPMATH 20 "6$-I&ArrayG%*protect
edG6#/I$%idG6\"\"*wzXS\"-I'MatrixG6$F%I(_syslibGF)6#/F(\"+'f.Q4\"" }}}
}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{SECT 0 {PARA 3 "" 0 ""
 {TEXT 212 88 "Calculation of a representative of the first cohomology
 of V_\{3,2\} with Z_2-coefficiens." }}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 134 "VEcken:=[]:\nfor i in \{-3,-2,-1,1,2,3\} do\n for j \+
in \{-3,-2,-1,1,2,3\} minus \{i,-i\} do\n  VEcken:=[op(VEcken),[i,j]]:
\n od:\nod:\nAnzVEcken:=" }{MPLTEXT 1 0 19 "ListLength(VEcken);" }
{MPLTEXT 1 0 8 "\nVEcken;" }}{PARA 206 "> " 0 "" {MPLTEXT 1 0 0 "" }}
{PARA 11 "" 1 "" {XPPMATH 20 "\"#C" }}{PARA 11 "" 1 "" {XPPMATH 20 "7:
7$!\"$!\"#7$F$!\"\"7$F$\"\"\"7$F$\"\"#7$F%F$7$F%F'7$F%F)7$F%\"\"$7$F'F
$7$F'F%7$F'F+7$F'F07$F)F$7$F)F%7$F)F+7$F)F07$F+F$7$F+F'7$F+F)7$F+F07$F
0F%7$F0F'7$F0F)7$F0F+" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 106 "V
Kanten:=[]:\nfor e1 in VEcken do\n for e2 in VEcken do\n  if e1<>e2 an
d ((e1[1]=e2[1] and e1[2]<>-e2[2]) or " }{MPLTEXT 1 0 75 "(e1[1]<>-e2[
1] and e1[2]=e2[2])) and\n    e1[1]+10*e1[2]<e2[1]+10*e2[2] then" }
{MPLTEXT 1 0 67 "\n   VKanten:=[op(VKanten),[e1,e2]]:\n  end if:\n od:
\nod:\nAnzVKanten:=" }{MPLTEXT 1 0 20 "ListLength(VKanten);" }{MPLTEXT
 1 0 9 "\nVKanten;" }}{PARA 11 "" 1 "" {XPPMATH 20 "\"#[" }}{PARA 11 "
" 1 "" {XPPMATH 20 "7R7$7$!\"$!\"#7$F%!\"\"7$F$7$F%\"\"\"7$F$7$F(F&7$F
$7$F+F&7$F'7$F%\"\"#7$F'7$F&F(7$F'7$F2F(7$F*F17$F*7$F&F+7$F*7$F2F+7$F1
7$F(F27$F17$F+F27$7$F&F%F47$FAF97$FA7$F(F%7$FA7$F+F%7$F47$F&\"\"$7$F47
$FIF(7$F9FH7$F97$FIF+7$FH7$F(FI7$FH7$F+FI7$FDF-7$FDF=7$FD7$F2F%7$F-FP7
$F-7$FIF&7$F=FP7$F=7$FIF27$FP7$F2FI7$FFF/7$FFF?7$FFFV7$F/FR7$F/FY7$F?F
R7$F?Ffn7$FRFhn7$FVF67$FVF;7$F6Fhn7$F6FK7$F;Fhn7$F;FN7$FYFK7$FYFN7$FKF
fn7$FNFfn" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 175 "VSeiten:=[]:
\nWeg1:=[[1,2],[3,2],[3,-1],[2,-1],[2,3],[1,3],[1,2]]:\nWeg2:=[[1,2],[
3,2],[3,-1],[-2,-1],[-2,3],[1,3],[1,2]]:\nWeg3:=[[1,2],[1,3],[-2,3],[-
1,3],[-1,2],[3,2],[1,2]]:\n" }{MPLTEXT 1 0 93 "Weg4:=[[1,-2],[3,-2],[3
,1],[2,1],[2,-3],[1,-3],[1,-2]]: #=Weg2, nur 2-te Koordinate geflippt
\n" }{MPLTEXT 1 0 95 "Weg5:=[[1,-2],[3,-2],[3,1],[-2,1],[-2,-3],[1,-3]
,[1,-2]]: #=Weg3, nur 2-te Koordinate geflippt\n" }{MPLTEXT 1 0 14 "fo
r g in G do\n" }{MPLTEXT 1 0 23 " VSeiten:=[op(VSeiten)," }{MPLTEXT 1 
0 1 "E" }{MPLTEXT 1 0 31 "lementVonGMalWegInED(g,Weg1)]:\n" }{MPLTEXT 
1 0 55 " VSeiten:=[op(VSeiten),ElementVonGMalWegInED(g,Weg2)]:\n" }
{MPLTEXT 1 0 55 " VSeiten:=[op(VSeiten),ElementVonGMalWegInED(g,Weg3)]
:\n" }{MPLTEXT 1 0 55 " VSeiten:=[op(VSeiten),ElementVonGMalWegInED(g,
Weg4)]:\n" }{MPLTEXT 1 0 55 " VSeiten:=[op(VSeiten),ElementVonGMalWegI
nED(g,Weg5)]:\n" }{MPLTEXT 1 0 4 "od:\n" }{MPLTEXT 1 0 12 "AnzVSeiten:
=" }{MPLTEXT 1 0 20 "ListLength(VSeiten);" }{MPLTEXT 1 0 15 "\nVSeiten
[1..5];" }}{PARA 11 "" 1 "" {XPPMATH 20 "\"$?\"" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "7'7)7$\"\"\"\"\"#7$\"\"$F&7$F(!\"\"7$F&F*7$F&F(7$F%F(F$7)
F$F'F)7$!\"#F*7$F0F(F-F$7)F$F-F17$F*F(7$F*F&F'F$7)7$F%F07$F(F07$F(F%7$
F&F%7$F&!\"$7$F%F;F67)F6F7F87$F0F%7$F0F;F<F6" }}}{EXCHG {PARA 0 "> " 0
 "" {MPLTEXT 1 0 211 "VD1:=Matrix(AnzVEcken,AnzVKanten):\nie:=1:\nfor \+
e in VEcken do\n ik:=1:\n for k in VKanten do\n  if k[1]=e or k[2]=e t
hen\n   VD1[ie,ik]:=1:\n  end if:\n  ik:=ik+1:\n od:\n ie:=ie+1:\nod:
\nVD1,LinearAlgebra[Transpose](VD1);" }}{PARA 11 "" 1 "" {XPPMATH 20 "
6$-I'MatrixG6$%*protectedGI(_syslibG6\"6#/I$%idGF(\"*%38Y8-F$6#/F+\"*'
\\wX8" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 36 "VD2:=Matrix(AnzVKa
nten,AnzVSeiten):\n" }{MPLTEXT 1 0 7 "ik:=1:\n" }{MPLTEXT 1 0 20 "for \+
k in VKanten do\n" }{MPLTEXT 1 0 8 " iw:=1:\n" }{MPLTEXT 1 0 45 " for \+
Weg in VSeiten do\n  Anf:=Weg[1]:\n  Weg:=" }{MPLTEXT 1 0 19 "subsop(1
=NULL,Weg);" }{MPLTEXT 1 0 63 "\n  for End in Weg do\n   if k=[Anf,End
] or k=[End,Anf] then\n    " }{MPLTEXT 1 0 15 "VD2[ik,iw]:=1:\n" }
{MPLTEXT 1 0 10 "   end if:" }{MPLTEXT 1 0 20 "\n   Anf:=End:\n  od:\n
" }{MPLTEXT 1 0 12 "  iw:=iw+1:\n" }{MPLTEXT 1 0 5 " od:\n" }{MPLTEXT 
1 0 11 " ik:=ik+1:\n" }{MPLTEXT 1 0 4 "od:\n" }{MPLTEXT 1 0 34 "VD2,Li
nearAlgebra[Transpose](VD2);" }{MPLTEXT 1 0 0 "" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6$-I'MatrixG6$%*protectedGI(_syslibG6\"6#/I$%idGF(\"+?U12
6-F$6#/F+\"*SPg[\"" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 60 "linal
g[iszero](LinearAlgebra[Modular][Multiply](2,VD1,VD2));" }}{PARA 11 ""
 1 "" {XPPMATH 20 "I%trueG%*protectedG" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 22 "HomologyMod2(VD2,VD1);" }{MPLTEXT 1 0 0 "" }}{PARA 11
 "" 1 "" {XPPMATH 20 "6$-I&ArrayG%*protectedG6#/I$%idG6\"\"+)3B86\"-I'
MatrixG6$F%I(_syslibGF)6#/F(\"*/%zS:" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 31 "Vb,VZ:=CohomologyMod2(VD2,VD1);" }{MPLTEXT 1 0 0 "" }
}{PARA 11 "" 1 "" {XPPMATH 20 "6$-I&ArrayG%*protectedG6#/I$%idG6\"\"*w
o(f8-I'MatrixG6$F%I(_syslibGF)6#/F(\"*W7K^\"" }}}{EXCHG {PARA 0 "> " 0
 "" {MPLTEXT 1 0 34 "VZ1:=convert(VZ[1..-1,24],'list');" }}{PARA 11 ""
 1 "" {XPPMATH 20 "7R\"\"\"\"\"!F#F$F$F#F$F$F#F$F#F$F$F$F#F$F$F$F#F$F#
F$F#F#F$F$F$F#F$F$F$F#F$F$F$F$F$F$F#F$F$F$F$F$F$F$F$F#" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "VZ9:" }{MPLTEXT 1 0 29 "=convert(VZ[
1..-1,9],'list');" }}{PARA 11 "" 1 "" {XPPMATH 20 "7R\"\"!F#F#F#F#F#F#
F#F#F#F#F#F#F#\"\"\"F#F#F#F#F#F#F#F$F$F$F#F#F#F#F#F#F#F#F#F#F#F#F#F#F#
F#F#F#F#F#F#F#F#" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "modp(VZ
1-VZ9,2);" }}{PARA 11 "" 1 "" {XPPMATH 20 "7R\"\"\"\"\"!F#F$F$F#F$F$F#
F$F#F$F$F$F$F$F$F$F#F$F#F$F$F$F#F$F$F#F$F$F$F#F$F$F$F$F$F$F#F$F$F$F$F$
F$F$F$F#" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 173 "VKokettenKante
n:=\{\}:\nfor i from 1 to ListLength(VZ1) do\n if (VZ1[i]-VZ9[i]) mod \+
2=1 then\n  VKokettenKanten:=VKokettenKanten union \{VKanten[i]\}:\n e
nd if:\nod:\nVKokettenKanten;" }}{PARA 11 "" 1 "" {XPPMATH 20 "<.7$7$!
\"$!\"#7$F%!\"\"7$7$F(\"\"#7$F(\"\"$7$7$F&\"\"\"7$F&F-7$7$F0F%7$F0F+7$
F$7$F(F&7$F'7$F&F(7$7$F%F0F/7$7$F%F+F*7$F1F,7$7$F+F%7$F+F(7$7$F-F07$F-
F+7$7$F(F%F?" }}}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 275 "# Auf Schlaufenrepraesentanten (bzgl. der G-Wirkung
) schauen wir uns an, ob die G-Schnitte sich mod 2 fortsetzen lassen o
der nicht. Die Paritaet der Anzahl dieser Schlaufenrepr., fuer die die
ses mod-2-Hindernis verschwindet, ist dann hoffentlich fuer beide G-Sc
hnitte gleich." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 15 "omega2vonW:=0:\n" }{MPLTEXT 1 0 32 "for Schlaufe in \+
SchlaufenRep do\n" }{MPLTEXT 1 0 116 " #wir zaehlen jetzt, wie haeufig
 sich der durch W gegebene Schnitt entlang der Schlaufe sich um R*(1,1
,1) wickelt. \n" }{MPLTEXT 1 0 148 " #Modulo 2 ist das das lokale Hind
ernis. Wenn wir das fuer alle Schlaufenrepresentanten aufaddieren, so \+
bekommen wir letztendlich omega2(W) heraus!\n" }{MPLTEXT 1 0 29 " for \+
Kante in Schlaufe[2] do\n" }{MPLTEXT 1 0 40 "  WvonKante:=[W[Kante[1]]
,W[Kante[2]]]:\n" }{MPLTEXT 1 0 21 "#  print(WvonKante):\n" }{MPLTEXT 
1 0 26 "  if WvonKante=[1,2] then\n" }{MPLTEXT 1 0 29 "   omega2vonW:=
omega2vonW+1:\n" }{MPLTEXT 1 0 28 "  elif WvonKante=[2,1] then\n" }
{MPLTEXT 1 0 29 "   omega2vonW:=omega2vonW-1:\n" }{MPLTEXT 1 0 10 "  e
nd if:\n" }{MPLTEXT 1 0 5 " od:\n" }{MPLTEXT 1 0 4 "od:\n" }{MPLTEXT 
1 0 11 "omega2vonW;" }}{PARA 11 "" 1 "" {XPPMATH 20 "\"\"!" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "omega2vonED:=0:\n" }{MPLTEXT 1 0 
32 "for Schlaufe in SchlaufenRep do\n" }{MPLTEXT 1 0 177 " #wir zaehle
n jetzt, wie haeufig sich der durch ED gegebene Schnitt entlang der Sc
hlaufe sich innerhalb V_\{3,2\} windet, d.h. wie haeufig er Kanten aus
 VKokettenKanten benutzt. \n" }{MPLTEXT 1 0 149 " #Modulo 2 ist das da
s lokale Hindernis. Wenn wir das fuer alle Schlaufenrepresentanten auf
addieren, so bekommen wir letztendlich omega2(ED) heraus!\n" }{MPLTEXT
 1 0 29 " for Kante in Schlaufe[2] do\n" }{MPLTEXT 1 0 40 "  Weg:=ED[K
ante]:\n  Anf:=Weg[1]:\n  Weg:=" }{MPLTEXT 1 0 22 "subsop(1=NULL,Weg);
\n  " }{MPLTEXT 1 0 40 "for End in Weg do\n   #print([Anf,End]);\n" }
{MPLTEXT 1 0 23 "   if member([Anf,End]," }{MPLTEXT 1 0 15 "VKokettenK
anten" }{MPLTEXT 1 0 22 ") or member([End,Anf]," }{MPLTEXT 1 0 15 "VKo
kettenKanten" }{MPLTEXT 1 0 12 ") then\n    #" }{MPLTEXT 1 0 18 "print
([Anf,End]);\n" }{MPLTEXT 1 0 32 "    omega2vonED:=omega2vonED+1:\n" }
{MPLTEXT 1 0 10 "   end if:" }{MPLTEXT 1 0 1 "\n" }{MPLTEXT 1 0 13 "  \+
 Anf:=End:\n" }{MPLTEXT 1 0 11 "  od:\n od:\n" }{MPLTEXT 1 0 4 "od:\n"
 }{MPLTEXT 1 0 12 "omega2vonED;" }}{PARA 11 "" 1 "" {XPPMATH 20 "\"#L"
 }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 
0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }
}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 
"" {MPLTEXT 1 0 770 "# Resulate:\n# H_2(M;Z) hat ist Z_2+Z_2+Z_2+Z_4, \+
wobei omega_2(W) ausgewertet auf die Elemente davon Null ist, wohingeg
en omega_2(E_D) ausgewertet auf den Erzeuger von Z_4 Null ist, aber au
f (unseren Wahlen von) den Erzeugern von den drei Z_2's 1 ist. Daher i
st die Abbildung Omega_2(M)---> Z_2 in der Koschorke-Sequenz surjektiv
, und damit wird das Hindernis Null. Damit existiert unsere Testabbild
ung: Hat man eine beliebige C^\\infty Einbettung der S^2 in R^3 gegebe
n und laesst dies unsere Testabbildung auf dem nicht freien Anteil von
 X definieren, so existiert eine aequivariante Fortsetzung dieser Test
abbildung auf ganz X! (leider...) Damit ist der (rein-) topologische A
nsatz nicht genug, um die Existenz von Oktaeder auf deformierten 2-Sph
aeren im R^3 zu zeigen." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 ""
 }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 
0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }
}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 
"" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 ""
 {MPLTEXT 1 0 0 "" }}}}
{MARK "0 0 0" 0 }{VIEWOPTS 1 1 0 75 100 1802 1 1 1 1 }{PAGENUMBERS 0 
1 2 33 1 1 }